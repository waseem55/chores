

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Nov 20 01:14:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F88 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  0105                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227  05E0                     __pidataBANK0:	
   228                           
   229                           ;initializer for _space_pos
   230  05E0  3410               	retlw	16
   231  05E1  3400               	retlw	0
   232                           
   233                           ;initializer for _print
   234  05E2  3401               	retlw	1
   235                           
   236                           	psect	stringtext
   237  0200                     __pstringtext:	
   238  0200                     stringtab:	
   239  0200                     __stringtab:	
   240                           
   241                           ;	String table - string pointers are 2 bytes each
   242  0200  1BFF               	btfsc	btemp+1,7
   243  0201  2A0A               	ljmp	stringcode
   244  0202  1383               	bcf	3,7
   245  0203  187F               	btfsc	btemp+1,0
   246  0204  1783               	bsf	3,7
   247  0205  0800               	movf	0,w
   248  0206  0A84               	incf	4,f
   249  0207  1903               	skipnz
   250  0208  0AFF               	incf	btemp+1,f
   251  0209  0008               	return
   252  020A                     stringcode:	
   253  020A  087F               	movf	btemp+1,w
   254  020B  397F               	andlw	127
   255  020C  008A               	movwf	10
   256  020D  0804               	movf	4,w
   257  020E  0A84               	incf	4,f
   258  020F  1903               	skipnz
   259  0210  0AFF               	incf	btemp+1,f
   260  0211  0082               	movwf	2
   261  0212                     __stringbase:	
   262  0212                     __end_of__stringtab:	
   263  0212                     _chores:	
   264  0212  3456               	retlw	86
   265  0213  3461               	retlw	97
   266  0214  3463               	retlw	99
   267  0215  3475               	retlw	117
   268  0216  3475               	retlw	117
   269  0217  346D               	retlw	109
   270  0218  3400               	retlw	0
   271  0219  3400               	retlw	0
   272  021A  3400               	retlw	0
   273  021B  3400               	retlw	0
   274  021C  3400               	retlw	0
   275  021D  3400               	retlw	0
   276  021E  3400               	retlw	0
   277  021F  3400               	retlw	0
   278  0220  3400               	retlw	0
   279  0221  3400               	retlw	0
   280  0222  3400               	retlw	0
   281  0223  3400               	retlw	0
   282  0224  3400               	retlw	0
   283  0225  3400               	retlw	0
   284  0226  3400               	retlw	0
   285  0227  3400               	retlw	0
   286  0228  3400               	retlw	0
   287  0229  3400               	retlw	0
   288  022A  3400               	retlw	0
   289  022B  3400               	retlw	0
   290  022C  3400               	retlw	0
   291  022D  3400               	retlw	0
   292  022E  3400               	retlw	0
   293  022F  3400               	retlw	0
   294  0230  3443               	retlw	67
   295  0231  346C               	retlw	108
   296  0232  3465               	retlw	101
   297  0233  3461               	retlw	97
   298  0234  346E               	retlw	110
   299  0235  3420               	retlw	32
   300  0236  3462               	retlw	98
   301  0237  3461               	retlw	97
   302  0238  3474               	retlw	116
   303  0239  3468               	retlw	104
   304  023A  3472               	retlw	114
   305  023B  346F               	retlw	111
   306  023C  346F               	retlw	111
   307  023D  346D               	retlw	109
   308  023E  3400               	retlw	0
   309  023F  3400               	retlw	0
   310  0240  3400               	retlw	0
   311  0241  3400               	retlw	0
   312  0242  3400               	retlw	0
   313  0243  3400               	retlw	0
   314  0244  3400               	retlw	0
   315  0245  3400               	retlw	0
   316  0246  3400               	retlw	0
   317  0247  3400               	retlw	0
   318  0248  3400               	retlw	0
   319  0249  3400               	retlw	0
   320  024A  3400               	retlw	0
   321  024B  3400               	retlw	0
   322  024C  3400               	retlw	0
   323  024D  3400               	retlw	0
   324  024E  344D               	retlw	77
   325  024F  346F               	retlw	111
   326  0250  3470               	retlw	112
   327  0251  3420               	retlw	32
   328  0252  3466               	retlw	102
   329  0253  346C               	retlw	108
   330  0254  346F               	retlw	111
   331  0255  346F               	retlw	111
   332  0256  3472               	retlw	114
   333  0257  3400               	retlw	0
   334  0258  3400               	retlw	0
   335  0259  3400               	retlw	0
   336  025A  3400               	retlw	0
   337  025B  3400               	retlw	0
   338  025C  3400               	retlw	0
   339  025D  3400               	retlw	0
   340  025E  3400               	retlw	0
   341  025F  3400               	retlw	0
   342  0260  3400               	retlw	0
   343  0261  3400               	retlw	0
   344  0262  3400               	retlw	0
   345  0263  3400               	retlw	0
   346  0264  3400               	retlw	0
   347  0265  3400               	retlw	0
   348  0266  3400               	retlw	0
   349  0267  3400               	retlw	0
   350  0268  3400               	retlw	0
   351  0269  3400               	retlw	0
   352  026A  3400               	retlw	0
   353  026B  3400               	retlw	0
   354  026C  3457               	retlw	87
   355  026D  3461               	retlw	97
   356  026E  3473               	retlw	115
   357  026F  3468               	retlw	104
   358  0270  3420               	retlw	32
   359  0271  3462               	retlw	98
   360  0272  3465               	retlw	101
   361  0273  3464               	retlw	100
   362  0274  3420               	retlw	32
   363  0275  3473               	retlw	115
   364  0276  3468               	retlw	104
   365  0277  3465               	retlw	101
   366  0278  3465               	retlw	101
   367  0279  3474               	retlw	116
   368  027A  3473               	retlw	115
   369  027B  3400               	retlw	0
   370  027C  3400               	retlw	0
   371  027D  3400               	retlw	0
   372  027E  3400               	retlw	0
   373  027F  3400               	retlw	0
   374  0280  3400               	retlw	0
   375  0281  3400               	retlw	0
   376  0282  3400               	retlw	0
   377  0283  3400               	retlw	0
   378  0284  3400               	retlw	0
   379  0285  3400               	retlw	0
   380  0286  3400               	retlw	0
   381  0287  3400               	retlw	0
   382  0288  3400               	retlw	0
   383  0289  3400               	retlw	0
   384  028A  3457               	retlw	87
   385  028B  3461               	retlw	97
   386  028C  3473               	retlw	115
   387  028D  3468               	retlw	104
   388  028E  3420               	retlw	32
   389  028F  3463               	retlw	99
   390  0290  3475               	retlw	117
   391  0291  3472               	retlw	114
   392  0292  3474               	retlw	116
   393  0293  3461               	retlw	97
   394  0294  3469               	retlw	105
   395  0295  346E               	retlw	110
   396  0296  3473               	retlw	115
   397  0297  3400               	retlw	0
   398  0298  3400               	retlw	0
   399  0299  3400               	retlw	0
   400  029A  3400               	retlw	0
   401  029B  3400               	retlw	0
   402  029C  3400               	retlw	0
   403  029D  3400               	retlw	0
   404  029E  3400               	retlw	0
   405  029F  3400               	retlw	0
   406  02A0  3400               	retlw	0
   407  02A1  3400               	retlw	0
   408  02A2  3400               	retlw	0
   409  02A3  3400               	retlw	0
   410  02A4  3400               	retlw	0
   411  02A5  3400               	retlw	0
   412  02A6  3400               	retlw	0
   413  02A7  3400               	retlw	0
   414  02A8  3444               	retlw	68
   415  02A9  3475               	retlw	117
   416  02AA  3473               	retlw	115
   417  02AB  3474               	retlw	116
   418  02AC  3469               	retlw	105
   419  02AD  346E               	retlw	110
   420  02AE  3467               	retlw	103
   421  02AF  3400               	retlw	0
   422  02B0  3400               	retlw	0
   423  02B1  3400               	retlw	0
   424  02B2  3400               	retlw	0
   425  02B3  3400               	retlw	0
   426  02B4  3400               	retlw	0
   427  02B5  3400               	retlw	0
   428  02B6  3400               	retlw	0
   429  02B7  3400               	retlw	0
   430  02B8  3400               	retlw	0
   431  02B9  3400               	retlw	0
   432  02BA  3400               	retlw	0
   433  02BB  3400               	retlw	0
   434  02BC  3400               	retlw	0
   435  02BD  3400               	retlw	0
   436  02BE  3400               	retlw	0
   437  02BF  3400               	retlw	0
   438  02C0  3400               	retlw	0
   439  02C1  3400               	retlw	0
   440  02C2  3400               	retlw	0
   441  02C3  3400               	retlw	0
   442  02C4  3400               	retlw	0
   443  02C5  3400               	retlw	0
   444  02C6  3443               	retlw	67
   445  02C7  346C               	retlw	108
   446  02C8  3465               	retlw	101
   447  02C9  3461               	retlw	97
   448  02CA  346E               	retlw	110
   449  02CB  3420               	retlw	32
   450  02CC  346D               	retlw	109
   451  02CD  3469               	retlw	105
   452  02CE  3463               	retlw	99
   453  02CF  3472               	retlw	114
   454  02D0  346F               	retlw	111
   455  02D1  3477               	retlw	119
   456  02D2  3461               	retlw	97
   457  02D3  3476               	retlw	118
   458  02D4  3465               	retlw	101
   459  02D5  3400               	retlw	0
   460  02D6  3400               	retlw	0
   461  02D7  3400               	retlw	0
   462  02D8  3400               	retlw	0
   463  02D9  3400               	retlw	0
   464  02DA  3400               	retlw	0
   465  02DB  3400               	retlw	0
   466  02DC  3400               	retlw	0
   467  02DD  3400               	retlw	0
   468  02DE  3400               	retlw	0
   469  02DF  3400               	retlw	0
   470  02E0  3400               	retlw	0
   471  02E1  3400               	retlw	0
   472  02E2  3400               	retlw	0
   473  02E3  3400               	retlw	0
   474  02E4  3453               	retlw	83
   475  02E5  3463               	retlw	99
   476  02E6  3472               	retlw	114
   477  02E7  3475               	retlw	117
   478  02E8  3462               	retlw	98
   479  02E9  3420               	retlw	32
   480  02EA  3464               	retlw	100
   481  02EB  346F               	retlw	111
   482  02EC  346F               	retlw	111
   483  02ED  3472               	retlw	114
   484  02EE  3473               	retlw	115
   485  02EF  3420               	retlw	32
   486  02F0  3461               	retlw	97
   487  02F1  346E               	retlw	110
   488  02F2  3464               	retlw	100
   489  02F3  3420               	retlw	32
   490  02F4  3463               	retlw	99
   491  02F5  3461               	retlw	97
   492  02F6  3462               	retlw	98
   493  02F7  3469               	retlw	105
   494  02F8  346E               	retlw	110
   495  02F9  3465               	retlw	101
   496  02FA  3474               	retlw	116
   497  02FB  3473               	retlw	115
   498  02FC  3400               	retlw	0
   499  02FD  3400               	retlw	0
   500  02FE  3400               	retlw	0
   501  02FF  3400               	retlw	0
   502  0300  3400               	retlw	0
   503  0301  3400               	retlw	0
   504  0302  344F               	retlw	79
   505  0303  3472               	retlw	114
   506  0304  3467               	retlw	103
   507  0305  3461               	retlw	97
   508  0306  346E               	retlw	110
   509  0307  3469               	retlw	105
   510  0308  347A               	retlw	122
   511  0309  3465               	retlw	101
   512  030A  3420               	retlw	32
   513  030B  3463               	retlw	99
   514  030C  346C               	retlw	108
   515  030D  346F               	retlw	111
   516  030E  3473               	retlw	115
   517  030F  3465               	retlw	101
   518  0310  3474               	retlw	116
   519  0311  3400               	retlw	0
   520  0312  3400               	retlw	0
   521  0313  3400               	retlw	0
   522  0314  3400               	retlw	0
   523  0315  3400               	retlw	0
   524  0316  3400               	retlw	0
   525  0317  3400               	retlw	0
   526  0318  3400               	retlw	0
   527  0319  3400               	retlw	0
   528  031A  3400               	retlw	0
   529  031B  3400               	retlw	0
   530  031C  3400               	retlw	0
   531  031D  3400               	retlw	0
   532  031E  3400               	retlw	0
   533  031F  3400               	retlw	0
   534  0320  3443               	retlw	67
   535  0321  346C               	retlw	108
   536  0322  3465               	retlw	101
   537  0323  3461               	retlw	97
   538  0324  346E               	retlw	110
   539  0325  3420               	retlw	32
   540  0326  3475               	retlw	117
   541  0327  346E               	retlw	110
   542  0328  3464               	retlw	100
   543  0329  3465               	retlw	101
   544  032A  3472               	retlw	114
   545  032B  3420               	retlw	32
   546  032C  3473               	retlw	115
   547  032D  3469               	retlw	105
   548  032E  346E               	retlw	110
   549  032F  346B               	retlw	107
   550  0330  3473               	retlw	115
   551  0331  3400               	retlw	0
   552  0332  3400               	retlw	0
   553  0333  3400               	retlw	0
   554  0334  3400               	retlw	0
   555  0335  3400               	retlw	0
   556  0336  3400               	retlw	0
   557  0337  3400               	retlw	0
   558  0338  3400               	retlw	0
   559  0339  3400               	retlw	0
   560  033A  3400               	retlw	0
   561  033B  3400               	retlw	0
   562  033C  3400               	retlw	0
   563  033D  3400               	retlw	0
   564  033E  3443               	retlw	67
   565  033F  346C               	retlw	108
   566  0340  3465               	retlw	101
   567  0341  3461               	retlw	97
   568  0342  346E               	retlw	110
   569  0343  3420               	retlw	32
   570  0344  3466               	retlw	102
   571  0345  3472               	retlw	114
   572  0346  3469               	retlw	105
   573  0347  3464               	retlw	100
   574  0348  3467               	retlw	103
   575  0349  3465               	retlw	101
   576  034A  3400               	retlw	0
   577  034B  3400               	retlw	0
   578  034C  3400               	retlw	0
   579  034D  3400               	retlw	0
   580  034E  3400               	retlw	0
   581  034F  3400               	retlw	0
   582  0350  3400               	retlw	0
   583  0351  3400               	retlw	0
   584  0352  3400               	retlw	0
   585  0353  3400               	retlw	0
   586  0354  3400               	retlw	0
   587  0355  3400               	retlw	0
   588  0356  3400               	retlw	0
   589  0357  3400               	retlw	0
   590  0358  3400               	retlw	0
   591  0359  3400               	retlw	0
   592  035A  3400               	retlw	0
   593  035B  3400               	retlw	0
   594  035C                     __end_of_chores:	
   595  035C                     _users:	
   596  035C  3457               	retlw	87
   597  035D  3461               	retlw	97
   598  035E  3473               	retlw	115
   599  035F  3465               	retlw	101
   600  0360  3465               	retlw	101
   601  0361  346D               	retlw	109
   602  0362  3400               	retlw	0
   603  0363  3448               	retlw	72
   604  0364  3469               	retlw	105
   605  0365  3462               	retlw	98
   606  0366  3461               	retlw	97
   607  0367  3400               	retlw	0
   608  0368  3400               	retlw	0
   609  0369  3400               	retlw	0
   610  036A                     __end_of_users:	
   611  000E                     _TMR1	set	14
   612  0001                     _TMR0	set	1
   613  0006                     _PORTB	set	6
   614  0005                     _PORTA	set	5
   615  002F                     _RA7	set	47
   616  005A                     _TMR0IF	set	90
   617  005F                     _GIE	set	95
   618  005D                     _TMR0IE	set	93
   619  005C                     _INT0IE	set	92
   620  0059                     _INT0IF	set	89
   621  0033                     _RB3	set	51
   622  0032                     _RB2	set	50
   623  0031                     _RB1	set	49
   624  0086                     _TRISB	set	134
   625  0085                     _TRISA	set	133
   626  0408                     _PS0	set	1032
   627  0409                     _PS1	set	1033
   628  040A                     _PS2	set	1034
   629  040B                     _PSA	set	1035
   630  040D                     _T0CS	set	1037
   631  036A                     STR_1:	
   632  036A  3473               	retlw	115	;'s'
   633  036B  346C               	retlw	108	;'l'
   634  036C  3465               	retlw	101	;'e'
   635  036D  3465               	retlw	101	;'e'
   636  036E  3470               	retlw	112	;'p'
   637  036F  3420               	retlw	32	;' '
   638  0370  3474               	retlw	116	;'t'
   639  0371  3469               	retlw	105	;'i'
   640  0372  346D               	retlw	109	;'m'
   641  0373  3465               	retlw	101	;'e'
   642  0374  3421               	retlw	33	;'!'
   643  0375  3400               	retlw	0
   644                           
   645                           ; #config settings
   646  0000                     
   647                           	psect	cinit
   648  000D                     start_initialization:	
   649  000D                     __initialization:	
   650                           
   651                           ; Initialize objects allocated to BANK0
   652  000D  118A  25E0  118A   	fcall	__pidataBANK0	;fetch initializer
   653  0010  00BE               	movwf	__pdataBANK0& (0+127)
   654  0011  118A  25E1  118A   	fcall	__pidataBANK0+1	;fetch initializer
   655  0014  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   656  0015  118A  25E2         	fcall	__pidataBANK0+2	;fetch initializer
   657  0017  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   658                           
   659                           ; Clear objects allocated to BANK0
   660  0018  01B4               	clrf	__pbssBANK0& (0+127)
   661  0019  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   662  001A  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   663  001B  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   664  001C  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   665  001D  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   666  001E  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   667  001F  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   668  0020  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   669  0021  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   670                           
   671                           ; Clear objects allocated to COMMON
   672  0022  01F7               	clrf	__pbssCOMMON& (0+127)
   673  0023  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   674  0024  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   675  0025                     end_of_initialization:	
   676                           ;End of C runtime variable initialization code
   677                           
   678  0025                     __end_of__initialization:	
   679  0025  0183               	clrf	3
   680  0026  118A  2828         	ljmp	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMMON
   683  0077                     __pbssCOMMON:	
   684  0077                     _scores:	
   685  0077                     	ds	2
   686  0079                     _lastrb:	
   687  0079                     	ds	1
   688                           
   689                           	psect	bssBANK0
   690  0034                     __pbssBANK0:	
   691  0034                     _text:	
   692  0034                     	ds	2
   693  0036                     _rand:	
   694  0036                     	ds	2
   695  0038                     random@count:	
   696  0038                     	ds	1
   697  0039                     random@rand:	
   698  0039                     	ds	1
   699  003A                     _long_text:	
   700  003A                     	ds	1
   701  003B                     _user:	
   702  003B                     	ds	1
   703  003C                     _asleep:	
   704  003C                     	ds	1
   705  003D                     _btn_pressed:	
   706  003D                     	ds	1
   707                           
   708                           	psect	dataBANK0
   709  003E                     __pdataBANK0:	
   710  003E                     _space_pos:	
   711  003E                     	ds	2
   712  0040                     _print:	
   713  0040                     	ds	1
   714                           
   715                           	psect	cstackCOMMON
   716  0070                     __pcstackCOMMON:	
   717  0070                     ?_lcd_cmd:	
   718  0070                     ?_lcd_data:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_enable:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_random:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_lcd_clear_all:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_lcd_clear_line:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_lcd_init:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_main:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_testing:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?i1_lcd_clear_all:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?i1_lcd_cmd:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?i1_enable:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ??i1_enable:	
   752                           ; 1 bytes @ 0x0
   753                           
   754                           
   755                           ; 1 bytes @ 0x0
   756  0070                     	ds	1
   757  0071                     ??i1_lcd_cmd:	
   758                           
   759                           ; 1 bytes @ 0x1
   760  0071                     	ds	2
   761  0073                     i1lcd_cmd@c:	
   762                           
   763                           ; 1 bytes @ 0x3
   764  0073                     	ds	1
   765  0074                     ??i1_lcd_clear_all:	
   766                           
   767                           ; 1 bytes @ 0x4
   768  0074                     	ds	1
   769  0075                     ??_testing:	
   770                           
   771                           ; 1 bytes @ 0x5
   772  0075                     	ds	2
   773                           
   774                           	psect	cstackBANK0
   775  0020                     __pcstackBANK0:	
   776  0020                     ??_enable:	
   777  0020                     ??_random:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0020                     ?_strlen:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0020                     ?___bmul:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0020                     ___bmul@multiplicand:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0020                     strlen@string:	
   790                           ; 1 bytes @ 0x0
   791                           
   792                           
   793                           ; 2 bytes @ 0x0
   794  0020                     	ds	1
   795  0021                     ??_lcd_cmd:	
   796  0021                     ??_lcd_data:	
   797                           ; 1 bytes @ 0x1
   798                           
   799  0021                     ??___bmul:	
   800                           ; 1 bytes @ 0x1
   801                           
   802  0021                     random@rbit:	
   803                           ; 1 bytes @ 0x1
   804                           
   805                           
   806                           ; 1 bytes @ 0x1
   807  0021                     	ds	1
   808  0022                     ??_strlen:	
   809  0022                     random@original:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0022                     ___bmul@product:	
   813                           ; 1 bytes @ 0x2
   814                           
   815                           
   816                           ; 1 bytes @ 0x2
   817  0022                     	ds	1
   818  0023                     ?___awmod:	
   819  0023                     lcd_cmd@c:	
   820                           ; 2 bytes @ 0x3
   821                           
   822  0023                     lcd_data@d:	
   823                           ; 1 bytes @ 0x3
   824                           
   825  0023                     ___bmul@multiplier:	
   826                           ; 1 bytes @ 0x3
   827                           
   828  0023                     strlen@i:	
   829                           ; 1 bytes @ 0x3
   830                           
   831  0023                     ___awmod@divisor:	
   832                           ; 2 bytes @ 0x3
   833                           
   834                           
   835                           ; 2 bytes @ 0x3
   836  0023                     	ds	1
   837  0024                     ?_lcd_print:	
   838  0024                     ??_lcd_clear_all:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0024                     ??_lcd_clear_line:	
   842                           ; 1 bytes @ 0x4
   843                           
   844  0024                     ??_lcd_init:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0024                     lcd_print@text:	
   848                           ; 1 bytes @ 0x4
   849                           
   850                           
   851                           ; 2 bytes @ 0x4
   852  0024                     	ds	1
   853  0025                     lcd_clear_line@line:	
   854  0025                     strlen@result:	
   855                           ; 1 bytes @ 0x5
   856                           
   857  0025                     ___awmod@dividend:	
   858                           ; 1 bytes @ 0x5
   859                           
   860                           
   861                           ; 2 bytes @ 0x5
   862  0025                     	ds	1
   863  0026                     lcd_print@size:	
   864  0026                     lcd_clear_line@i:	
   865                           ; 1 bytes @ 0x6
   866                           
   867                           
   868                           ; 2 bytes @ 0x6
   869  0026                     	ds	1
   870  0027                     ??___awmod:	
   871  0027                     lcd_print@line:	
   872                           ; 1 bytes @ 0x7
   873                           
   874                           
   875                           ; 1 bytes @ 0x7
   876  0027                     	ds	1
   877  0028                     lcd_print@pos:	
   878  0028                     ___awmod@counter:	
   879                           ; 1 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883  0028                     	ds	1
   884  0029                     ??_lcd_print:	
   885  0029                     ___awmod@sign:	
   886                           ; 1 bytes @ 0x9
   887                           
   888                           
   889                           ; 1 bytes @ 0x9
   890  0029                     	ds	1
   891  002A                     ?___wmul:	
   892  002A                     lcd_print@pointer:	
   893                           ; 2 bytes @ 0xA
   894                           
   895  002A                     ___wmul@multiplier:	
   896                           ; 2 bytes @ 0xA
   897                           
   898                           
   899                           ; 2 bytes @ 0xA
   900  002A                     	ds	2
   901  002C                     ___wmul@multiplicand:	
   902                           
   903                           ; 2 bytes @ 0xC
   904  002C                     	ds	2
   905  002E                     ??___wmul:	
   906  002E                     ___wmul@product:	
   907                           ; 1 bytes @ 0xE
   908                           
   909                           
   910                           ; 2 bytes @ 0xE
   911  002E                     	ds	2
   912  0030                     ??_main:	
   913                           
   914                           ; 1 bytes @ 0x10
   915  0030                     	ds	4
   916                           
   917                           	psect	maintext
   918  0028                     __pmaintext:	
   919 ;;
   920 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   921 ;;
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 57 in file "Main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : B00/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          0       4       0       0       0
   941 ;;      Totals:         0       4       0       0       0
   942 ;;Total ram usage:        4 bytes
   943 ;; Hardware stack levels required when called:    7
   944 ;; This function calls:
   945 ;;		___awmod
   946 ;;		___bmul
   947 ;;		___wmul
   948 ;;		_lcd_clear_all
   949 ;;		_lcd_clear_line
   950 ;;		_lcd_cmd
   951 ;;		_lcd_init
   952 ;;		_lcd_print
   953 ;;		_random
   954 ;;		_strlen
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _main
   962  0028                     _main:	
   963                           
   964                           ;Main.c: 59:     TRISA = 0xc0;
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   968  0028  30C0               	movlw	192
   969  0029  1683               	bsf	3,5	;RP0=1, select bank1
   970  002A  1303               	bcf	3,6	;RP1=0, select bank1
   971  002B  0085               	movwf	5	;volatile
   972                           
   973                           ;Main.c: 60:     TRISB = 0x01;
   974  002C  3001               	movlw	1
   975  002D  0086               	movwf	6	;volatile
   976                           
   977                           ;Main.c: 61:     PORTA = 0x00;
   978  002E  1283               	bcf	3,5	;RP0=0, select bank0
   979  002F  1303               	bcf	3,6	;RP1=0, select bank0
   980  0030  0185               	clrf	5	;volatile
   981                           
   982                           ;Main.c: 62:     PORTB = 0x00;
   983  0031  0186               	clrf	6	;volatile
   984                           
   985                           ;Main.c: 63:     RB3 = 1;
   986  0032  1586               	bsf	6,3	;volatile
   987                           
   988                           ;Main.c: 64:     INT0IF = 0;
   989  0033  108B               	bcf	11,1	;volatile
   990                           
   991                           ;Main.c: 65:     INT0IE = 1;
   992  0034  160B               	bsf	11,4	;volatile
   993                           
   994                           ;Main.c: 66:     T0CS = 0;
   995  0035  1683               	bsf	3,5	;RP0=1, select bank1
   996  0036  1303               	bcf	3,6	;RP1=0, select bank1
   997  0037  1281               	bcf	1,5	;volatile
   998                           
   999                           ;Main.c: 67:     PSA = 0;
  1000  0038  1181               	bcf	1,3	;volatile
  1001                           
  1002                           ;Main.c: 68:     PS2 = 1;
  1003  0039  1501               	bsf	1,2	;volatile
  1004                           
  1005                           ;Main.c: 69:     PS1 = 1;
  1006  003A  1481               	bsf	1,1	;volatile
  1007                           
  1008                           ;Main.c: 70:     PS0 = 1;
  1009  003B  1401               	bsf	1,0	;volatile
  1010                           
  1011                           ;Main.c: 71:     TMR0IE = 0;
  1012  003C  128B               	bcf	11,5	;volatile
  1013                           
  1014                           ;Main.c: 73:     GIE = 1;
  1015  003D  178B               	bsf	11,7	;volatile
  1016                           
  1017                           ;Main.c: 76:     lcd_init();
  1018  003E  118A  2376  118A   	fcall	_lcd_init
  1019                           
  1020                           ;Main.c: 78:     rand = (random() % 10);
  1021  0041  300A               	movlw	10
  1022  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0044  00A3               	movwf	___awmod@divisor
  1025  0045  3000               	movlw	0
  1026  0046  00A4               	movwf	___awmod@divisor+1
  1027  0047  118A  24E3  118A   	fcall	_random
  1028  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1029  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1030  004C  00B0               	movwf	??_main
  1031  004D  01B1               	clrf	??_main+1
  1032  004E  0830               	movf	??_main,w
  1033  004F  00A5               	movwf	___awmod@dividend
  1034  0050  0831               	movf	??_main+1,w
  1035  0051  00A6               	movwf	___awmod@dividend+1
  1036  0052  118A  23CB  118A   	fcall	___awmod
  1037  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0057  0824               	movf	?___awmod+1,w
  1040  0058  00B7               	movwf	_rand+1
  1041  0059  0823               	movf	?___awmod,w
  1042  005A  00B6               	movwf	_rand
  1043                           
  1044                           ;Main.c: 79:     text = &chores[rand % 11][0];
  1045  005B  0837               	movf	_rand+1,w
  1046  005C  00A6               	movwf	___awmod@dividend+1
  1047  005D  0836               	movf	_rand,w
  1048  005E  00A5               	movwf	___awmod@dividend
  1049  005F  300B               	movlw	11
  1050  0060  00A3               	movwf	___awmod@divisor
  1051  0061  3000               	movlw	0
  1052  0062  00A4               	movwf	___awmod@divisor+1
  1053  0063  118A  23CB  118A   	fcall	___awmod
  1054  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0068  0824               	movf	?___awmod+1,w
  1057  0069  00AB               	movwf	___wmul@multiplier+1
  1058  006A  0823               	movf	?___awmod,w
  1059  006B  00AA               	movwf	___wmul@multiplier
  1060  006C  301E               	movlw	30
  1061  006D  00AC               	movwf	___wmul@multiplicand
  1062  006E  3000               	movlw	0
  1063  006F  00AD               	movwf	___wmul@multiplicand+1
  1064  0070  118A  2538  118A   	fcall	___wmul
  1065  0073  3012               	movlw	low (_chores| (0+32768))
  1066  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0076  00B0               	movwf	??_main
  1069  0077  3082               	movlw	high (_chores| (0+32768))
  1070  0078  00B1               	movwf	??_main+1
  1071  0079  082A               	movf	?___wmul,w
  1072  007A  0730               	addwf	??_main,w
  1073  007B  00B2               	movwf	??_main+2
  1074  007C  082B               	movf	?___wmul+1,w
  1075  007D  1803               	skipnc
  1076  007E  0A2B               	incf	?___wmul+1,w
  1077  007F  0731               	addwf	??_main+1,w
  1078  0080  00B3               	movwf	??_main+3
  1079  0081  0832               	movf	??_main+2,w
  1080  0082  00B4               	movwf	_text
  1081  0083  0833               	movf	??_main+3,w
  1082  0084  00B5               	movwf	_text+1
  1083                           
  1084                           ;Main.c: 80:     if (strlen(text) > 16)
  1085  0085  0834               	movf	_text,w
  1086  0086  00A0               	movwf	strlen@string
  1087  0087  0835               	movf	_text+1,w
  1088  0088  00A1               	movwf	strlen@string+1
  1089  0089  118A  257D  118A   	fcall	_strlen
  1090  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1091  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1092  008E  00B0               	movwf	??_main
  1093  008F  3011               	movlw	17
  1094  0090  0230               	subwf	??_main,w
  1095  0091  1C03               	skipc
  1096  0092  28B2               	goto	l1545
  1097                           
  1098                           ;Main.c: 81:     {;Main.c: 82:         for (space_pos = 16; text[space_pos] != ' ' && sp
      +                          ace_pos != 0; space_pos--);
  1099  0093  3010               	movlw	16
  1100  0094  00BE               	movwf	_space_pos
  1101  0095  3000               	movlw	0
  1102  0096  00BF               	movwf	_space_pos+1
  1103  0097  28A2               	goto	l1541
  1104  0098                     l1543:	
  1105  0098  083E               	movf	_space_pos,w
  1106  0099  043F               	iorwf	_space_pos+1,w
  1107  009A  1903               	btfsc	3,2
  1108  009B  28B0               	goto	l128
  1109  009C  30FF               	movlw	255
  1110  009D  07BE               	addwf	_space_pos,f
  1111  009E  1803               	skipnc
  1112  009F  0ABF               	incf	_space_pos+1,f
  1113  00A0  30FF               	movlw	255
  1114  00A1  07BF               	addwf	_space_pos+1,f
  1115  00A2                     l1541:	
  1116  00A2  083E               	movf	_space_pos,w
  1117  00A3  0734               	addwf	_text,w
  1118  00A4  0084               	movwf	4
  1119  00A5  083F               	movf	_space_pos+1,w
  1120  00A6  1803               	skipnc
  1121  00A7  0A3F               	incf	_space_pos+1,w
  1122  00A8  0735               	addwf	_text+1,w
  1123  00A9  00FF               	movwf	127
  1124  00AA  118A  2200  118A   	fcall	stringtab
  1125  00AD  3A20               	xorlw	32
  1126  00AE  1D03               	btfss	3,2
  1127  00AF  2898               	goto	l1543
  1128  00B0                     l128:	
  1129                           
  1130                           ;Main.c: 83:         long_text = 1;
  1131  00B0  01BA               	clrf	_long_text
  1132  00B1  0ABA               	incf	_long_text,f
  1133  00B2                     l1545:	
  1134                           
  1135                           ;Main.c: 87:     {;Main.c: 88:         if (asleep)
  1136  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00B4  083C               	movf	_asleep,w
  1139  00B5  1903               	btfsc	3,2
  1140  00B6  28E1               	goto	l1561
  1141                           
  1142                           ;Main.c: 89:         {;Main.c: 90:             lcd_clear_all();
  1143  00B7  118A  25BE  118A   	fcall	_lcd_clear_all
  1144                           
  1145                           ;Main.c: 91:             lcd_print("sleep time!", 16, 0, 0);
  1146  00BA  306A               	movlw	low (STR_1| (0+32768))
  1147  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00BD  00A4               	movwf	lcd_print@text
  1150  00BE  3083               	movlw	high (STR_1| (0+32768))
  1151  00BF  00A5               	movwf	lcd_print@text+1
  1152  00C0  3010               	movlw	16
  1153  00C1  00B0               	movwf	??_main
  1154  00C2  0830               	movf	??_main,w
  1155  00C3  00A6               	movwf	lcd_print@size
  1156  00C4  01A7               	clrf	lcd_print@line
  1157  00C5  01A8               	clrf	lcd_print@pos
  1158  00C6  118A  2418  118A   	fcall	_lcd_print
  1159                           
  1160                           ;Main.c: 92:             _delay((unsigned long)((500)*(31000/4000.0)));
  1161  00C9  3006               	movlw	6
  1162  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1163  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1164  00CC  00B1               	movwf	??_main+1
  1165  00CD  3006               	movlw	6
  1166  00CE  00B0               	movwf	??_main
  1167  00CF                     u1017:	
  1168  00CF  0BB0               	decfsz	??_main,f
  1169  00D0  28CF               	goto	u1017
  1170  00D1  0BB1               	decfsz	??_main+1,f
  1171  00D2  28CF               	goto	u1017
  1172                           
  1173                           ;Main.c: 93:             lcd_cmd(0x08);
  1174  00D3  3008               	movlw	8
  1175  00D4  118A  2451  118A   	fcall	_lcd_cmd
  1176                           
  1177                           ;Main.c: 94:             btn_pressed = 0;
  1178  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1179  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1180  00D9  01BD               	clrf	_btn_pressed
  1181                           
  1182                           ;Main.c: 95:             RB3 = 0;
  1183  00DA  1186               	bcf	6,3	;volatile
  1184  00DB  0063               	sleep	;# 
  1185                           
  1186                           ;Main.c: 97:             print = 1;
  1187  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00DE  01C0               	clrf	_print
  1190  00DF  0AC0               	incf	_print,f
  1191                           
  1192                           ;Main.c: 98:         }
  1193  00E0  2961               	goto	l1585
  1194  00E1                     l1561:	
  1195  00E1  083D               	movf	_btn_pressed,w
  1196  00E2  1903               	btfsc	3,2
  1197  00E3  2961               	goto	l1585
  1198                           
  1199                           ;Main.c: 100:         {;Main.c: 101:             print = 1;
  1200  00E4  01C0               	clrf	_print
  1201  00E5  0AC0               	incf	_print,f
  1202                           
  1203                           ;Main.c: 102:             rand = (random() % 10);
  1204  00E6  300A               	movlw	10
  1205  00E7  00A3               	movwf	___awmod@divisor
  1206  00E8  3000               	movlw	0
  1207  00E9  00A4               	movwf	___awmod@divisor+1
  1208  00EA  118A  24E3  118A   	fcall	_random
  1209  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00EF  00B0               	movwf	??_main
  1212  00F0  01B1               	clrf	??_main+1
  1213  00F1  0830               	movf	??_main,w
  1214  00F2  00A5               	movwf	___awmod@dividend
  1215  00F3  0831               	movf	??_main+1,w
  1216  00F4  00A6               	movwf	___awmod@dividend+1
  1217  00F5  118A  23CB  118A   	fcall	___awmod
  1218  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1219  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1220  00FA  0824               	movf	?___awmod+1,w
  1221  00FB  00B7               	movwf	_rand+1
  1222  00FC  0823               	movf	?___awmod,w
  1223  00FD  00B6               	movwf	_rand
  1224                           
  1225                           ;Main.c: 103:             text = &chores[rand % 11][0];
  1226  00FE  0837               	movf	_rand+1,w
  1227  00FF  00A6               	movwf	___awmod@dividend+1
  1228  0100  0836               	movf	_rand,w
  1229  0101  00A5               	movwf	___awmod@dividend
  1230  0102  300B               	movlw	11
  1231  0103  00A3               	movwf	___awmod@divisor
  1232  0104  3000               	movlw	0
  1233  0105  00A4               	movwf	___awmod@divisor+1
  1234  0106  118A  23CB  118A   	fcall	___awmod
  1235  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1236  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1237  010B  0824               	movf	?___awmod+1,w
  1238  010C  00AB               	movwf	___wmul@multiplier+1
  1239  010D  0823               	movf	?___awmod,w
  1240  010E  00AA               	movwf	___wmul@multiplier
  1241  010F  301E               	movlw	30
  1242  0110  00AC               	movwf	___wmul@multiplicand
  1243  0111  3000               	movlw	0
  1244  0112  00AD               	movwf	___wmul@multiplicand+1
  1245  0113  118A  2538  118A   	fcall	___wmul
  1246  0116  3012               	movlw	low (_chores| (0+32768))
  1247  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0119  00B0               	movwf	??_main
  1250  011A  3082               	movlw	high (_chores| (0+32768))
  1251  011B  00B1               	movwf	??_main+1
  1252  011C  082A               	movf	?___wmul,w
  1253  011D  0730               	addwf	??_main,w
  1254  011E  00B2               	movwf	??_main+2
  1255  011F  082B               	movf	?___wmul+1,w
  1256  0120  1803               	skipnc
  1257  0121  0A2B               	incf	?___wmul+1,w
  1258  0122  0731               	addwf	??_main+1,w
  1259  0123  00B3               	movwf	??_main+3
  1260  0124  0832               	movf	??_main+2,w
  1261  0125  00B4               	movwf	_text
  1262  0126  0833               	movf	??_main+3,w
  1263  0127  00B5               	movwf	_text+1
  1264                           
  1265                           ;Main.c: 104:             user = rand % 2;
  1266  0128  0836               	movf	_rand,w
  1267  0129  3901               	andlw	1
  1268  012A  00B0               	movwf	??_main
  1269  012B  0830               	movf	??_main,w
  1270  012C  00BB               	movwf	_user
  1271                           
  1272                           ;Main.c: 105:             if (strlen(text) > 16)
  1273  012D  0834               	movf	_text,w
  1274  012E  00A0               	movwf	strlen@string
  1275  012F  0835               	movf	_text+1,w
  1276  0130  00A1               	movwf	strlen@string+1
  1277  0131  118A  257D  118A   	fcall	_strlen
  1278  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0136  00B0               	movwf	??_main
  1281  0137  3011               	movlw	17
  1282  0138  0230               	subwf	??_main,w
  1283  0139  1C03               	skipc
  1284  013A  295B               	goto	l1579
  1285                           
  1286                           ;Main.c: 106:             {;Main.c: 107:                 for (space_pos = 16; text[space
      +                          _pos] != ' ' && space_pos != 0; space_pos--);
  1287  013B  3010               	movlw	16
  1288  013C  00BE               	movwf	_space_pos
  1289  013D  3000               	movlw	0
  1290  013E  00BF               	movwf	_space_pos+1
  1291  013F  294A               	goto	l1575
  1292  0140                     l1577:	
  1293  0140  083E               	movf	_space_pos,w
  1294  0141  043F               	iorwf	_space_pos+1,w
  1295  0142  1903               	btfsc	3,2
  1296  0143  2958               	goto	l138
  1297  0144  30FF               	movlw	255
  1298  0145  07BE               	addwf	_space_pos,f
  1299  0146  1803               	skipnc
  1300  0147  0ABF               	incf	_space_pos+1,f
  1301  0148  30FF               	movlw	255
  1302  0149  07BF               	addwf	_space_pos+1,f
  1303  014A                     l1575:	
  1304  014A  083E               	movf	_space_pos,w
  1305  014B  0734               	addwf	_text,w
  1306  014C  0084               	movwf	4
  1307  014D  083F               	movf	_space_pos+1,w
  1308  014E  1803               	skipnc
  1309  014F  0A3F               	incf	_space_pos+1,w
  1310  0150  0735               	addwf	_text+1,w
  1311  0151  00FF               	movwf	127
  1312  0152  118A  2200  118A   	fcall	stringtab
  1313  0155  3A20               	xorlw	32
  1314  0156  1D03               	btfss	3,2
  1315  0157  2940               	goto	l1577
  1316  0158                     l138:	
  1317                           
  1318                           ;Main.c: 108:                 long_text = 1;
  1319  0158  01BA               	clrf	_long_text
  1320  0159  0ABA               	incf	_long_text,f
  1321                           
  1322                           ;Main.c: 109:             }
  1323  015A  2960               	goto	l1583
  1324  015B                     l1579:	
  1325                           
  1326                           ;Main.c: 111:             {;Main.c: 112:                 long_text = 0;
  1327  015B  01BA               	clrf	_long_text
  1328                           
  1329                           ;Main.c: 113:                 space_pos = 16;
  1330  015C  3010               	movlw	16
  1331  015D  00BE               	movwf	_space_pos
  1332  015E  3000               	movlw	0
  1333  015F  00BF               	movwf	_space_pos+1
  1334  0160                     l1583:	
  1335                           
  1336                           ;Main.c: 115:             btn_pressed = 0;
  1337  0160  01BD               	clrf	_btn_pressed
  1338  0161                     l1585:	
  1339                           
  1340                           ;Main.c: 117:         if (print)
  1341  0161  0840               	movf	_print,w
  1342  0162  1903               	btfsc	3,2
  1343  0163  2997               	goto	l1595
  1344                           
  1345                           ;Main.c: 118:         {;Main.c: 119:             lcd_clear_all();
  1346  0164  118A  25BE  118A   	fcall	_lcd_clear_all
  1347                           
  1348                           ;Main.c: 120:             print = 0;
  1349  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0169  01C0               	clrf	_print
  1352                           
  1353                           ;Main.c: 121:             lcd_print(text, space_pos, 0, 0);
  1354  016A  0834               	movf	_text,w
  1355  016B  00A4               	movwf	lcd_print@text
  1356  016C  0835               	movf	_text+1,w
  1357  016D  00A5               	movwf	lcd_print@text+1
  1358  016E  083E               	movf	_space_pos,w
  1359  016F  00B0               	movwf	??_main
  1360  0170  0830               	movf	??_main,w
  1361  0171  00A6               	movwf	lcd_print@size
  1362  0172  01A7               	clrf	lcd_print@line
  1363  0173  01A8               	clrf	lcd_print@pos
  1364  0174  118A  2418  118A   	fcall	_lcd_print
  1365                           
  1366                           ;Main.c: 122:             lcd_print(&users[user][0], 6, 1, 0);
  1367  0177  3007               	movlw	7
  1368  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1370  017A  00B0               	movwf	??_main
  1371  017B  0830               	movf	??_main,w
  1372  017C  00A0               	movwf	___bmul@multiplicand
  1373  017D  083B               	movf	_user,w
  1374  017E  118A  259D  118A   	fcall	___bmul
  1375  0181  3E5C               	addlw	low (_users| (0+32768))
  1376  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0184  00B1               	movwf	??_main+1
  1379  0185  3083               	movlw	high (_users| (0+32768))
  1380  0186  1803               	skipnc
  1381  0187  3E01               	addlw	1
  1382  0188  00B2               	movwf	??_main+2
  1383  0189  0831               	movf	??_main+1,w
  1384  018A  00A4               	movwf	lcd_print@text
  1385  018B  0832               	movf	??_main+2,w
  1386  018C  00A5               	movwf	lcd_print@text+1
  1387  018D  3006               	movlw	6
  1388  018E  00B3               	movwf	??_main+3
  1389  018F  0833               	movf	??_main+3,w
  1390  0190  00A6               	movwf	lcd_print@size
  1391  0191  01A7               	clrf	lcd_print@line
  1392  0192  0AA7               	incf	lcd_print@line,f
  1393  0193  01A8               	clrf	lcd_print@pos
  1394  0194  118A  2418  118A   	fcall	_lcd_print
  1395  0197                     l1595:	
  1396                           
  1397                           ;Main.c: 124:         if (long_text)
  1398  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0199  083A               	movf	_long_text,w
  1401  019A  1903               	btfsc	3,2
  1402  019B  29DC               	goto	l1607
  1403                           
  1404                           ;Main.c: 125:         {;Main.c: 126:             lcd_print(text, space_pos, 0, 0);
  1405  019C  0834               	movf	_text,w
  1406  019D  00A4               	movwf	lcd_print@text
  1407  019E  0835               	movf	_text+1,w
  1408  019F  00A5               	movwf	lcd_print@text+1
  1409  01A0  083E               	movf	_space_pos,w
  1410  01A1  00B0               	movwf	??_main
  1411  01A2  0830               	movf	??_main,w
  1412  01A3  00A6               	movwf	lcd_print@size
  1413  01A4  01A7               	clrf	lcd_print@line
  1414  01A5  01A8               	clrf	lcd_print@pos
  1415  01A6  118A  2418  118A   	fcall	_lcd_print
  1416                           
  1417                           ;Main.c: 127:             _delay((unsigned long)((500)*(31000/4000.0)));
  1418  01A9  3006               	movlw	6
  1419  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1420  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1421  01AC  00B1               	movwf	??_main+1
  1422  01AD  3006               	movlw	6
  1423  01AE  00B0               	movwf	??_main
  1424  01AF                     u1027:	
  1425  01AF  0BB0               	decfsz	??_main,f
  1426  01B0  29AF               	goto	u1027
  1427  01B1  0BB1               	decfsz	??_main+1,f
  1428  01B2  29AF               	goto	u1027
  1429                           
  1430                           ;Main.c: 128:             lcd_clear_line(0);
  1431  01B3  3000               	movlw	0
  1432  01B4  118A  2484  118A   	fcall	_lcd_clear_line
  1433                           
  1434                           ;Main.c: 129:             lcd_print(text + space_pos + 1, 16, 0, 0);
  1435  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1436  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1437  01B9  083E               	movf	_space_pos,w
  1438  01BA  0734               	addwf	_text,w
  1439  01BB  00B0               	movwf	??_main
  1440  01BC  083F               	movf	_space_pos+1,w
  1441  01BD  1803               	skipnc
  1442  01BE  0A3F               	incf	_space_pos+1,w
  1443  01BF  0735               	addwf	_text+1,w
  1444  01C0  00B1               	movwf	??_main+1
  1445  01C1  0830               	movf	??_main,w
  1446  01C2  3E01               	addlw	1
  1447  01C3  00A4               	movwf	lcd_print@text
  1448  01C4  0831               	movf	??_main+1,w
  1449  01C5  1803               	skipnc
  1450  01C6  3E01               	addlw	1
  1451  01C7  3E00               	addlw	0
  1452  01C8  00A5               	movwf	lcd_print@text+1
  1453  01C9  3010               	movlw	16
  1454  01CA  00B2               	movwf	??_main+2
  1455  01CB  0832               	movf	??_main+2,w
  1456  01CC  00A6               	movwf	lcd_print@size
  1457  01CD  01A7               	clrf	lcd_print@line
  1458  01CE  01A8               	clrf	lcd_print@pos
  1459  01CF  118A  2418  118A   	fcall	_lcd_print
  1460                           
  1461                           ;Main.c: 130:             _delay((unsigned long)((500)*(31000/4000.0)));
  1462  01D2  3006               	movlw	6
  1463  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1464  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1465  01D5  00B1               	movwf	??_main+1
  1466  01D6  3006               	movlw	6
  1467  01D7  00B0               	movwf	??_main
  1468  01D8                     u1037:	
  1469  01D8  0BB0               	decfsz	??_main,f
  1470  01D9  29D8               	goto	u1037
  1471  01DA  0BB1               	decfsz	??_main+1,f
  1472  01DB  29D8               	goto	u1037
  1473  01DC                     l1607:	
  1474                           
  1475                           ;Main.c: 132:         _delay((unsigned long)((1000)*(31000/4000.0)));
  1476  01DC  300B               	movlw	11
  1477  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01DF  00B1               	movwf	??_main+1
  1480  01E0  300E               	movlw	14
  1481  01E1  00B0               	movwf	??_main
  1482  01E2                     u1047:	
  1483  01E2  0BB0               	decfsz	??_main,f
  1484  01E3  29E2               	goto	u1047
  1485  01E4  0BB1               	decfsz	??_main+1,f
  1486  01E5  29E2               	goto	u1047
  1487  01E6  0000               	nop
  1488  01E7  28B2               	goto	l1545
  1489  01E8                     __end_of_main:	
  1490                           
  1491                           	psect	text1
  1492  057D                     __ptext1:	
  1493 ;; *************** function _strlen *****************
  1494 ;; Defined at:
  1495 ;;		line 217 in file "Main.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  string          2    0[BANK0 ] PTR unsigned char 
  1498 ;;		 -> NULL(0), chores(330), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  i               2    3[BANK0 ] int 
  1501 ;;  result          1    5[BANK0 ] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       2       0       0       0
  1512 ;;      Locals:         0       3       0       0       0
  1513 ;;      Temps:          0       1       0       0       0
  1514 ;;      Totals:         0       6       0       0       0
  1515 ;;Total ram usage:        6 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    4
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _strlen
  1527  057D                     _strlen:	
  1528                           
  1529                           ;Main.c: 217: unsigned char strlen(unsigned char string[]);Main.c: 218: {;Main.c: 219:  
      +                             int i = 0;
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1533  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1534  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1535  057F  01A3               	clrf	strlen@i
  1536  0580  01A4               	clrf	strlen@i+1
  1537                           
  1538                           ;Main.c: 220:     unsigned char result = 0;
  1539  0581  01A5               	clrf	strlen@result
  1540  0582                     l1273:	
  1541                           ;Main.c: 221:     while (string[i] != 0)
  1542                           
  1543                           
  1544                           ;Main.c: 221:     while (string[i] != 0)
  1545  0582  0823               	movf	strlen@i,w
  1546  0583  0720               	addwf	strlen@string,w
  1547  0584  0084               	movwf	4
  1548  0585  0824               	movf	strlen@i+1,w
  1549  0586  1803               	skipnc
  1550  0587  0A24               	incf	strlen@i+1,w
  1551  0588  0721               	addwf	strlen@string+1,w
  1552  0589  00FF               	movwf	127
  1553  058A  118A  2200  118A   	fcall	stringtab
  1554  058D  3A00               	xorlw	0
  1555  058E  1903               	btfsc	3,2
  1556  058F  2D9B               	goto	l1275
  1557                           
  1558                           ;Main.c: 222:     {;Main.c: 223:         i++;
  1559  0590  3001               	movlw	1
  1560  0591  07A3               	addwf	strlen@i,f
  1561  0592  1803               	skipnc
  1562  0593  0AA4               	incf	strlen@i+1,f
  1563  0594  3000               	movlw	0
  1564  0595  07A4               	addwf	strlen@i+1,f
  1565                           
  1566                           ;Main.c: 224:         result++;
  1567  0596  3001               	movlw	1
  1568  0597  00A2               	movwf	??_strlen
  1569  0598  0822               	movf	??_strlen,w
  1570  0599  07A5               	addwf	strlen@result,f
  1571  059A  2D82               	goto	l1273
  1572  059B                     l1275:	
  1573                           
  1574                           ;Main.c: 226:     return result;
  1575  059B  0825               	movf	strlen@result,w
  1576  059C  0008               	return
  1577  059D                     __end_of_strlen:	
  1578                           
  1579                           	psect	text2
  1580  04E3                     __ptext2:	
  1581 ;; *************** function _random *****************
  1582 ;; Defined at:
  1583 ;;		line 186 in file "Main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  original        1    2[BANK0 ] unsigned char 
  1588 ;;  rbit            1    1[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      unsigned char 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       0       0       0       0
  1599 ;;      Locals:         0       2       0       0       0
  1600 ;;      Temps:          0       1       0       0       0
  1601 ;;      Totals:         0       3       0       0       0
  1602 ;;Total ram usage:        3 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    4
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _random
  1614  04E3                     _random:	
  1615                           
  1616                           ;Main.c: 188:     static char rand;;Main.c: 189:     static char count = 0;;Main.c: 190:
      +                               char original = rand;
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _random: [wreg+status,2+status,0]
  1620  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1621  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1622  04E5  0839               	movf	random@rand,w
  1623  04E6  00A0               	movwf	??_random
  1624  04E7  0820               	movf	??_random,w
  1625  04E8  00A2               	movwf	random@original
  1626                           
  1627                           ;Main.c: 191:     char rbit = 0;
  1628  04E9  01A1               	clrf	random@rbit
  1629                           
  1630                           ;Main.c: 193:     if (count == 0)
  1631  04EA  0838               	movf	random@count,w
  1632  04EB  1D03               	btfss	3,2
  1633  04EC  2CF9               	goto	l1249
  1634  04ED                     l169:	
  1635                           ;Main.c: 196:         {;Main.c: 197:         }
  1636                           
  1637                           
  1638                           ;Main.c: 195:         while (RA7 == 0)
  1639  04ED  1F85               	btfss	5,7	;volatile
  1640  04EE  2CED               	goto	l169
  1641                           
  1642                           ;Main.c: 198:         count = 1;
  1643  04EF  01B8               	clrf	random@count
  1644  04F0  0AB8               	incf	random@count,f
  1645                           
  1646                           ;Main.c: 199:         rand = TMR0;
  1647  04F1  0801               	movf	1,w	;volatile
  1648  04F2  00A0               	movwf	??_random
  1649  04F3  0820               	movf	??_random,w
  1650  04F4  00B9               	movwf	random@rand
  1651                           
  1652                           ;Main.c: 200:         TMR0 = 0;
  1653  04F5  0181               	clrf	1	;volatile
  1654                           
  1655                           ;Main.c: 201:         TMR0IE = 1;
  1656  04F6  168B               	bsf	11,5	;volatile
  1657  04F7                     l1245:	
  1658                           
  1659                           ;Main.c: 202:         return rand;
  1660  04F7  0839               	movf	random@rand,w
  1661  04F8  0008               	return
  1662  04F9                     l1249:	
  1663                           
  1664                           ;Main.c: 205:     original &= 180;
  1665  04F9  30B4               	movlw	180
  1666  04FA                     L1:	
  1667  04FA  00A0               	movwf	??_random
  1668  04FB  0820               	movf	??_random,w
  1669  04FC  05A2               	andwf	random@original,f
  1670                           
  1671                           ;Main.c: 206:     while (original)
  1672  04FD  0822               	movf	random@original,w
  1673  04FE  1903               	btfsc	3,2
  1674  04FF  2D09               	goto	l1259
  1675                           
  1676                           ;Main.c: 207:     {;Main.c: 208:         rbit ^= (original & 1);
  1677                           
  1678                           ;Main.c: 206:     while (original)
  1679  0500  0822               	movf	random@original,w
  1680  0501  3901               	andlw	1
  1681  0502  00A0               	movwf	??_random
  1682  0503  0820               	movf	??_random,w
  1683  0504  06A1               	xorwf	random@rbit,f
  1684                           
  1685                           ;Main.c: 209:         original >>= 1;
  1686  0505  1003               	clrc
  1687  0506  0CA2               	rrf	random@original,f
  1688                           
  1689                           ;Main.c: 210:         original &= (~(1 << 7));
  1690  0507  307F               	movlw	127
  1691  0508  2CFA               	goto	L1
  1692  0509                     l1259:	
  1693                           
  1694                           ;Main.c: 212:     rand <<= 1;
  1695  0509  1003               	clrc
  1696  050A  0DB9               	rlf	random@rand,f
  1697                           
  1698                           ;Main.c: 213:     rand |= rbit;
  1699  050B  0821               	movf	random@rbit,w
  1700  050C  00A0               	movwf	??_random
  1701  050D  0820               	movf	??_random,w
  1702  050E  04B9               	iorwf	random@rand,f
  1703  050F  2CF7               	goto	l1245
  1704  0510                     __end_of_random:	
  1705                           
  1706                           	psect	text3
  1707  0418                     __ptext3:	
  1708 ;; *************** function _lcd_print *****************
  1709 ;; Defined at:
  1710 ;;		line 13 in file "LCD.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  text            2    4[BANK0 ] PTR unsigned char 
  1713 ;;		 -> NULL(0), users(14), STR_1(12), chores(330), 
  1714 ;;  size            1    6[BANK0 ] unsigned char 
  1715 ;;  line            1    7[BANK0 ] unsigned char 
  1716 ;;  pos             1    8[BANK0 ] unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  pointer         2   10[BANK0 ] PTR unsigned char 
  1719 ;;		 -> NULL(0), users(14), STR_1(12), chores(330), 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       5       0       0       0
  1730 ;;      Locals:         0       2       0       0       0
  1731 ;;      Temps:          0       1       0       0       0
  1732 ;;      Totals:         0       8       0       0       0
  1733 ;;Total ram usage:        8 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    6
  1736 ;; This function calls:
  1737 ;;		_lcd_cmd
  1738 ;;		_lcd_data
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _lcd_print
  1746  0418                     _lcd_print:	
  1747                           
  1748                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1752  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1754  041A  0824               	movf	lcd_print@text,w
  1755  041B  00AA               	movwf	lcd_print@pointer
  1756  041C  0825               	movf	lcd_print@text+1,w
  1757  041D  00AB               	movwf	lcd_print@pointer+1
  1758                           
  1759                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  1760  041E  0827               	movf	lcd_print@line,w
  1761  041F  00A9               	movwf	??_lcd_print
  1762  0420  3005               	movlw	5
  1763  0421                     u475:	
  1764  0421  1003               	clrc
  1765  0422  0DA9               	rlf	??_lcd_print,f
  1766  0423  3EFF               	addlw	-1
  1767  0424  1D03               	skipz
  1768  0425  2C21               	goto	u475
  1769  0426  1003               	clrc
  1770  0427  0D29               	rlf	??_lcd_print,w
  1771  0428  0428               	iorwf	lcd_print@pos,w
  1772  0429  3880               	iorlw	128
  1773  042A  118A  2451  118A   	fcall	_lcd_cmd
  1774  042D                     l1185:	
  1775                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1776                           
  1777                           
  1778                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1779  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1780  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1781  042F  082B               	movf	lcd_print@pointer+1,w
  1782  0430  00FF               	movwf	127
  1783  0431  082A               	movf	lcd_print@pointer,w
  1784  0432  0084               	movwf	4
  1785  0433  118A  2200  118A   	fcall	stringtab
  1786  0436  3A00               	xorlw	0
  1787  0437  1903               	skipnz
  1788  0438  0008               	return
  1789  0439  0826               	movf	lcd_print@size,w
  1790  043A  1903               	btfsc	3,2
  1791  043B  0008               	return
  1792                           
  1793                           ;LCD.c: 21:         lcd_data(*pointer);
  1794  043C  082B               	movf	lcd_print@pointer+1,w
  1795  043D  00FF               	movwf	127
  1796  043E  082A               	movf	lcd_print@pointer,w
  1797  043F  0084               	movwf	4
  1798  0440  118A  2200  118A   	fcall	stringtab
  1799  0443  118A  255B  118A   	fcall	_lcd_data
  1800                           
  1801                           ;LCD.c: 22:         pointer++;
  1802  0446  3001               	movlw	1
  1803  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0449  07AA               	addwf	lcd_print@pointer,f
  1806  044A  1803               	skipnc
  1807  044B  0AAB               	incf	lcd_print@pointer+1,f
  1808  044C  3000               	movlw	0
  1809  044D  07AB               	addwf	lcd_print@pointer+1,f
  1810                           
  1811                           ;LCD.c: 23:         size--;
  1812  044E  3001               	movlw	1
  1813  044F  02A6               	subwf	lcd_print@size,f
  1814  0450  2C2D               	goto	l1185
  1815  0451                     __end_of_lcd_print:	
  1816                           
  1817                           	psect	text4
  1818  0376                     __ptext4:	
  1819 ;; *************** function _lcd_init *****************
  1820 ;; Defined at:
  1821 ;;		line 44 in file "LCD.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          0       1       0       0       0
  1838 ;;      Totals:         0       1       0       0       0
  1839 ;;Total ram usage:        1 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    6
  1842 ;; This function calls:
  1843 ;;		_lcd_cmd
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _lcd_init
  1851  0376                     _lcd_init:	
  1852                           
  1853                           ;LCD.c: 48:     _delay((unsigned long)((15)*(31000/4000.0)));
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1857  0376  3025               	movlw	37
  1858  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0379  00A4               	movwf	??_lcd_init
  1861  037A                     u1057:	
  1862  037A  0BA4               	decfsz	??_lcd_init,f
  1863  037B  2B7A               	goto	u1057
  1864  037C  2B7D               	nop2
  1865                           
  1866                           ;LCD.c: 50:     lcd_cmd(0x02);
  1867  037D  3002               	movlw	2
  1868  037E  118A  2451  118A   	fcall	_lcd_cmd
  1869                           
  1870                           ;LCD.c: 51:     _delay((unsigned long)((5)*(31000/4000.0)));
  1871  0381  300B               	movlw	11
  1872  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0384  00A4               	movwf	??_lcd_init
  1875  0385                     u1067:	
  1876  0385  0BA4               	decfsz	??_lcd_init,f
  1877  0386  2B85               	goto	u1067
  1878  0387  2B88               	nop2
  1879                           
  1880                           ;LCD.c: 55:     lcd_cmd(0x28);
  1881  0388  3028               	movlw	40
  1882  0389  118A  2451  118A   	fcall	_lcd_cmd
  1883                           
  1884                           ;LCD.c: 56:     _delay((unsigned long)((5)*(31000/4000.0)));
  1885  038C  300B               	movlw	11
  1886  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1887  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1888  038F  00A4               	movwf	??_lcd_init
  1889  0390                     u1077:	
  1890  0390  0BA4               	decfsz	??_lcd_init,f
  1891  0391  2B90               	goto	u1077
  1892  0392  2B93               	nop2
  1893                           
  1894                           ;LCD.c: 58:     lcd_cmd(0x10);
  1895  0393  3010               	movlw	16
  1896  0394  118A  2451  118A   	fcall	_lcd_cmd
  1897                           
  1898                           ;LCD.c: 59:     _delay((unsigned long)((5)*(31000/4000.0)));
  1899  0397  300B               	movlw	11
  1900  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1902  039A  00A4               	movwf	??_lcd_init
  1903  039B                     u1087:	
  1904  039B  0BA4               	decfsz	??_lcd_init,f
  1905  039C  2B9B               	goto	u1087
  1906  039D  2B9E               	nop2
  1907                           
  1908                           ;LCD.c: 61:     lcd_cmd(0x0c);
  1909  039E  300C               	movlw	12
  1910  039F  118A  2451  118A   	fcall	_lcd_cmd
  1911                           
  1912                           ;LCD.c: 62:     _delay((unsigned long)((5)*(31000/4000.0)));
  1913  03A2  300B               	movlw	11
  1914  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1915  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1916  03A5  00A4               	movwf	??_lcd_init
  1917  03A6                     u1097:	
  1918  03A6  0BA4               	decfsz	??_lcd_init,f
  1919  03A7  2BA6               	goto	u1097
  1920  03A8  2BA9               	nop2
  1921                           
  1922                           ;LCD.c: 64:     lcd_cmd(0x06);
  1923  03A9  3006               	movlw	6
  1924  03AA  118A  2451  118A   	fcall	_lcd_cmd
  1925                           
  1926                           ;LCD.c: 65:     _delay((unsigned long)((5)*(31000/4000.0)));
  1927  03AD  300B               	movlw	11
  1928  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1929  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1930  03B0  00A4               	movwf	??_lcd_init
  1931  03B1                     u1107:	
  1932  03B1  0BA4               	decfsz	??_lcd_init,f
  1933  03B2  2BB1               	goto	u1107
  1934  03B3  2BB4               	nop2
  1935                           
  1936                           ;LCD.c: 67:     lcd_cmd(0x01);
  1937  03B4  3001               	movlw	1
  1938  03B5  118A  2451  118A   	fcall	_lcd_cmd
  1939                           
  1940                           ;LCD.c: 68:     _delay((unsigned long)((5)*(31000/4000.0)));
  1941  03B8  300B               	movlw	11
  1942  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1943  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1944  03BB  00A4               	movwf	??_lcd_init
  1945  03BC                     u1117:	
  1946  03BC  0BA4               	decfsz	??_lcd_init,f
  1947  03BD  2BBC               	goto	u1117
  1948  03BE  2BBF               	nop2
  1949                           
  1950                           ;LCD.c: 70:     lcd_cmd(0x80);
  1951  03BF  3080               	movlw	128
  1952  03C0  118A  2451  118A   	fcall	_lcd_cmd
  1953                           
  1954                           ;LCD.c: 71:     _delay((unsigned long)((5)*(31000/4000.0)));
  1955  03C3  300B               	movlw	11
  1956  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1957  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1958  03C6  00A4               	movwf	??_lcd_init
  1959  03C7                     u1127:	
  1960  03C7  0BA4               	decfsz	??_lcd_init,f
  1961  03C8  2BC7               	goto	u1127
  1962  03C9  2BCA               	nop2
  1963  03CA  0008               	return
  1964  03CB                     __end_of_lcd_init:	
  1965                           
  1966                           	psect	text5
  1967  0484                     __ptext5:	
  1968 ;; *************** function _lcd_clear_line *****************
  1969 ;; Defined at:
  1970 ;;		line 33 in file "LCD.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  line            1    wreg     unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  line            1    5[BANK0 ] unsigned char 
  1975 ;;  i               2    6[BANK0 ] int 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       0       0       0       0
  1986 ;;      Locals:         0       3       0       0       0
  1987 ;;      Temps:          0       1       0       0       0
  1988 ;;      Totals:         0       4       0       0       0
  1989 ;;Total ram usage:        4 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    6
  1992 ;; This function calls:
  1993 ;;		_lcd_cmd
  1994 ;;		_lcd_data
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _lcd_clear_line
  2002  0484                     _lcd_clear_line:	
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2006                           ;lcd_clear_line@line stored from wreg
  2007  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0486  00A5               	movwf	lcd_clear_line@line
  2010                           
  2011                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  2012  0487  0825               	movf	lcd_clear_line@line,w
  2013  0488  00A4               	movwf	??_lcd_clear_line
  2014  0489  3005               	movlw	5
  2015  048A                     u505:	
  2016  048A  1003               	clrc
  2017  048B  0DA4               	rlf	??_lcd_clear_line,f
  2018  048C  3EFF               	addlw	-1
  2019  048D  1D03               	skipz
  2020  048E  2C8A               	goto	u505
  2021  048F  1003               	clrc
  2022  0490  0D24               	rlf	??_lcd_clear_line,w
  2023  0491  3880               	iorlw	128
  2024  0492  118A  2451  118A   	fcall	_lcd_cmd
  2025                           
  2026                           ;LCD.c: 37:     for (i=0; i<40; i++)
  2027  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0497  01A6               	clrf	lcd_clear_line@i
  2030  0498  01A7               	clrf	lcd_clear_line@i+1
  2031  0499                     l1201:	
  2032                           
  2033                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  2034  0499  3020               	movlw	32
  2035  049A  118A  255B  118A   	fcall	_lcd_data
  2036                           
  2037                           ;LCD.c: 40:     }
  2038  049D  3001               	movlw	1
  2039  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2040  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2041  04A0  07A6               	addwf	lcd_clear_line@i,f
  2042  04A1  1803               	skipnc
  2043  04A2  0AA7               	incf	lcd_clear_line@i+1,f
  2044  04A3  3000               	movlw	0
  2045  04A4  07A7               	addwf	lcd_clear_line@i+1,f
  2046  04A5  0827               	movf	lcd_clear_line@i+1,w
  2047  04A6  3A80               	xorlw	128
  2048  04A7  00FF               	movwf	127
  2049  04A8  3080               	movlw	128
  2050  04A9  027F               	subwf	127,w
  2051  04AA  1D03               	skipz
  2052  04AB  2CAE               	goto	u515
  2053  04AC  3028               	movlw	40
  2054  04AD  0226               	subwf	lcd_clear_line@i,w
  2055  04AE                     u515:	
  2056  04AE  1C03               	skipc
  2057  04AF  2C99               	goto	l1201
  2058                           
  2059                           ;LCD.c: 41:     lcd_cmd(0x80);
  2060  04B0  3080               	movlw	128
  2061  04B1  118A  2451         	fcall	_lcd_cmd
  2062  04B3  0008               	return
  2063  04B4                     __end_of_lcd_clear_line:	
  2064                           
  2065                           	psect	text6
  2066  055B                     __ptext6:	
  2067 ;; *************** function _lcd_data *****************
  2068 ;; Defined at:
  2069 ;;		line 90 in file "LCD.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  d               1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  d               1    3[BANK0 ] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       1       0       0       0
  2085 ;;      Temps:          0       2       0       0       0
  2086 ;;      Totals:         0       3       0       0       0
  2087 ;;Total ram usage:        3 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    5
  2090 ;; This function calls:
  2091 ;;		_enable
  2092 ;; This function is called by:
  2093 ;;		_lcd_print
  2094 ;;		_lcd_clear_line
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _lcd_data
  2100  055B                     _lcd_data:	
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2104                           ;lcd_data@d stored from wreg
  2105  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2106  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2107  055D  00A3               	movwf	lcd_data@d
  2108                           
  2109                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  2110  055E  1486               	bsf	6,1	;volatile
  2111                           
  2112                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  2113  055F  0823               	movf	lcd_data@d,w
  2114  0560  00A1               	movwf	??_lcd_data
  2115  0561  3004               	movlw	4
  2116  0562                     u455:	
  2117  0562  1003               	clrc
  2118  0563  0CA1               	rrf	??_lcd_data,f
  2119  0564  3EFF               	addlw	-1
  2120  0565  1D03               	skipz
  2121  0566  2D62               	goto	u455
  2122  0567  300F               	movlw	15
  2123  0568  0521               	andwf	??_lcd_data,w
  2124  0569  00A2               	movwf	??_lcd_data+1
  2125  056A  0805               	movf	5,w	;volatile
  2126  056B  39F0               	andlw	240
  2127  056C  0422               	iorwf	??_lcd_data+1,w
  2128  056D  0085               	movwf	5	;volatile
  2129                           
  2130                           ;LCD.c: 99:     enable();
  2131  056E  118A  25B0  118A   	fcall	_enable
  2132                           
  2133                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  2134  0571  300F               	movlw	15
  2135  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0574  0523               	andwf	lcd_data@d,w
  2138  0575  00A1               	movwf	??_lcd_data
  2139  0576  0805               	movf	5,w	;volatile
  2140  0577  39F0               	andlw	240
  2141  0578  0421               	iorwf	??_lcd_data,w
  2142  0579  0085               	movwf	5	;volatile
  2143                           
  2144                           ;LCD.c: 102:     enable();
  2145  057A  118A  25B0         	fcall	_enable
  2146  057C  0008               	return
  2147  057D                     __end_of_lcd_data:	
  2148                           
  2149                           	psect	text7
  2150  05BE                     __ptext7:	
  2151 ;; *************** function _lcd_clear_all *****************
  2152 ;; Defined at:
  2153 ;;		line 27 in file "LCD.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         0       1       0       0       0
  2171 ;;Total ram usage:        1 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    6
  2174 ;; This function calls:
  2175 ;;		_lcd_cmd
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _lcd_clear_all
  2183  05BE                     _lcd_clear_all:	
  2184                           
  2185                           ;LCD.c: 29:     lcd_cmd(0x01);
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  2189  05BE  3001               	movlw	1
  2190  05BF  118A  2451  118A   	fcall	_lcd_cmd
  2191                           
  2192                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2193  05C2  300B               	movlw	11
  2194  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2195  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2196  05C5  00A4               	movwf	??_lcd_clear_all
  2197  05C6                     u1137:	
  2198  05C6  0BA4               	decfsz	??_lcd_clear_all,f
  2199  05C7  2DC6               	goto	u1137
  2200  05C8  2DC9               	nop2
  2201  05C9  0008               	return
  2202  05CA                     __end_of_lcd_clear_all:	
  2203                           
  2204                           	psect	text8
  2205  0451                     __ptext8:	
  2206 ;; *************** function _lcd_cmd *****************
  2207 ;; Defined at:
  2208 ;;		line 74 in file "LCD.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  c               1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  c               1    3[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       1       0       0       0
  2224 ;;      Temps:          0       2       0       0       0
  2225 ;;      Totals:         0       3       0       0       0
  2226 ;;Total ram usage:        3 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    5
  2229 ;; This function calls:
  2230 ;;		_enable
  2231 ;; This function is called by:
  2232 ;;		_lcd_print
  2233 ;;		_lcd_clear_all
  2234 ;;		_lcd_clear_line
  2235 ;;		_lcd_init
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _lcd_cmd
  2242  0451                     _lcd_cmd:	
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2246                           ;lcd_cmd@c stored from wreg
  2247  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0453  00A3               	movwf	lcd_cmd@c
  2250                           
  2251                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2252  0454  1086               	bcf	6,1	;volatile
  2253                           
  2254                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2255  0455  300B               	movlw	11
  2256  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0458  00A1               	movwf	??_lcd_cmd
  2259  0459                     u1147:	
  2260  0459  0BA1               	decfsz	??_lcd_cmd,f
  2261  045A  2C59               	goto	u1147
  2262  045B  2C5C               	nop2
  2263                           
  2264                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2265  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2266  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2267  045E  0823               	movf	lcd_cmd@c,w
  2268  045F  00A1               	movwf	??_lcd_cmd
  2269  0460  3004               	movlw	4
  2270  0461                     u445:	
  2271  0461  1003               	clrc
  2272  0462  0CA1               	rrf	??_lcd_cmd,f
  2273  0463  3EFF               	addlw	-1
  2274  0464  1D03               	skipz
  2275  0465  2C61               	goto	u445
  2276  0466  300F               	movlw	15
  2277  0467  0521               	andwf	??_lcd_cmd,w
  2278  0468  00A2               	movwf	??_lcd_cmd+1
  2279  0469  0805               	movf	5,w	;volatile
  2280  046A  39F0               	andlw	240
  2281  046B  0422               	iorwf	??_lcd_cmd+1,w
  2282  046C  0085               	movwf	5	;volatile
  2283                           
  2284                           ;LCD.c: 83:     enable();
  2285  046D  118A  25B0  118A   	fcall	_enable
  2286                           
  2287                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2288  0470  300F               	movlw	15
  2289  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0473  0523               	andwf	lcd_cmd@c,w
  2292  0474  00A1               	movwf	??_lcd_cmd
  2293  0475  0805               	movf	5,w	;volatile
  2294  0476  39F0               	andlw	240
  2295  0477  0421               	iorwf	??_lcd_cmd,w
  2296  0478  0085               	movwf	5	;volatile
  2297                           
  2298                           ;LCD.c: 86:     enable();
  2299  0479  118A  25B0  118A   	fcall	_enable
  2300                           
  2301                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2302  047C  300B               	movlw	11
  2303  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2304  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2305  047F  00A1               	movwf	??_lcd_cmd
  2306  0480                     u1157:	
  2307  0480  0BA1               	decfsz	??_lcd_cmd,f
  2308  0481  2C80               	goto	u1157
  2309  0482  2C83               	nop2
  2310  0483  0008               	return
  2311  0484                     __end_of_lcd_cmd:	
  2312                           
  2313                           	psect	text9
  2314  05B0                     __ptext9:	
  2315 ;; *************** function _enable *****************
  2316 ;; Defined at:
  2317 ;;		line 106 in file "LCD.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0
  2333 ;;      Temps:          0       1       0       0       0
  2334 ;;      Totals:         0       1       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    4
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_lcd_cmd
  2342 ;;		_lcd_data
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _enable
  2348  05B0                     _enable:	
  2349                           
  2350                           ;LCD.c: 108:     RB2 = 1;
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _enable: [wreg]
  2354  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2355  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2356  05B2  1506               	bsf	6,2	;volatile
  2357                           
  2358                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2359  05B3  300B               	movlw	11
  2360  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2361  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2362  05B6  00A0               	movwf	??_enable
  2363  05B7                     u1167:	
  2364  05B7  0BA0               	decfsz	??_enable,f
  2365  05B8  2DB7               	goto	u1167
  2366  05B9  2DBA               	nop2
  2367                           
  2368                           ;LCD.c: 112:     RB2 = 0;
  2369  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2370  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2371  05BC  1106               	bcf	6,2	;volatile
  2372  05BD  0008               	return
  2373  05BE                     __end_of_enable:	
  2374                           
  2375                           	psect	text10
  2376  0538                     __ptext10:	
  2377 ;; *************** function ___wmul *****************
  2378 ;; Defined at:
  2379 ;;		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  multiplier      2   10[BANK0 ] unsigned int 
  2382 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  product         2   14[BANK0 ] unsigned int 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  2   10[BANK0 ] unsigned int 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       4       0       0       0
  2395 ;;      Locals:         0       2       0       0       0
  2396 ;;      Temps:          0       0       0       0       0
  2397 ;;      Totals:         0       6       0       0       0
  2398 ;;Total ram usage:        6 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    4
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function ___wmul
  2410  0538                     ___wmul:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2414  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2416  053A  01AE               	clrf	___wmul@product
  2417  053B  01AF               	clrf	___wmul@product+1
  2418  053C                     l1491:	
  2419  053C  1C2A               	btfss	___wmul@multiplier,0
  2420  053D  2D44               	goto	l267
  2421  053E  082C               	movf	___wmul@multiplicand,w
  2422  053F  07AE               	addwf	___wmul@product,f
  2423  0540  1803               	skipnc
  2424  0541  0AAF               	incf	___wmul@product+1,f
  2425  0542  082D               	movf	___wmul@multiplicand+1,w
  2426  0543  07AF               	addwf	___wmul@product+1,f
  2427  0544                     l267:	
  2428  0544  3001               	movlw	1
  2429  0545                     u885:	
  2430  0545  1003               	clrc
  2431  0546  0DAC               	rlf	___wmul@multiplicand,f
  2432  0547  0DAD               	rlf	___wmul@multiplicand+1,f
  2433  0548  3EFF               	addlw	-1
  2434  0549  1D03               	skipz
  2435  054A  2D45               	goto	u885
  2436  054B  3001               	movlw	1
  2437  054C                     u895:	
  2438  054C  1003               	clrc
  2439  054D  0CAB               	rrf	___wmul@multiplier+1,f
  2440  054E  0CAA               	rrf	___wmul@multiplier,f
  2441  054F  3EFF               	addlw	-1
  2442  0550  1D03               	skipz
  2443  0551  2D4C               	goto	u895
  2444  0552  082A               	movf	___wmul@multiplier,w
  2445  0553  042B               	iorwf	___wmul@multiplier+1,w
  2446  0554  1D03               	btfss	3,2
  2447  0555  2D3C               	goto	l1491
  2448  0556  082F               	movf	___wmul@product+1,w
  2449  0557  00AB               	movwf	?___wmul+1
  2450  0558  082E               	movf	___wmul@product,w
  2451  0559  00AA               	movwf	?___wmul
  2452  055A  0008               	return
  2453  055B                     __end_of___wmul:	
  2454                           
  2455                           	psect	text11
  2456  059D                     __ptext11:	
  2457 ;; *************** function ___bmul *****************
  2458 ;; Defined at:
  2459 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  multiplier      1    wreg     unsigned char 
  2462 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2465 ;;  product         1    2[BANK0 ] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      unsigned char 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       1       0       0       0
  2476 ;;      Locals:         0       2       0       0       0
  2477 ;;      Temps:          0       1       0       0       0
  2478 ;;      Totals:         0       4       0       0       0
  2479 ;;Total ram usage:        4 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    4
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function ___bmul
  2491  059D                     ___bmul:	
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2495                           ;___bmul@multiplier stored from wreg
  2496  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2497  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2498  059F  00A3               	movwf	___bmul@multiplier
  2499  05A0  01A2               	clrf	___bmul@product
  2500  05A1                     l1295:	
  2501  05A1  1C23               	btfss	___bmul@multiplier,0
  2502  05A2  2DA7               	goto	l1299
  2503  05A3  0820               	movf	___bmul@multiplicand,w
  2504  05A4  00A1               	movwf	??___bmul
  2505  05A5  0821               	movf	??___bmul,w
  2506  05A6  07A2               	addwf	___bmul@product,f
  2507  05A7                     l1299:	
  2508  05A7  1003               	clrc
  2509  05A8  0DA0               	rlf	___bmul@multiplicand,f
  2510  05A9  1003               	clrc
  2511  05AA  0CA3               	rrf	___bmul@multiplier,f
  2512  05AB  0823               	movf	___bmul@multiplier,w
  2513  05AC  1D03               	btfss	3,2
  2514  05AD  2DA1               	goto	l1295
  2515  05AE  0822               	movf	___bmul@product,w
  2516  05AF  0008               	return
  2517  05B0                     __end_of___bmul:	
  2518                           
  2519                           	psect	text12
  2520  03CB                     __ptext12:	
  2521 ;; *************** function ___awmod *****************
  2522 ;; Defined at:
  2523 ;;		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  divisor         2    3[BANK0 ] int 
  2526 ;;  dividend        2    5[BANK0 ] int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  sign            1    9[BANK0 ] unsigned char 
  2529 ;;  counter         1    8[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  2    3[BANK0 ] int 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       4       0       0       0
  2540 ;;      Locals:         0       2       0       0       0
  2541 ;;      Temps:          0       1       0       0       0
  2542 ;;      Totals:         0       7       0       0       0
  2543 ;;Total ram usage:        7 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    4
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;;		_itoa
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function ___awmod
  2556  03CB                     ___awmod:	
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2560  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2561  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2562  03CD  01A9               	clrf	___awmod@sign
  2563  03CE  1FA6               	btfss	___awmod@dividend+1,7
  2564  03CF  2BD7               	goto	l1315
  2565  03D0  09A5               	comf	___awmod@dividend,f
  2566  03D1  09A6               	comf	___awmod@dividend+1,f
  2567  03D2  0AA5               	incf	___awmod@dividend,f
  2568  03D3  1903               	skipnz
  2569  03D4  0AA6               	incf	___awmod@dividend+1,f
  2570  03D5  01A9               	clrf	___awmod@sign
  2571  03D6  0AA9               	incf	___awmod@sign,f
  2572  03D7                     l1315:	
  2573  03D7  1FA4               	btfss	___awmod@divisor+1,7
  2574  03D8  2BDE               	goto	l1319
  2575  03D9  09A3               	comf	___awmod@divisor,f
  2576  03DA  09A4               	comf	___awmod@divisor+1,f
  2577  03DB  0AA3               	incf	___awmod@divisor,f
  2578  03DC  1903               	skipnz
  2579  03DD  0AA4               	incf	___awmod@divisor+1,f
  2580  03DE                     l1319:	
  2581  03DE  0823               	movf	___awmod@divisor,w
  2582  03DF  0424               	iorwf	___awmod@divisor+1,w
  2583  03E0  1903               	btfsc	3,2
  2584  03E1  2C0B               	goto	l1337
  2585  03E2  01A8               	clrf	___awmod@counter
  2586  03E3  0AA8               	incf	___awmod@counter,f
  2587  03E4                     l1327:	
  2588  03E4  1BA4               	btfsc	___awmod@divisor+1,7
  2589  03E5  2BF2               	goto	l1329
  2590  03E6  3001               	movlw	1
  2591  03E7                     u655:	
  2592  03E7  1003               	clrc
  2593  03E8  0DA3               	rlf	___awmod@divisor,f
  2594  03E9  0DA4               	rlf	___awmod@divisor+1,f
  2595  03EA  3EFF               	addlw	-1
  2596  03EB  1D03               	skipz
  2597  03EC  2BE7               	goto	u655
  2598  03ED  3001               	movlw	1
  2599  03EE  00A7               	movwf	??___awmod
  2600  03EF  0827               	movf	??___awmod,w
  2601  03F0  07A8               	addwf	___awmod@counter,f
  2602  03F1  2BE4               	goto	l1327
  2603  03F2                     l1329:	
  2604  03F2  0824               	movf	___awmod@divisor+1,w
  2605  03F3  0226               	subwf	___awmod@dividend+1,w
  2606  03F4  1D03               	skipz
  2607  03F5  2BF8               	goto	u675
  2608  03F6  0823               	movf	___awmod@divisor,w
  2609  03F7  0225               	subwf	___awmod@dividend,w
  2610  03F8                     u675:	
  2611  03F8  1C03               	skipc
  2612  03F9  2C00               	goto	l1333
  2613  03FA  0823               	movf	___awmod@divisor,w
  2614  03FB  02A5               	subwf	___awmod@dividend,f
  2615  03FC  0824               	movf	___awmod@divisor+1,w
  2616  03FD  1C03               	skipc
  2617  03FE  03A6               	decf	___awmod@dividend+1,f
  2618  03FF  02A6               	subwf	___awmod@dividend+1,f
  2619  0400                     l1333:	
  2620  0400  3001               	movlw	1
  2621  0401                     u685:	
  2622  0401  1003               	clrc
  2623  0402  0CA4               	rrf	___awmod@divisor+1,f
  2624  0403  0CA3               	rrf	___awmod@divisor,f
  2625  0404  3EFF               	addlw	-1
  2626  0405  1D03               	skipz
  2627  0406  2C01               	goto	u685
  2628  0407  3001               	movlw	1
  2629  0408  02A8               	subwf	___awmod@counter,f
  2630  0409  1D03               	btfss	3,2
  2631  040A  2BF2               	goto	l1329
  2632  040B                     l1337:	
  2633  040B  0829               	movf	___awmod@sign,w
  2634  040C  1903               	btfsc	3,2
  2635  040D  2C13               	goto	l1341
  2636  040E  09A5               	comf	___awmod@dividend,f
  2637  040F  09A6               	comf	___awmod@dividend+1,f
  2638  0410  0AA5               	incf	___awmod@dividend,f
  2639  0411  1903               	skipnz
  2640  0412  0AA6               	incf	___awmod@dividend+1,f
  2641  0413                     l1341:	
  2642  0413  0826               	movf	___awmod@dividend+1,w
  2643  0414  00A4               	movwf	?___awmod+1
  2644  0415  0825               	movf	___awmod@dividend,w
  2645  0416  00A3               	movwf	?___awmod
  2646  0417  0008               	return
  2647  0418                     __end_of___awmod:	
  2648                           
  2649                           	psect	text13
  2650  0510                     __ptext13:	
  2651 ;; *************** function _testing *****************
  2652 ;; Defined at:
  2653 ;;		line 138 in file "Main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          2       0       0       0       0
  2670 ;;      Totals:         2       0       0       0       0
  2671 ;;Total ram usage:        2 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    3
  2674 ;; This function calls:
  2675 ;;		i1_lcd_clear_all
  2676 ;;		i1_lcd_cmd
  2677 ;; This function is called by:
  2678 ;;		Interrupt level 1
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _testing
  2684  0510                     _testing:	
  2685                           
  2686                           ;Main.c: 140:     if (INT0IF == 1)
  2687  0510  1C8B               	btfss	11,1	;volatile
  2688  0511  2D2A               	goto	i1l149
  2689                           
  2690                           ;Main.c: 141:     {;Main.c: 142:         if (asleep)
  2691  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0514  083C               	movf	_asleep,w
  2694  0515  1903               	btfsc	3,2
  2695  0516  2D23               	goto	i1l150
  2696                           
  2697                           ;Main.c: 143:         {;Main.c: 144:             RB3 = 1;
  2698  0517  1586               	bsf	6,3	;volatile
  2699                           
  2700                           ;Main.c: 145:             lcd_cmd(0x0c);
  2701  0518  300C               	movlw	12
  2702  0519  118A  24B4  118A   	fcall	i1_lcd_cmd
  2703                           
  2704                           ;Main.c: 146:             lcd_clear_all();
  2705  051C  118A  25D6  118A   	fcall	i1_lcd_clear_all
  2706                           
  2707                           ;Main.c: 147:             asleep = 0;
  2708  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0521  01BC               	clrf	_asleep
  2711                           
  2712                           ;Main.c: 148:         }
  2713  0522  2D25               	goto	i1l1465
  2714  0523                     i1l150:	
  2715                           ;Main.c: 149:         else
  2716                           
  2717                           
  2718                           ;Main.c: 150:             btn_pressed = 1;
  2719  0523  01BD               	clrf	_btn_pressed
  2720  0524  0ABD               	incf	_btn_pressed,f
  2721  0525                     i1l1465:	
  2722                           
  2723                           ;Main.c: 151:         TMR0 = 0;
  2724  0525  0181               	clrf	1	;volatile
  2725                           
  2726                           ;Main.c: 152:         TMR1 = 0;
  2727  0526  018E               	clrf	14	;volatile
  2728  0527  018F               	clrf	15	;volatile
  2729                           
  2730                           ;Main.c: 153:         INT0IF = 0;
  2731  0528  108B               	bcf	11,1	;volatile
  2732                           
  2733                           ;Main.c: 154:     }
  2734  0529  2D31               	goto	i1l154
  2735  052A                     i1l149:	
  2736                           ;Main.c: 155:     else if (TMR0IF)
  2737                           
  2738  052A  1D0B               	btfss	11,2	;volatile
  2739  052B  2D31               	goto	i1l154
  2740                           
  2741                           ;Main.c: 156:     {;Main.c: 157:         asleep = 1;
  2742  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2743  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2744  052E  01BC               	clrf	_asleep
  2745  052F  0ABC               	incf	_asleep,f
  2746                           
  2747                           ;Main.c: 158:         TMR0IF = 0;
  2748  0530  110B               	bcf	11,2	;volatile
  2749  0531                     i1l154:	
  2750  0531  0876               	movf	??_testing+1,w
  2751  0532  008A               	movwf	10
  2752  0533  0E75               	swapf	??_testing^(0+4294967168),w
  2753  0534  0083               	movwf	3
  2754  0535  0EFE               	swapf	126,f
  2755  0536  0E7E               	swapf	126,w
  2756  0537  0009               	retfie
  2757  0538                     __end_of_testing:	
  2758                           
  2759                           	psect	intentry
  2760  0004                     __pintentry:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _testing: [wreg+status,2+status,0+pclath+cstack]
  2763                           
  2764  0004                     interrupt_function:	
  2765  007E                     saved_w	set	btemp
  2766  0004  00FE               	movwf	btemp
  2767  0005  0E03               	swapf	3,w
  2768  0006  00F5               	movwf	??_testing
  2769  0007  080A               	movf	10,w
  2770  0008  00F6               	movwf	??_testing+1
  2771  0009  118A  2D10         	ljmp	_testing
  2772                           
  2773                           	psect	text14
  2774  05D6                     __ptext14:	
  2775 ;; *************** function i1_lcd_clear_all *****************
  2776 ;; Defined at:
  2777 ;;		line 27 in file "LCD.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0
  2793 ;;      Temps:          1       0       0       0       0
  2794 ;;      Totals:         1       0       0       0       0
  2795 ;;Total ram usage:        1 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    2
  2798 ;; This function calls:
  2799 ;;		i1_lcd_cmd
  2800 ;; This function is called by:
  2801 ;;		_testing
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function i1_lcd_clear_all
  2807  05D6                     i1_lcd_clear_all:	
  2808                           
  2809                           ;LCD.c: 29:     lcd_cmd(0x01);
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in i1_lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  2813  05D6  3001               	movlw	1
  2814  05D7  118A  24B4  118A   	fcall	i1_lcd_cmd
  2815                           
  2816                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2817  05DA  300C               	movlw	12
  2818  05DB  00F4               	movwf	??i1_lcd_clear_all
  2819  05DC                     u117_27:	
  2820  05DC  0BF4               	decfsz	??i1_lcd_clear_all,f
  2821  05DD  2DDC               	goto	u117_27
  2822  05DE  0000               	nop
  2823  05DF  0008               	return
  2824  05E0                     __end_ofi1_lcd_clear_all:	
  2825                           
  2826                           	psect	text15
  2827  04B4                     __ptext15:	
  2828 ;; *************** function i1_lcd_cmd *****************
  2829 ;; Defined at:
  2830 ;;		line 74 in file "LCD.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  c               1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  c               1    3[COMMON] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2844 ;;      Params:         0       0       0       0       0
  2845 ;;      Locals:         1       0       0       0       0
  2846 ;;      Temps:          2       0       0       0       0
  2847 ;;      Totals:         3       0       0       0       0
  2848 ;;Total ram usage:        3 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    1
  2851 ;; This function calls:
  2852 ;;		i1_enable
  2853 ;; This function is called by:
  2854 ;;		_testing
  2855 ;;		i1_lcd_clear_all
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function i1_lcd_cmd
  2861  04B4                     i1_lcd_cmd:	
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;i1lcd_cmd@c stored from wreg
  2866  04B4  00F3               	movwf	i1lcd_cmd@c
  2867                           
  2868                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2869  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2870  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2871  04B7  1086               	bcf	6,1	;volatile
  2872                           
  2873                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2874  04B8  300C               	movlw	12
  2875  04B9  00F1               	movwf	??i1_lcd_cmd
  2876  04BA                     u118_27:	
  2877  04BA  0BF1               	decfsz	??i1_lcd_cmd,f
  2878  04BB  2CBA               	goto	u118_27
  2879  04BC  0000               	nop
  2880                           
  2881                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2882  04BD  0873               	movf	i1lcd_cmd@c,w
  2883  04BE  00F1               	movwf	??i1_lcd_cmd
  2884  04BF  3004               	movlw	4
  2885  04C0                     u46_25:	
  2886  04C0  1003               	clrc
  2887  04C1  0CF1               	rrf	??i1_lcd_cmd,f
  2888  04C2  3EFF               	addlw	-1
  2889  04C3  1D03               	skipz
  2890  04C4  2CC0               	goto	u46_25
  2891  04C5  300F               	movlw	15
  2892  04C6  0571               	andwf	??i1_lcd_cmd,w
  2893  04C7  00F2               	movwf	??i1_lcd_cmd+1
  2894  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2895  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2896  04CA  0805               	movf	5,w	;volatile
  2897  04CB  39F0               	andlw	240
  2898  04CC  0472               	iorwf	??i1_lcd_cmd+1,w
  2899  04CD  0085               	movwf	5	;volatile
  2900                           
  2901                           ;LCD.c: 83:     enable();
  2902  04CE  118A  25CA  118A   	fcall	i1_enable
  2903                           
  2904                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2905  04D1  300F               	movlw	15
  2906  04D2  0573               	andwf	i1lcd_cmd@c,w
  2907  04D3  00F1               	movwf	??i1_lcd_cmd
  2908  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2909  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2910  04D6  0805               	movf	5,w	;volatile
  2911  04D7  39F0               	andlw	240
  2912  04D8  0471               	iorwf	??i1_lcd_cmd,w
  2913  04D9  0085               	movwf	5	;volatile
  2914                           
  2915                           ;LCD.c: 86:     enable();
  2916  04DA  118A  25CA  118A   	fcall	i1_enable
  2917                           
  2918                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2919  04DD  300C               	movlw	12
  2920  04DE  00F1               	movwf	??i1_lcd_cmd
  2921  04DF                     u119_27:	
  2922  04DF  0BF1               	decfsz	??i1_lcd_cmd,f
  2923  04E0  2CDF               	goto	u119_27
  2924  04E1  0000               	nop
  2925  04E2  0008               	return
  2926  04E3                     __end_ofi1_lcd_cmd:	
  2927                           
  2928                           	psect	text16
  2929  05CA                     __ptext16:	
  2930 ;; *************** function i1_enable *****************
  2931 ;; Defined at:
  2932 ;;		line 106 in file "LCD.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          1       0       0       0       0
  2949 ;;      Totals:         1       0       0       0       0
  2950 ;;Total ram usage:        1 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		i1_lcd_cmd
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function i1_enable
  2961  05CA                     i1_enable:	
  2962                           
  2963                           ;LCD.c: 108:     RB2 = 1;
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in i1_enable: [wreg]
  2967  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2968  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2969  05CC  1506               	bsf	6,2	;volatile
  2970                           
  2971                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2972  05CD  300C               	movlw	12
  2973  05CE  00F0               	movwf	??i1_enable
  2974  05CF                     u120_27:	
  2975  05CF  0BF0               	decfsz	??i1_enable,f
  2976  05D0  2DCF               	goto	u120_27
  2977  05D1  0000               	nop
  2978                           
  2979                           ;LCD.c: 112:     RB2 = 0;
  2980  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2981  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2982  05D4  1106               	bcf	6,2	;volatile
  2983  05D5  0008               	return
  2984  05D6                     __end_ofi1_enable:	
  2985  007E                     btemp	set	126	;btemp
  2986  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    344
    Data        3
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     20      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@string	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> itoa@buffer(COMMON[8]), 

    text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    lcd_print@text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), users(CODE[14]), STR_1(CODE[12]), chores(CODE[330]), 

    lcd_print@pointer	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), users(CODE[14]), STR_1(CODE[12]), chores(CODE[330]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _testing in COMMON

    _testing->i1_lcd_clear_all
    i1_lcd_clear_all->i1_lcd_cmd
    i1_lcd_cmd->i1_enable

Critical Paths under _main in BANK0

    _main->___wmul
    _lcd_print->___bmul
    _lcd_print->_lcd_cmd
    _lcd_print->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_clear_line->_lcd_cmd
    _lcd_clear_line->_lcd_data
    _lcd_data->_enable
    _lcd_clear_all->_lcd_cmd
    _lcd_cmd->_enable
    ___wmul->___awmod
    ___awmod->_random

Critical Paths under _testing in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _testing in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _testing in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _testing in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4105
                                             16 BANK0      4     4      0
                            ___awmod
                             ___bmul
                             ___wmul
                      _lcd_clear_all
                     _lcd_clear_line
                            _lcd_cmd
                           _lcd_init
                          _lcd_print
                             _random
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     222
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _random                                               3     3      0      72
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            8     3      5    1743
                                              4 BANK0      8     3      5
                             ___bmul (ARG)
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              4 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_line                                       4     4      0     156
                                              4 BANK0      4     4      0
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              1 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_all                                        1     1      0      44
                                              4 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     606
                                             10 BANK0      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              3 BANK0      7     3      4
                             _random (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _testing                                              2     2      0      88
                                              5 COMMON     2     2      0
                    i1_lcd_clear_all
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_all                                      1     1      0      44
                                              4 COMMON     1     1      0
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) i1_lcd_cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (6) i1_enable                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _random (ARG)
   ___bmul
   ___wmul
     ___awmod (ARG)
       _random (ARG)
   _lcd_clear_all
     _lcd_cmd
       _enable
   _lcd_clear_line
     _lcd_cmd
       _enable
     _lcd_data
       _enable
   _lcd_cmd
     _enable
   _lcd_init
     _lcd_cmd
       _enable
   _lcd_print
     ___bmul (ARG)
     _lcd_cmd (ARG)
       _enable
     _lcd_data (ARG)
       _enable
   _random
   _strlen

 _testing (ROOT)
   i1_lcd_clear_all
     i1_lcd_cmd
       i1_enable
   i1_lcd_cmd
     i1_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Nov 20 01:14:17 2019

                       pc 0002            ___bmul@product 0022               __CFG_CP$OFF 0000  
                      fsr 0004       ___wmul@multiplicand 002C                       l128 00B0  
                     l138 0158                       l169 04ED                       l267 0544  
                     _GIE 005F                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       _RA7 002F                       _PS0 0408  
                     _PS1 0409                       _PS2 040A                       u505 048A  
            __CFG_CPD$OFF 0000                       u515 04AE                       u445 0461  
                     u455 0562                       u475 0421                       u655 03E7  
                     _PSA 040B                       u675 03F8                       u685 0401  
                     u885 0545                       u895 054C                       fsr0 0004  
                     indf 0000              ___awmod@sign 0029              __CFG_IESO$ON 0000  
         i1_lcd_clear_all 05D6              __CFG_LVP$OFF 0000                      l1201 0499  
                    l1315 03D7                      l1341 0413                      l1333 0400  
                    l1245 04F7                      l1327 03E4                      l1319 03DE  
                    l1329 03F2                      l1337 040B                      l1185 042D  
                    l1249 04F9                      l1273 0582                      l1259 0509  
                    l1275 059B                      l1541 00A2                      l1295 05A1  
                    l1607 01DC                      l1543 0098                      l1561 00E1  
                    l1545 00B2                      l1299 05A7                      l1491 053C  
                    l1583 0160                      l1575 014A                      l1577 0140  
                    l1585 0161                      l1595 0197                      l1579 015B  
                    STR_1 036A                      _T0CS 040D                      u1017 00CF  
                    u1107 03B1                      u1027 01AF                      u1117 03BC  
                    u1037 01D8                      u1127 03C7                      u1047 01E2  
                    u1137 05C6                      u1057 037A                      u1147 0459  
                    u1067 0385                      u1157 0480                      u1077 0390  
                    u1167 05B7                      u1087 039B                      u1097 03A6  
                    _TMR0 0001                      _TMR1 000E              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 0028                      _rand 0036  
                    _text 0034                      btemp 007E                      _user 003B  
                    start 000B         ___bmul@multiplier 0023             __CFG_MCLRE$ON 0000  
              i1lcd_cmd@c 0073           ??_lcd_clear_all 0024                     ?_main 0070  
           __CFG_WDTE$OFF 0000           __end_of___awmod 0418                     i1l150 0523  
                   i1l154 0531                     i1l149 052A                     _PORTA 0005  
                   _PORTB 0006                     u46_25 04C0                     _TRISA 0085  
                   _TRISB 0086            __CFG_CCPMX$RB0 0000              lcd_print@pos 0028  
         __end_of_lcd_cmd 0484                     _print 0040                     _users 035C  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_testing 0538  
        __end_ofi1_enable 05D6                     status 0003                     wtemp0 007E  
         __initialization 000D        __size_ofi1_lcd_cmd 002F              __end_of_main 01E8  
                  ??_main 0030   __end_ofi1_lcd_clear_all 05E0          ??_lcd_clear_line 0024  
                  _INT0IE 005C                    _INT0IF 0059                    u120_27 05CF  
                  i1l1465 0525                    u117_27 05DC                    u118_27 04BA  
                  u119_27 04DF                    _TMR0IE 005D                    _TMR0IF 005A  
         lcd_clear_line@i 0026            __CFG_PWRTE$OFF 0000             lcd_print@line 0027  
           lcd_print@size 0026             lcd_print@text 0024          __end_of_lcd_data 057D  
        __end_of_lcd_init 03CB                    ___bmul 059D                    ___wmul 0538  
               ??___awmod 0027                    _enable 05B0                    _chores 0212  
                  _asleep 003C                    _lastrb 0079                    _random 04E3  
         ___awmod@divisor 0023                    _scores 0077           ___awmod@counter 0028  
               ??_lcd_cmd 0021                    _strlen 057D                    saved_w 007E  
               ??_testing 0075         __end_ofi1_lcd_cmd 04E3   __end_of__initialization 0025  
     ___bmul@multiplicand 0020            __pcstackCOMMON 0070              __pidataBANK0 05E0  
           __end_of_users 036A          ?i1_lcd_clear_all 0070                 ?i1_enable 0070  
             random@count 0038        __size_of_lcd_print 0039                __pbssBANK0 0034  
              __pmaintext 0028                   ?___bmul 0020                   ?___wmul 002A  
              __pintentry 0004                   ?_enable 0070                   ?_random 0070  
                 ?_strlen 0020                ??i1_enable 0070                 ?_lcd_data 0070  
               ?_lcd_init 0070                __stringtab 0200            random@original 0022  
            strlen@result 0025           __size_of___bmul 0013         __end_of_lcd_print 0451  
            strlen@string 0020                   ___awmod 03CB           __size_of___wmul 0023  
         __size_of_enable 000E           __size_of_random 002D     __end_of_lcd_clear_all 05CA  
                 __ptext1 057D                   __ptext2 04E3                   __ptext3 0418  
                 __ptext4 0376                   __ptext5 0484                   __ptext6 055B  
                 __ptext7 05BE                   __ptext8 0451                   __ptext9 05B0  
                 _lcd_cmd 0451           __size_of_strlen 0020          ___awmod@dividend 0025  
                 _testing 0510                ??_lcd_data 0021                ??_lcd_init 0024  
    end_of_initialization 0025              __pstringtext 0200                   strlen@i 0023  
      lcd_clear_line@line 0025                 i1_lcd_cmd 04B4            __end_of___bmul 05B0  
          __end_of___wmul 055B            __end_of_enable 05BE            __end_of_chores 035C  
          __end_of_random 0510            __end_of_strlen 059D       start_initialization 000D  
       __size_ofi1_enable 000C   __size_of_lcd_clear_line 0030                ?i1_lcd_cmd 0070  
        lcd_print@pointer 002A                  ??___bmul 0021                  ??___wmul 002E  
                ??_enable 0020               __pdataBANK0 003E                  ??_random 0020  
                ??_strlen 0022               __pbssCOMMON 0077                 ___latbits 0001  
           __pcstackBANK0 0020  __size_ofi1_lcd_clear_all 000A                random@rand 0039  
              random@rbit 0021         __size_of_lcd_data 0022         __size_of_lcd_init 0055  
                ?___awmod 0023                 _lcd_print 0418                  ?_lcd_cmd 0070  
                ?_testing 0070               ??i1_lcd_cmd 0071         interrupt_function 0004  
          ___wmul@product 002E                 _long_text 003A                 _space_pos 003E  
               lcd_data@d 0023                ?_lcd_print 0024               __stringbase 0212  
       ___wmul@multiplier 002A                  i1_enable 05CA               _btn_pressed 003D  
          _lcd_clear_line 0484    __size_of_lcd_clear_all 000C         ??i1_lcd_clear_all 0074  
        __size_of___awmod 004D        __end_of__stringtab 0212          __size_of_lcd_cmd 0033  
  __end_of_lcd_clear_line 04B4                  __ptext10 0538                  __ptext11 059D  
                __ptext12 03CB                  __ptext13 0510                  __ptext14 05D6  
                __ptext15 04B4                  __ptext16 05CA                  _lcd_data 055B  
                _lcd_init 0376          __size_of_testing 0028             __size_of_main 01C0  
                lcd_cmd@c 0023               ??_lcd_print 0029             _lcd_clear_all 05BE  
         ?_lcd_clear_line 0070                  intlevel1 0000                 stringcode 020A  
          ?_lcd_clear_all 0070                  stringtab 0200        __CFG_FOSC$INTOSCIO 0000  
