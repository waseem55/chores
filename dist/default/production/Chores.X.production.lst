

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Nov 09 14:32:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F88 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  008F                     	;# 
   159  0090                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230                           
   231                           	psect	stringtext
   232  0100                     __pstringtext:	
   233  0100                     stringtab:	
   234  0100                     __stringtab:	
   235                           
   236                           ;	String table - string pointers are 2 bytes each
   237  0100  1BFF               	btfsc	btemp+1,7
   238  0101  290A               	ljmp	stringcode
   239  0102  1383               	bcf	3,7
   240  0103  187F               	btfsc	btemp+1,0
   241  0104  1783               	bsf	3,7
   242  0105  0800               	movf	0,w
   243  0106  0A84               	incf	4,f
   244  0107  1903               	skipnz
   245  0108  0AFF               	incf	btemp+1,f
   246  0109  0008               	return
   247  010A                     stringcode:	
   248  010A  087F               	movf	btemp+1,w
   249  010B  397F               	andlw	127
   250  010C  008A               	movwf	10
   251  010D  0804               	movf	4,w
   252  010E  0A84               	incf	4,f
   253  010F  1903               	skipnz
   254  0110  0AFF               	incf	btemp+1,f
   255  0111  0082               	movwf	2
   256  0112                     __stringbase:	
   257  0112                     __end_of__stringtab:	
   258  0112                     _chores:	
   259  0112  3456               	retlw	86
   260  0113  3461               	retlw	97
   261  0114  3463               	retlw	99
   262  0115  3475               	retlw	117
   263  0116  3475               	retlw	117
   264  0117  346D               	retlw	109
   265  0118  3400               	retlw	0
   266  0119  3400               	retlw	0
   267  011A  3400               	retlw	0
   268  011B  3400               	retlw	0
   269  011C  3400               	retlw	0
   270  011D  3400               	retlw	0
   271  011E  3400               	retlw	0
   272  011F  3400               	retlw	0
   273  0120  3400               	retlw	0
   274  0121  3400               	retlw	0
   275  0122  3400               	retlw	0
   276  0123  3400               	retlw	0
   277  0124  3400               	retlw	0
   278  0125  3400               	retlw	0
   279  0126  3400               	retlw	0
   280  0127  3400               	retlw	0
   281  0128  3400               	retlw	0
   282  0129  3400               	retlw	0
   283  012A  3400               	retlw	0
   284  012B  3400               	retlw	0
   285  012C  3400               	retlw	0
   286  012D  3400               	retlw	0
   287  012E  3400               	retlw	0
   288  012F  3400               	retlw	0
   289  0130  3443               	retlw	67
   290  0131  346C               	retlw	108
   291  0132  3465               	retlw	101
   292  0133  3461               	retlw	97
   293  0134  346E               	retlw	110
   294  0135  3420               	retlw	32
   295  0136  3462               	retlw	98
   296  0137  3461               	retlw	97
   297  0138  3474               	retlw	116
   298  0139  3468               	retlw	104
   299  013A  3472               	retlw	114
   300  013B  346F               	retlw	111
   301  013C  346F               	retlw	111
   302  013D  346D               	retlw	109
   303  013E  3400               	retlw	0
   304  013F  3400               	retlw	0
   305  0140  3400               	retlw	0
   306  0141  3400               	retlw	0
   307  0142  3400               	retlw	0
   308  0143  3400               	retlw	0
   309  0144  3400               	retlw	0
   310  0145  3400               	retlw	0
   311  0146  3400               	retlw	0
   312  0147  3400               	retlw	0
   313  0148  3400               	retlw	0
   314  0149  3400               	retlw	0
   315  014A  3400               	retlw	0
   316  014B  3400               	retlw	0
   317  014C  3400               	retlw	0
   318  014D  3400               	retlw	0
   319  014E  344D               	retlw	77
   320  014F  346F               	retlw	111
   321  0150  3470               	retlw	112
   322  0151  3420               	retlw	32
   323  0152  3466               	retlw	102
   324  0153  346C               	retlw	108
   325  0154  346F               	retlw	111
   326  0155  346F               	retlw	111
   327  0156  3472               	retlw	114
   328  0157  3400               	retlw	0
   329  0158  3400               	retlw	0
   330  0159  3400               	retlw	0
   331  015A  3400               	retlw	0
   332  015B  3400               	retlw	0
   333  015C  3400               	retlw	0
   334  015D  3400               	retlw	0
   335  015E  3400               	retlw	0
   336  015F  3400               	retlw	0
   337  0160  3400               	retlw	0
   338  0161  3400               	retlw	0
   339  0162  3400               	retlw	0
   340  0163  3400               	retlw	0
   341  0164  3400               	retlw	0
   342  0165  3400               	retlw	0
   343  0166  3400               	retlw	0
   344  0167  3400               	retlw	0
   345  0168  3400               	retlw	0
   346  0169  3400               	retlw	0
   347  016A  3400               	retlw	0
   348  016B  3400               	retlw	0
   349  016C  3457               	retlw	87
   350  016D  3461               	retlw	97
   351  016E  3473               	retlw	115
   352  016F  3468               	retlw	104
   353  0170  3420               	retlw	32
   354  0171  3462               	retlw	98
   355  0172  3465               	retlw	101
   356  0173  3464               	retlw	100
   357  0174  3420               	retlw	32
   358  0175  3473               	retlw	115
   359  0176  3468               	retlw	104
   360  0177  3465               	retlw	101
   361  0178  3465               	retlw	101
   362  0179  3474               	retlw	116
   363  017A  3473               	retlw	115
   364  017B  3400               	retlw	0
   365  017C  3400               	retlw	0
   366  017D  3400               	retlw	0
   367  017E  3400               	retlw	0
   368  017F  3400               	retlw	0
   369  0180  3400               	retlw	0
   370  0181  3400               	retlw	0
   371  0182  3400               	retlw	0
   372  0183  3400               	retlw	0
   373  0184  3400               	retlw	0
   374  0185  3400               	retlw	0
   375  0186  3400               	retlw	0
   376  0187  3400               	retlw	0
   377  0188  3400               	retlw	0
   378  0189  3400               	retlw	0
   379  018A  3457               	retlw	87
   380  018B  3461               	retlw	97
   381  018C  3473               	retlw	115
   382  018D  3468               	retlw	104
   383  018E  3420               	retlw	32
   384  018F  3463               	retlw	99
   385  0190  3475               	retlw	117
   386  0191  3472               	retlw	114
   387  0192  3474               	retlw	116
   388  0193  3461               	retlw	97
   389  0194  3469               	retlw	105
   390  0195  346E               	retlw	110
   391  0196  3473               	retlw	115
   392  0197  3400               	retlw	0
   393  0198  3400               	retlw	0
   394  0199  3400               	retlw	0
   395  019A  3400               	retlw	0
   396  019B  3400               	retlw	0
   397  019C  3400               	retlw	0
   398  019D  3400               	retlw	0
   399  019E  3400               	retlw	0
   400  019F  3400               	retlw	0
   401  01A0  3400               	retlw	0
   402  01A1  3400               	retlw	0
   403  01A2  3400               	retlw	0
   404  01A3  3400               	retlw	0
   405  01A4  3400               	retlw	0
   406  01A5  3400               	retlw	0
   407  01A6  3400               	retlw	0
   408  01A7  3400               	retlw	0
   409  01A8  3444               	retlw	68
   410  01A9  3475               	retlw	117
   411  01AA  3473               	retlw	115
   412  01AB  3474               	retlw	116
   413  01AC  3469               	retlw	105
   414  01AD  346E               	retlw	110
   415  01AE  3467               	retlw	103
   416  01AF  3400               	retlw	0
   417  01B0  3400               	retlw	0
   418  01B1  3400               	retlw	0
   419  01B2  3400               	retlw	0
   420  01B3  3400               	retlw	0
   421  01B4  3400               	retlw	0
   422  01B5  3400               	retlw	0
   423  01B6  3400               	retlw	0
   424  01B7  3400               	retlw	0
   425  01B8  3400               	retlw	0
   426  01B9  3400               	retlw	0
   427  01BA  3400               	retlw	0
   428  01BB  3400               	retlw	0
   429  01BC  3400               	retlw	0
   430  01BD  3400               	retlw	0
   431  01BE  3400               	retlw	0
   432  01BF  3400               	retlw	0
   433  01C0  3400               	retlw	0
   434  01C1  3400               	retlw	0
   435  01C2  3400               	retlw	0
   436  01C3  3400               	retlw	0
   437  01C4  3400               	retlw	0
   438  01C5  3400               	retlw	0
   439  01C6  3443               	retlw	67
   440  01C7  346C               	retlw	108
   441  01C8  3465               	retlw	101
   442  01C9  3461               	retlw	97
   443  01CA  346E               	retlw	110
   444  01CB  3420               	retlw	32
   445  01CC  346D               	retlw	109
   446  01CD  3469               	retlw	105
   447  01CE  3463               	retlw	99
   448  01CF  3472               	retlw	114
   449  01D0  346F               	retlw	111
   450  01D1  3477               	retlw	119
   451  01D2  3461               	retlw	97
   452  01D3  3476               	retlw	118
   453  01D4  3465               	retlw	101
   454  01D5  3400               	retlw	0
   455  01D6  3400               	retlw	0
   456  01D7  3400               	retlw	0
   457  01D8  3400               	retlw	0
   458  01D9  3400               	retlw	0
   459  01DA  3400               	retlw	0
   460  01DB  3400               	retlw	0
   461  01DC  3400               	retlw	0
   462  01DD  3400               	retlw	0
   463  01DE  3400               	retlw	0
   464  01DF  3400               	retlw	0
   465  01E0  3400               	retlw	0
   466  01E1  3400               	retlw	0
   467  01E2  3400               	retlw	0
   468  01E3  3400               	retlw	0
   469  01E4  3453               	retlw	83
   470  01E5  3463               	retlw	99
   471  01E6  3472               	retlw	114
   472  01E7  3475               	retlw	117
   473  01E8  3462               	retlw	98
   474  01E9  3420               	retlw	32
   475  01EA  3464               	retlw	100
   476  01EB  346F               	retlw	111
   477  01EC  346F               	retlw	111
   478  01ED  3472               	retlw	114
   479  01EE  3473               	retlw	115
   480  01EF  3420               	retlw	32
   481  01F0  3461               	retlw	97
   482  01F1  346E               	retlw	110
   483  01F2  3464               	retlw	100
   484  01F3  3420               	retlw	32
   485  01F4  3463               	retlw	99
   486  01F5  3461               	retlw	97
   487  01F6  3462               	retlw	98
   488  01F7  3469               	retlw	105
   489  01F8  346E               	retlw	110
   490  01F9  3465               	retlw	101
   491  01FA  3474               	retlw	116
   492  01FB  3473               	retlw	115
   493  01FC  3400               	retlw	0
   494  01FD  3400               	retlw	0
   495  01FE  3400               	retlw	0
   496  01FF  3400               	retlw	0
   497  0200  3400               	retlw	0
   498  0201  3400               	retlw	0
   499  0202  344F               	retlw	79
   500  0203  3472               	retlw	114
   501  0204  3467               	retlw	103
   502  0205  3461               	retlw	97
   503  0206  346E               	retlw	110
   504  0207  3469               	retlw	105
   505  0208  347A               	retlw	122
   506  0209  3465               	retlw	101
   507  020A  3420               	retlw	32
   508  020B  3463               	retlw	99
   509  020C  346C               	retlw	108
   510  020D  346F               	retlw	111
   511  020E  3473               	retlw	115
   512  020F  3465               	retlw	101
   513  0210  3474               	retlw	116
   514  0211  3400               	retlw	0
   515  0212  3400               	retlw	0
   516  0213  3400               	retlw	0
   517  0214  3400               	retlw	0
   518  0215  3400               	retlw	0
   519  0216  3400               	retlw	0
   520  0217  3400               	retlw	0
   521  0218  3400               	retlw	0
   522  0219  3400               	retlw	0
   523  021A  3400               	retlw	0
   524  021B  3400               	retlw	0
   525  021C  3400               	retlw	0
   526  021D  3400               	retlw	0
   527  021E  3400               	retlw	0
   528  021F  3400               	retlw	0
   529  0220  3443               	retlw	67
   530  0221  346C               	retlw	108
   531  0222  3465               	retlw	101
   532  0223  3461               	retlw	97
   533  0224  346E               	retlw	110
   534  0225  3420               	retlw	32
   535  0226  3475               	retlw	117
   536  0227  346E               	retlw	110
   537  0228  3464               	retlw	100
   538  0229  3465               	retlw	101
   539  022A  3472               	retlw	114
   540  022B  3420               	retlw	32
   541  022C  3473               	retlw	115
   542  022D  3469               	retlw	105
   543  022E  346E               	retlw	110
   544  022F  346B               	retlw	107
   545  0230  3473               	retlw	115
   546  0231  3400               	retlw	0
   547  0232  3400               	retlw	0
   548  0233  3400               	retlw	0
   549  0234  3400               	retlw	0
   550  0235  3400               	retlw	0
   551  0236  3400               	retlw	0
   552  0237  3400               	retlw	0
   553  0238  3400               	retlw	0
   554  0239  3400               	retlw	0
   555  023A  3400               	retlw	0
   556  023B  3400               	retlw	0
   557  023C  3400               	retlw	0
   558  023D  3400               	retlw	0
   559  023E  3443               	retlw	67
   560  023F  346C               	retlw	108
   561  0240  3465               	retlw	101
   562  0241  3461               	retlw	97
   563  0242  346E               	retlw	110
   564  0243  3420               	retlw	32
   565  0244  3466               	retlw	102
   566  0245  3472               	retlw	114
   567  0246  3469               	retlw	105
   568  0247  3464               	retlw	100
   569  0248  3467               	retlw	103
   570  0249  3465               	retlw	101
   571  024A  3400               	retlw	0
   572  024B  3400               	retlw	0
   573  024C  3400               	retlw	0
   574  024D  3400               	retlw	0
   575  024E  3400               	retlw	0
   576  024F  3400               	retlw	0
   577  0250  3400               	retlw	0
   578  0251  3400               	retlw	0
   579  0252  3400               	retlw	0
   580  0253  3400               	retlw	0
   581  0254  3400               	retlw	0
   582  0255  3400               	retlw	0
   583  0256  3400               	retlw	0
   584  0257  3400               	retlw	0
   585  0258  3400               	retlw	0
   586  0259  3400               	retlw	0
   587  025A  3400               	retlw	0
   588  025B  3400               	retlw	0
   589  025C                     __end_of_chores:	
   590  025C                     _users:	
   591  025C  3457               	retlw	87
   592  025D  3461               	retlw	97
   593  025E  3473               	retlw	115
   594  025F  3465               	retlw	101
   595  0260  3465               	retlw	101
   596  0261  346D               	retlw	109
   597  0262  3400               	retlw	0
   598  0263  3448               	retlw	72
   599  0264  3469               	retlw	105
   600  0265  3462               	retlw	98
   601  0266  3461               	retlw	97
   602  0267  3400               	retlw	0
   603  0268  3400               	retlw	0
   604  0269  3400               	retlw	0
   605  026A                     __end_of_users:	
   606  000E                     _TMR1	set	14
   607  0001                     _TMR0	set	1
   608  0006                     _PORTB	set	6
   609  0005                     _PORTA	set	5
   610  002F                     _RA7	set	47
   611  005A                     _TMR0IF	set	90
   612  005F                     _GIE	set	95
   613  005D                     _TMR0IE	set	93
   614  005C                     _INT0IE	set	92
   615  0059                     _INT0IF	set	89
   616  0032                     _RB2	set	50
   617  0031                     _RB1	set	49
   618  0086                     _TRISB	set	134
   619  0085                     _TRISA	set	133
   620  0408                     _PS0	set	1032
   621  0409                     _PS1	set	1033
   622  040A                     _PS2	set	1034
   623  040B                     _PSA	set	1035
   624  040D                     _T0CS	set	1037
   625  026A                     STR_1:	
   626  026A  3473               	retlw	115	;'s'
   627  026B  346C               	retlw	108	;'l'
   628  026C  3465               	retlw	101	;'e'
   629  026D  3465               	retlw	101	;'e'
   630  026E  3470               	retlw	112	;'p'
   631  026F  3420               	retlw	32	;' '
   632  0270  3474               	retlw	116	;'t'
   633  0271  3469               	retlw	105	;'i'
   634  0272  346D               	retlw	109	;'m'
   635  0273  3465               	retlw	101	;'e'
   636  0274  3421               	retlw	33	;'!'
   637  0275  3400               	retlw	0
   638                           
   639                           ; #config settings
   640  0000                     
   641                           	psect	cinit
   642  0013                     start_initialization:	
   643  0013                     __initialization:	
   644                           
   645                           ; Clear objects allocated to BANK0
   646  0013  1383               	bcf	3,7	;select IRP bank0
   647  0014  303E               	movlw	low __pbssBANK0
   648  0015  0084               	movwf	4
   649  0016  304C               	movlw	low (__pbssBANK0+14)
   650  0017  118A  27B8         	fcall	clear_ram0
   651  0019                     end_of_initialization:	
   652                           ;End of C runtime variable initialization code
   653                           
   654  0019                     __end_of__initialization:	
   655  0019  0183               	clrf	3
   656  001A  118A  2B60         	ljmp	_main	;jump to C main() function
   657                           
   658                           	psect	bssBANK0
   659  003E                     __pbssBANK0:	
   660  003E                     _scores:	
   661  003E                     	ds	2
   662  0040                     _text:	
   663  0040                     	ds	2
   664  0042                     _space_pos:	
   665  0042                     	ds	2
   666  0044                     _rand:	
   667  0044                     	ds	2
   668  0046                     random@count:	
   669  0046                     	ds	1
   670  0047                     random@rand:	
   671  0047                     	ds	1
   672  0048                     _long_text:	
   673  0048                     	ds	1
   674  0049                     _lastrb:	
   675  0049                     	ds	1
   676  004A                     _user:	
   677  004A                     	ds	1
   678  004B                     _lcd_off:	
   679  004B                     	ds	1
   680                           
   681                           	psect	clrtext
   682  07B8                     clear_ram0:	
   683                           ;	Called with FSR containing the base address, and
   684                           ;	W with the last address+1
   685                           
   686  07B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   687  07B9                     clrloop0:	
   688  07B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   689  07BA  0A84               	incf	4,f	;increment pointer
   690  07BB  0604               	xorwf	4,w	;XOR with final address
   691  07BC  1903               	btfsc	3,2	;have we reached the end yet?
   692  07BD  3400               	retlw	0	;all done for this memory range, return
   693  07BE  0604               	xorwf	4,w	;XOR again to restore value
   694  07BF  2FB9               	goto	clrloop0	;do the next byte
   695                           
   696                           	psect	cstackCOMMON
   697  0070                     __pcstackCOMMON:	
   698  0070                     ?_lcd_cmd:	
   699  0070                     ?_lcd_data:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_enable:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_random:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_lcd_clear_all:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_lcd_clear_line:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_lcd_init:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_main:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_testing:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?i1_lcd_clear_all:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?i1_lcd_clear_line:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?i1_lcd_cmd:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?i1_lcd_data:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?i1_enable:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??i1_enable:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?i1_random:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ??i1_random:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?i1_strlen:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     i1strlen@string:	
   751                           ; 1 bytes @ 0x0
   752                           
   753                           
   754                           ; 2 bytes @ 0x0
   755  0070                     	ds	1
   756  0071                     ??i1_lcd_cmd:	
   757  0071                     ??i1_lcd_data:	
   758                           ; 1 bytes @ 0x1
   759                           
   760  0071                     i1random@rbit:	
   761                           ; 1 bytes @ 0x1
   762                           
   763                           
   764                           ; 1 bytes @ 0x1
   765  0071                     	ds	1
   766  0072                     ??i1_strlen:	
   767  0072                     i1random@original:	
   768                           ; 1 bytes @ 0x2
   769                           
   770                           
   771                           ; 1 bytes @ 0x2
   772  0072                     	ds	1
   773  0073                     ?i1___awmod:	
   774  0073                     i1lcd_cmd@c:	
   775                           ; 2 bytes @ 0x3
   776                           
   777  0073                     i1lcd_data@d:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     i1strlen@i:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     i1___awmod@divisor:	
   784                           ; 2 bytes @ 0x3
   785                           
   786                           
   787                           ; 2 bytes @ 0x3
   788  0073                     	ds	1
   789  0074                     ?i1_lcd_print:	
   790  0074                     ??i1_lcd_clear_all:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0074                     ??i1_lcd_clear_line:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     i1lcd_print@text:	
   797                           ; 1 bytes @ 0x4
   798                           
   799                           
   800                           ; 2 bytes @ 0x4
   801  0074                     	ds	1
   802  0075                     i1lcd_clear_line@line:	
   803  0075                     i1strlen@result:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     i1___awmod@dividend:	
   807                           ; 1 bytes @ 0x5
   808                           
   809                           
   810                           ; 2 bytes @ 0x5
   811  0075                     	ds	1
   812  0076                     i1lcd_print@size:	
   813  0076                     i1lcd_clear_line@i:	
   814                           ; 1 bytes @ 0x6
   815                           
   816                           
   817                           ; 2 bytes @ 0x6
   818  0076                     	ds	1
   819  0077                     ??i1___awmod:	
   820  0077                     i1lcd_print@line:	
   821                           ; 1 bytes @ 0x7
   822                           
   823                           
   824                           ; 1 bytes @ 0x7
   825  0077                     	ds	1
   826  0078                     i1lcd_print@pos:	
   827  0078                     i1___awmod@counter:	
   828                           ; 1 bytes @ 0x8
   829                           
   830                           
   831                           ; 1 bytes @ 0x8
   832  0078                     	ds	1
   833  0079                     ??i1_lcd_print:	
   834  0079                     i1___awmod@sign:	
   835                           ; 1 bytes @ 0x9
   836                           
   837                           
   838                           ; 1 bytes @ 0x9
   839  0079                     	ds	1
   840  007A                     ?i1___wmul:	
   841  007A                     i1lcd_print@pointer:	
   842                           ; 2 bytes @ 0xA
   843                           
   844  007A                     i1___wmul@multiplier:	
   845                           ; 2 bytes @ 0xA
   846                           
   847                           
   848                           ; 2 bytes @ 0xA
   849  007A                     	ds	2
   850  007C                     i1___wmul@multiplicand:	
   851                           
   852                           ; 2 bytes @ 0xC
   853  007C                     	ds	2
   854  007E                     ??i1___wmul:	
   855                           
   856                           	psect	cstackBANK0
   857  0020                     __pcstackBANK0:	
   858                           ; 1 bytes @ 0xE
   859                           
   860  0020                     i1___wmul@product:	
   861                           
   862                           ; 2 bytes @ 0x0
   863  0020                     	ds	2
   864  0022                     ??_testing:	
   865                           
   866                           ; 1 bytes @ 0x2
   867  0022                     	ds	8
   868  002A                     ??_enable:	
   869  002A                     ??_random:	
   870                           ; 1 bytes @ 0xA
   871                           
   872  002A                     ?_strlen:	
   873                           ; 1 bytes @ 0xA
   874                           
   875  002A                     ?___bmul:	
   876                           ; 1 bytes @ 0xA
   877                           
   878  002A                     ___bmul@multiplicand:	
   879                           ; 1 bytes @ 0xA
   880                           
   881  002A                     strlen@string:	
   882                           ; 1 bytes @ 0xA
   883                           
   884                           
   885                           ; 2 bytes @ 0xA
   886  002A                     	ds	1
   887  002B                     ??_lcd_cmd:	
   888  002B                     ??_lcd_data:	
   889                           ; 1 bytes @ 0xB
   890                           
   891  002B                     ??___bmul:	
   892                           ; 1 bytes @ 0xB
   893                           
   894  002B                     random@rbit:	
   895                           ; 1 bytes @ 0xB
   896                           
   897                           
   898                           ; 1 bytes @ 0xB
   899  002B                     	ds	1
   900  002C                     ??_strlen:	
   901  002C                     random@original:	
   902                           ; 1 bytes @ 0xC
   903                           
   904  002C                     ___bmul@product:	
   905                           ; 1 bytes @ 0xC
   906                           
   907                           
   908                           ; 1 bytes @ 0xC
   909  002C                     	ds	1
   910  002D                     ?___awmod:	
   911  002D                     lcd_cmd@c:	
   912                           ; 2 bytes @ 0xD
   913                           
   914  002D                     lcd_data@d:	
   915                           ; 1 bytes @ 0xD
   916                           
   917  002D                     ___bmul@multiplier:	
   918                           ; 1 bytes @ 0xD
   919                           
   920  002D                     strlen@i:	
   921                           ; 1 bytes @ 0xD
   922                           
   923  002D                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0xD
   925                           
   926                           
   927                           ; 2 bytes @ 0xD
   928  002D                     	ds	1
   929  002E                     ?_lcd_print:	
   930  002E                     ??_lcd_clear_all:	
   931                           ; 1 bytes @ 0xE
   932                           
   933  002E                     ??_lcd_clear_line:	
   934                           ; 1 bytes @ 0xE
   935                           
   936  002E                     ??_lcd_init:	
   937                           ; 1 bytes @ 0xE
   938                           
   939  002E                     lcd_print@text:	
   940                           ; 1 bytes @ 0xE
   941                           
   942                           
   943                           ; 2 bytes @ 0xE
   944  002E                     	ds	1
   945  002F                     lcd_clear_line@line:	
   946  002F                     strlen@result:	
   947                           ; 1 bytes @ 0xF
   948                           
   949  002F                     ___awmod@dividend:	
   950                           ; 1 bytes @ 0xF
   951                           
   952                           
   953                           ; 2 bytes @ 0xF
   954  002F                     	ds	1
   955  0030                     lcd_print@size:	
   956  0030                     lcd_clear_line@i:	
   957                           ; 1 bytes @ 0x10
   958                           
   959                           
   960                           ; 2 bytes @ 0x10
   961  0030                     	ds	1
   962  0031                     ??___awmod:	
   963  0031                     lcd_print@line:	
   964                           ; 1 bytes @ 0x11
   965                           
   966                           
   967                           ; 1 bytes @ 0x11
   968  0031                     	ds	1
   969  0032                     lcd_print@pos:	
   970  0032                     ___awmod@counter:	
   971                           ; 1 bytes @ 0x12
   972                           
   973                           
   974                           ; 1 bytes @ 0x12
   975  0032                     	ds	1
   976  0033                     ??_lcd_print:	
   977  0033                     ___awmod@sign:	
   978                           ; 1 bytes @ 0x13
   979                           
   980                           
   981                           ; 1 bytes @ 0x13
   982  0033                     	ds	1
   983  0034                     ?___wmul:	
   984  0034                     lcd_print@pointer:	
   985                           ; 2 bytes @ 0x14
   986                           
   987  0034                     ___wmul@multiplier:	
   988                           ; 2 bytes @ 0x14
   989                           
   990                           
   991                           ; 2 bytes @ 0x14
   992  0034                     	ds	2
   993  0036                     ___wmul@multiplicand:	
   994                           
   995                           ; 2 bytes @ 0x16
   996  0036                     	ds	2
   997  0038                     ??___wmul:	
   998  0038                     ___wmul@product:	
   999                           ; 1 bytes @ 0x18
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x18
  1003  0038                     	ds	2
  1004  003A                     ??_main:	
  1005                           
  1006                           ; 1 bytes @ 0x1A
  1007  003A                     	ds	4
  1008                           
  1009                           	psect	maintext
  1010  0360                     __pmaintext:	
  1011 ;;
  1012 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1013 ;;
  1014 ;; *************** function _main *****************
  1015 ;; Defined at:
  1016 ;;		line 55 in file "Main.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : B00/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          0       4       0       0       0
  1033 ;;      Totals:         0       4       0       0       0
  1034 ;;Total ram usage:        4 bytes
  1035 ;; Hardware stack levels required when called:    7
  1036 ;; This function calls:
  1037 ;;		___awmod
  1038 ;;		___bmul
  1039 ;;		___wmul
  1040 ;;		_lcd_clear_all
  1041 ;;		_lcd_clear_line
  1042 ;;		_lcd_init
  1043 ;;		_lcd_print
  1044 ;;		_random
  1045 ;;		_strlen
  1046 ;; This function is called by:
  1047 ;;		Startup code after reset
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _main
  1053  0360                     _main:	
  1054                           
  1055                           ;Main.c: 57:     TRISA = 0xc0;
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1059  0360  30C0               	movlw	192
  1060  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0363  0085               	movwf	5	;volatile
  1063                           
  1064                           ;Main.c: 58:     TRISB = 0x01;
  1065  0364  3001               	movlw	1
  1066  0365  0086               	movwf	6	;volatile
  1067                           
  1068                           ;Main.c: 59:     PORTA = 0x00;
  1069  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0368  0185               	clrf	5	;volatile
  1072                           
  1073                           ;Main.c: 60:     PORTB = 0x00;
  1074  0369  0186               	clrf	6	;volatile
  1075                           
  1076                           ;Main.c: 62:     INT0IF = 0;
  1077  036A  108B               	bcf	11,1	;volatile
  1078                           
  1079                           ;Main.c: 63:     INT0IE = 1;
  1080  036B  160B               	bsf	11,4	;volatile
  1081                           
  1082                           ;Main.c: 64:     T0CS = 0;
  1083  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1084  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1085  036E  1281               	bcf	1,5	;volatile
  1086                           
  1087                           ;Main.c: 65:     PSA = 0;
  1088  036F  1181               	bcf	1,3	;volatile
  1089                           
  1090                           ;Main.c: 66:     PS2 = 1;
  1091  0370  1501               	bsf	1,2	;volatile
  1092                           
  1093                           ;Main.c: 67:     PS1 = 1;
  1094  0371  1481               	bsf	1,1	;volatile
  1095                           
  1096                           ;Main.c: 68:     PS0 = 1;
  1097  0372  1401               	bsf	1,0	;volatile
  1098                           
  1099                           ;Main.c: 69:     TMR0IE = 0;
  1100  0373  128B               	bcf	11,5	;volatile
  1101                           
  1102                           ;Main.c: 71:     GIE = 1;
  1103  0374  178B               	bsf	11,7	;volatile
  1104                           
  1105                           ;Main.c: 74:     lcd_init();
  1106  0375  118A  2433  118A   	fcall	_lcd_init
  1107                           
  1108                           ;Main.c: 76:     rand = (random()%10);
  1109  0378  300A               	movlw	10
  1110  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1111  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1112  037B  00AD               	movwf	___awmod@divisor
  1113  037C  3000               	movlw	0
  1114  037D  00AE               	movwf	___awmod@divisor+1
  1115  037E  118A  264F  118A   	fcall	_random
  1116  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0383  00BA               	movwf	??_main
  1119  0384  01BB               	clrf	??_main+1
  1120  0385  083A               	movf	??_main,w
  1121  0386  00AF               	movwf	___awmod@dividend
  1122  0387  083B               	movf	??_main+1,w
  1123  0388  00B0               	movwf	___awmod@dividend+1
  1124  0389  118A  2488  118A   	fcall	___awmod
  1125  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1126  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1127  038E  082E               	movf	?___awmod+1,w
  1128  038F  00C5               	movwf	_rand+1
  1129  0390  082D               	movf	?___awmod,w
  1130  0391  00C4               	movwf	_rand
  1131                           
  1132                           ;Main.c: 77:     text = &chores[rand % 11][0];
  1133  0392  0845               	movf	_rand+1,w
  1134  0393  00B0               	movwf	___awmod@dividend+1
  1135  0394  0844               	movf	_rand,w
  1136  0395  00AF               	movwf	___awmod@dividend
  1137  0396  300B               	movlw	11
  1138  0397  00AD               	movwf	___awmod@divisor
  1139  0398  3000               	movlw	0
  1140  0399  00AE               	movwf	___awmod@divisor+1
  1141  039A  118A  2488  118A   	fcall	___awmod
  1142  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1143  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1144  039F  082E               	movf	?___awmod+1,w
  1145  03A0  00B5               	movwf	___wmul@multiplier+1
  1146  03A1  082D               	movf	?___awmod,w
  1147  03A2  00B4               	movwf	___wmul@multiplier
  1148  03A3  301E               	movlw	30
  1149  03A4  00B6               	movwf	___wmul@multiplicand
  1150  03A5  3000               	movlw	0
  1151  03A6  00B7               	movwf	___wmul@multiplicand+1
  1152  03A7  118A  26CE  118A   	fcall	___wmul
  1153  03AA  3012               	movlw	low (_chores| (0+32768))
  1154  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1155  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1156  03AD  00BA               	movwf	??_main
  1157  03AE  3081               	movlw	high (_chores| (0+32768))
  1158  03AF  00BB               	movwf	??_main+1
  1159  03B0  0834               	movf	?___wmul,w
  1160  03B1  073A               	addwf	??_main,w
  1161  03B2  00BC               	movwf	??_main+2
  1162  03B3  0835               	movf	?___wmul+1,w
  1163  03B4  1803               	skipnc
  1164  03B5  0A35               	incf	?___wmul+1,w
  1165  03B6  073B               	addwf	??_main+1,w
  1166  03B7  00BD               	movwf	??_main+3
  1167  03B8  083C               	movf	??_main+2,w
  1168  03B9  00C0               	movwf	_text
  1169  03BA  083D               	movf	??_main+3,w
  1170  03BB  00C1               	movwf	_text+1
  1171  03BC                     l1610:	
  1172                           
  1173                           ;Main.c: 80:         lcd_clear_all();
  1174  03BC  118A  2796  118A   	fcall	_lcd_clear_all
  1175                           
  1176                           ;Main.c: 82:         lcd_print(text, space_pos, 0, 0);
  1177  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1178  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1179  03C1  0840               	movf	_text,w
  1180  03C2  00AE               	movwf	lcd_print@text
  1181  03C3  0841               	movf	_text+1,w
  1182  03C4  00AF               	movwf	lcd_print@text+1
  1183  03C5  0842               	movf	_space_pos,w
  1184  03C6  00BA               	movwf	??_main
  1185  03C7  083A               	movf	??_main,w
  1186  03C8  00B0               	movwf	lcd_print@size
  1187  03C9  01B1               	clrf	lcd_print@line
  1188  03CA  01B2               	clrf	lcd_print@pos
  1189  03CB  118A  2520  118A   	fcall	_lcd_print
  1190                           
  1191                           ;Main.c: 83:         lcd_print(&users[user][0], 6, 1, 0);
  1192  03CE  3007               	movlw	7
  1193  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1194  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1195  03D1  00BA               	movwf	??_main
  1196  03D2  083A               	movf	??_main,w
  1197  03D3  00AA               	movwf	___bmul@multiplicand
  1198  03D4  084A               	movf	_user,w
  1199  03D5  118A  2775  118A   	fcall	___bmul
  1200  03D8  3E5C               	addlw	low (_users| (0+32768))
  1201  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1202  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1203  03DB  00BB               	movwf	??_main+1
  1204  03DC  3082               	movlw	high (_users| (0+32768))
  1205  03DD  1803               	skipnc
  1206  03DE  3E01               	addlw	1
  1207  03DF  00BC               	movwf	??_main+2
  1208  03E0  083B               	movf	??_main+1,w
  1209  03E1  00AE               	movwf	lcd_print@text
  1210  03E2  083C               	movf	??_main+2,w
  1211  03E3  00AF               	movwf	lcd_print@text+1
  1212  03E4  3006               	movlw	6
  1213  03E5  00BD               	movwf	??_main+3
  1214  03E6  083D               	movf	??_main+3,w
  1215  03E7  00B0               	movwf	lcd_print@size
  1216  03E8  01B1               	clrf	lcd_print@line
  1217  03E9  0AB1               	incf	lcd_print@line,f
  1218  03EA  01B2               	clrf	lcd_print@pos
  1219  03EB  118A  2520  118A   	fcall	_lcd_print
  1220                           
  1221                           ;Main.c: 84:         if (strlen(text) > 16)
  1222  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1223  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1224  03F0  0840               	movf	_text,w
  1225  03F1  00AA               	movwf	strlen@string
  1226  03F2  0841               	movf	_text+1,w
  1227  03F3  00AB               	movwf	strlen@string+1
  1228  03F4  118A  2735  118A   	fcall	_strlen
  1229  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1230  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1231  03F9  00BA               	movwf	??_main
  1232  03FA  3011               	movlw	17
  1233  03FB  023A               	subwf	??_main,w
  1234  03FC  1C03               	skipc
  1235  03FD  2C27               	goto	l1624
  1236                           
  1237                           ;Main.c: 85:         {;Main.c: 86:             _delay((unsigned long)((500)*(31000/4000.
      +                          0)));
  1238  03FE  3006               	movlw	6
  1239  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0401  00BB               	movwf	??_main+1
  1242  0402  3006               	movlw	6
  1243  0403  00BA               	movwf	??_main
  1244  0404                     u1217:	
  1245  0404  0BBA               	decfsz	??_main,f
  1246  0405  2C04               	goto	u1217
  1247  0406  0BBB               	decfsz	??_main+1,f
  1248  0407  2C04               	goto	u1217
  1249                           
  1250                           ;Main.c: 87:             lcd_clear_line(0);
  1251  0408  3000               	movlw	0
  1252  0409  118A  25C1  118A   	fcall	_lcd_clear_line
  1253                           
  1254                           ;Main.c: 88:             lcd_print(text+space_pos+1, 16, 0, 0);
  1255  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  040E  0842               	movf	_space_pos,w
  1258  040F  0740               	addwf	_text,w
  1259  0410  00BA               	movwf	??_main
  1260  0411  0843               	movf	_space_pos+1,w
  1261  0412  1803               	skipnc
  1262  0413  0A43               	incf	_space_pos+1,w
  1263  0414  0741               	addwf	_text+1,w
  1264  0415  00BB               	movwf	??_main+1
  1265  0416  083A               	movf	??_main,w
  1266  0417  3E01               	addlw	1
  1267  0418  00AE               	movwf	lcd_print@text
  1268  0419  083B               	movf	??_main+1,w
  1269  041A  1803               	skipnc
  1270  041B  3E01               	addlw	1
  1271  041C  3E00               	addlw	0
  1272  041D  00AF               	movwf	lcd_print@text+1
  1273  041E  3010               	movlw	16
  1274  041F  00BC               	movwf	??_main+2
  1275  0420  083C               	movf	??_main+2,w
  1276  0421  00B0               	movwf	lcd_print@size
  1277  0422  01B1               	clrf	lcd_print@line
  1278  0423  01B2               	clrf	lcd_print@pos
  1279  0424  118A  2520  118A   	fcall	_lcd_print
  1280  0427                     l1624:	
  1281                           
  1282                           ;Main.c: 90:         _delay((unsigned long)((1000)*(31000/4000.0)));
  1283  0427  300B               	movlw	11
  1284  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1286  042A  00BB               	movwf	??_main+1
  1287  042B  300E               	movlw	14
  1288  042C  00BA               	movwf	??_main
  1289  042D                     u1227:	
  1290  042D  0BBA               	decfsz	??_main,f
  1291  042E  2C2D               	goto	u1227
  1292  042F  0BBB               	decfsz	??_main+1,f
  1293  0430  2C2D               	goto	u1227
  1294  0431  0000               	nop
  1295  0432  2BBC               	goto	l1610
  1296  0433                     __end_of_main:	
  1297                           
  1298                           	psect	text1
  1299  0735                     __ptext1:	
  1300 ;; *************** function _strlen *****************
  1301 ;; Defined at:
  1302 ;;		line 189 in file "Main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  string          2   10[BANK0 ] PTR unsigned char 
  1305 ;;		 -> NULL(0), chores(330), 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  i               2   13[BANK0 ] int 
  1308 ;;  result          1   15[BANK0 ] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      unsigned char 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       2       0       0       0
  1319 ;;      Locals:         0       3       0       0       0
  1320 ;;      Temps:          0       1       0       0       0
  1321 ;;      Totals:         0       6       0       0       0
  1322 ;;Total ram usage:        6 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    4
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _strlen
  1334  0735                     _strlen:	
  1335                           
  1336                           ;Main.c: 189: unsigned char strlen( unsigned char string[]);Main.c: 190: {;Main.c: 191: 
      +                              int i = 0;
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1340  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0737  01AD               	clrf	strlen@i
  1343  0738  01AE               	clrf	strlen@i+1
  1344                           
  1345                           ;Main.c: 192:     unsigned char result = 0;
  1346  0739  01AF               	clrf	strlen@result
  1347  073A                     l1374:	
  1348                           ;Main.c: 193:     while (string[i] != 0)
  1349                           
  1350                           
  1351                           ;Main.c: 193:     while (string[i] != 0)
  1352  073A  082D               	movf	strlen@i,w
  1353  073B  072A               	addwf	strlen@string,w
  1354  073C  0084               	movwf	4
  1355  073D  082E               	movf	strlen@i+1,w
  1356  073E  1803               	skipnc
  1357  073F  0A2E               	incf	strlen@i+1,w
  1358  0740  072B               	addwf	strlen@string+1,w
  1359  0741  00FF               	movwf	127
  1360  0742  118A  2100  118A   	fcall	stringtab
  1361  0745  3A00               	xorlw	0
  1362  0746  1903               	btfsc	3,2
  1363  0747  2F53               	goto	l1376
  1364                           
  1365                           ;Main.c: 194:     {;Main.c: 195:         i++;
  1366  0748  3001               	movlw	1
  1367  0749  07AD               	addwf	strlen@i,f
  1368  074A  1803               	skipnc
  1369  074B  0AAE               	incf	strlen@i+1,f
  1370  074C  3000               	movlw	0
  1371  074D  07AE               	addwf	strlen@i+1,f
  1372                           
  1373                           ;Main.c: 196:         result++;
  1374  074E  3001               	movlw	1
  1375  074F  00AC               	movwf	??_strlen
  1376  0750  082C               	movf	??_strlen,w
  1377  0751  07AF               	addwf	strlen@result,f
  1378  0752  2F3A               	goto	l1374
  1379  0753                     l1376:	
  1380                           
  1381                           ;Main.c: 198:     return result;
  1382  0753  082F               	movf	strlen@result,w
  1383  0754  0008               	return
  1384  0755                     __end_of_strlen:	
  1385                           
  1386                           	psect	text2
  1387  064F                     __ptext2:	
  1388 ;; *************** function _random *****************
  1389 ;; Defined at:
  1390 ;;		line 161 in file "Main.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  original        1   12[BANK0 ] unsigned char 
  1395 ;;  rbit            1   11[BANK0 ] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         0       2       0       0       0
  1407 ;;      Temps:          0       1       0       0       0
  1408 ;;      Totals:         0       3       0       0       0
  1409 ;;Total ram usage:        3 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    4
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _random
  1421  064F                     _random:	
  1422                           
  1423                           ;Main.c: 163:     static char rand;;Main.c: 164:     static char count = 0;;Main.c: 165:
      +                               char original = rand;
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _random: [wreg+status,2+status,0]
  1427  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0651  0847               	movf	random@rand,w
  1430  0652  00AA               	movwf	??_random
  1431  0653  082A               	movf	??_random,w
  1432  0654  00AC               	movwf	random@original
  1433                           
  1434                           ;Main.c: 166:     char rbit = 0;
  1435  0655  01AB               	clrf	random@rbit
  1436                           
  1437                           ;Main.c: 168:     if (count == 0){
  1438  0656  0846               	movf	random@count,w
  1439  0657  1D03               	btfss	3,2
  1440  0658  2E65               	goto	l1350
  1441  0659                     l152:	
  1442                           ;Main.c: 170:         }
  1443                           
  1444                           
  1445                           ;Main.c: 169:         while (RA7 == 0){
  1446  0659  1F85               	btfss	5,7	;volatile
  1447  065A  2E59               	goto	l152
  1448                           
  1449                           ;Main.c: 171:         count = 1;
  1450  065B  01C6               	clrf	random@count
  1451  065C  0AC6               	incf	random@count,f
  1452                           
  1453                           ;Main.c: 172:         rand = TMR0;
  1454  065D  0801               	movf	1,w	;volatile
  1455  065E  00AA               	movwf	??_random
  1456  065F  082A               	movf	??_random,w
  1457  0660  00C7               	movwf	random@rand
  1458                           
  1459                           ;Main.c: 173:         TMR0 = 0;
  1460  0661  0181               	clrf	1	;volatile
  1461                           
  1462                           ;Main.c: 174:         TMR0IE = 1;
  1463  0662  168B               	bsf	11,5	;volatile
  1464  0663                     l1346:	
  1465                           
  1466                           ;Main.c: 175:         return rand;
  1467  0663  0847               	movf	random@rand,w
  1468  0664  0008               	return
  1469  0665                     l1350:	
  1470                           
  1471                           ;Main.c: 178:     original &= 180;
  1472  0665  30B4               	movlw	180
  1473  0666                     L1:	
  1474  0666  00AA               	movwf	??_random
  1475  0667  082A               	movf	??_random,w
  1476  0668  05AC               	andwf	random@original,f
  1477                           
  1478                           ;Main.c: 179:     while(original){
  1479  0669  082C               	movf	random@original,w
  1480  066A  1903               	btfsc	3,2
  1481  066B  2E75               	goto	l1360
  1482                           
  1483                           ;Main.c: 180:         rbit ^= (original & 1);
  1484                           
  1485                           ;Main.c: 179:     while(original){
  1486  066C  082C               	movf	random@original,w
  1487  066D  3901               	andlw	1
  1488  066E  00AA               	movwf	??_random
  1489  066F  082A               	movf	??_random,w
  1490  0670  06AB               	xorwf	random@rbit,f
  1491                           
  1492                           ;Main.c: 181:         original >>= 1;
  1493  0671  1003               	clrc
  1494  0672  0CAC               	rrf	random@original,f
  1495                           
  1496                           ;Main.c: 182:         original &= (~(1<<7));
  1497  0673  307F               	movlw	127
  1498  0674  2E66               	goto	L1
  1499  0675                     l1360:	
  1500                           
  1501                           ;Main.c: 184:     rand <<= 1;
  1502  0675  1003               	clrc
  1503  0676  0DC7               	rlf	random@rand,f
  1504                           
  1505                           ;Main.c: 185:     rand |= rbit;
  1506  0677  082B               	movf	random@rbit,w
  1507  0678  00AA               	movwf	??_random
  1508  0679  082A               	movf	??_random,w
  1509  067A  04C7               	iorwf	random@rand,f
  1510  067B  2E63               	goto	l1346
  1511  067C                     __end_of_random:	
  1512                           
  1513                           	psect	text3
  1514  0520                     __ptext3:	
  1515 ;; *************** function _lcd_print *****************
  1516 ;; Defined at:
  1517 ;;		line 13 in file "LCD.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  text            2   14[BANK0 ] PTR unsigned char 
  1520 ;;		 -> NULL(0), STR_1(12), RAM(512), users(14), 
  1521 ;;		 -> chores(330), 
  1522 ;;  size            1   16[BANK0 ] unsigned char 
  1523 ;;  line            1   17[BANK0 ] unsigned char 
  1524 ;;  pos             1   18[BANK0 ] unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  pointer         2   20[BANK0 ] PTR unsigned char 
  1527 ;;		 -> NULL(0), STR_1(12), RAM(512), users(14), 
  1528 ;;		 -> chores(330), 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       5       0       0       0
  1539 ;;      Locals:         0       2       0       0       0
  1540 ;;      Temps:          0       1       0       0       0
  1541 ;;      Totals:         0       8       0       0       0
  1542 ;;Total ram usage:        8 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    6
  1545 ;; This function calls:
  1546 ;;		_lcd_cmd
  1547 ;;		_lcd_data
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _lcd_print
  1555  0520                     _lcd_print:	
  1556                           
  1557                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1561  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0522  082E               	movf	lcd_print@text,w
  1564  0523  00B4               	movwf	lcd_print@pointer
  1565  0524  082F               	movf	lcd_print@text+1,w
  1566  0525  00B5               	movwf	lcd_print@pointer+1
  1567                           
  1568                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  1569  0526  0831               	movf	lcd_print@line,w
  1570  0527  00B3               	movwf	??_lcd_print
  1571  0528  3005               	movlw	5
  1572  0529                     u655:	
  1573  0529  1003               	clrc
  1574  052A  0DB3               	rlf	??_lcd_print,f
  1575  052B  3EFF               	addlw	-1
  1576  052C  1D03               	skipz
  1577  052D  2D29               	goto	u655
  1578  052E  1003               	clrc
  1579  052F  0D33               	rlf	??_lcd_print,w
  1580  0530  0432               	iorwf	lcd_print@pos,w
  1581  0531  3880               	iorlw	128
  1582  0532  118A  258E  118A   	fcall	_lcd_cmd
  1583  0535                     l1286:	
  1584                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1585                           
  1586                           
  1587                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1588  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0537  0835               	movf	lcd_print@pointer+1,w
  1591  0538  00FF               	movwf	127
  1592  0539  0834               	movf	lcd_print@pointer,w
  1593  053A  0084               	movwf	4
  1594  053B  118A  2100  118A   	fcall	stringtab
  1595  053E  3A00               	xorlw	0
  1596  053F  1903               	skipnz
  1597  0540  0008               	return
  1598  0541  0830               	movf	lcd_print@size,w
  1599  0542  1903               	btfsc	3,2
  1600  0543  0008               	return
  1601                           
  1602                           ;LCD.c: 21:         lcd_data(*pointer);
  1603  0544  0835               	movf	lcd_print@pointer+1,w
  1604  0545  00FF               	movwf	127
  1605  0546  0834               	movf	lcd_print@pointer,w
  1606  0547  0084               	movwf	4
  1607  0548  118A  2100  118A   	fcall	stringtab
  1608  054B  118A  26F1  118A   	fcall	_lcd_data
  1609                           
  1610                           ;LCD.c: 22:         pointer++;
  1611  054E  3001               	movlw	1
  1612  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0551  07B4               	addwf	lcd_print@pointer,f
  1615  0552  1803               	skipnc
  1616  0553  0AB5               	incf	lcd_print@pointer+1,f
  1617  0554  3000               	movlw	0
  1618  0555  07B5               	addwf	lcd_print@pointer+1,f
  1619                           
  1620                           ;LCD.c: 23:         size--;
  1621  0556  3001               	movlw	1
  1622  0557  02B0               	subwf	lcd_print@size,f
  1623  0558  2D35               	goto	l1286
  1624  0559                     __end_of_lcd_print:	
  1625                           
  1626                           	psect	text4
  1627  0433                     __ptext4:	
  1628 ;; *************** function _lcd_init *****************
  1629 ;; Defined at:
  1630 ;;		line 44 in file "LCD.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0
  1646 ;;      Temps:          0       1       0       0       0
  1647 ;;      Totals:         0       1       0       0       0
  1648 ;;Total ram usage:        1 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    6
  1651 ;; This function calls:
  1652 ;;		_lcd_cmd
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _lcd_init
  1660  0433                     _lcd_init:	
  1661                           
  1662                           ;LCD.c: 48:     _delay((unsigned long)((15)*(31000/4000.0)));
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1666  0433  3025               	movlw	37
  1667  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0436  00AE               	movwf	??_lcd_init
  1670  0437                     u1237:	
  1671  0437  0BAE               	decfsz	??_lcd_init,f
  1672  0438  2C37               	goto	u1237
  1673  0439  2C3A               	nop2
  1674                           
  1675                           ;LCD.c: 50:     lcd_cmd(0x02);
  1676  043A  3002               	movlw	2
  1677  043B  118A  258E  118A   	fcall	_lcd_cmd
  1678                           
  1679                           ;LCD.c: 51:     _delay((unsigned long)((5)*(31000/4000.0)));
  1680  043E  300B               	movlw	11
  1681  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0441  00AE               	movwf	??_lcd_init
  1684  0442                     u1247:	
  1685  0442  0BAE               	decfsz	??_lcd_init,f
  1686  0443  2C42               	goto	u1247
  1687  0444  2C45               	nop2
  1688                           
  1689                           ;LCD.c: 55:     lcd_cmd(0x28);
  1690  0445  3028               	movlw	40
  1691  0446  118A  258E  118A   	fcall	_lcd_cmd
  1692                           
  1693                           ;LCD.c: 56:     _delay((unsigned long)((5)*(31000/4000.0)));
  1694  0449  300B               	movlw	11
  1695  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1696  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1697  044C  00AE               	movwf	??_lcd_init
  1698  044D                     u1257:	
  1699  044D  0BAE               	decfsz	??_lcd_init,f
  1700  044E  2C4D               	goto	u1257
  1701  044F  2C50               	nop2
  1702                           
  1703                           ;LCD.c: 58:     lcd_cmd(0x10);
  1704  0450  3010               	movlw	16
  1705  0451  118A  258E  118A   	fcall	_lcd_cmd
  1706                           
  1707                           ;LCD.c: 59:     _delay((unsigned long)((5)*(31000/4000.0)));
  1708  0454  300B               	movlw	11
  1709  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0457  00AE               	movwf	??_lcd_init
  1712  0458                     u1267:	
  1713  0458  0BAE               	decfsz	??_lcd_init,f
  1714  0459  2C58               	goto	u1267
  1715  045A  2C5B               	nop2
  1716                           
  1717                           ;LCD.c: 61:     lcd_cmd(0x0c);
  1718  045B  300C               	movlw	12
  1719  045C  118A  258E  118A   	fcall	_lcd_cmd
  1720                           
  1721                           ;LCD.c: 62:     _delay((unsigned long)((5)*(31000/4000.0)));
  1722  045F  300B               	movlw	11
  1723  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0462  00AE               	movwf	??_lcd_init
  1726  0463                     u1277:	
  1727  0463  0BAE               	decfsz	??_lcd_init,f
  1728  0464  2C63               	goto	u1277
  1729  0465  2C66               	nop2
  1730                           
  1731                           ;LCD.c: 64:     lcd_cmd(0x06);
  1732  0466  3006               	movlw	6
  1733  0467  118A  258E  118A   	fcall	_lcd_cmd
  1734                           
  1735                           ;LCD.c: 65:     _delay((unsigned long)((5)*(31000/4000.0)));
  1736  046A  300B               	movlw	11
  1737  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1738  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1739  046D  00AE               	movwf	??_lcd_init
  1740  046E                     u1287:	
  1741  046E  0BAE               	decfsz	??_lcd_init,f
  1742  046F  2C6E               	goto	u1287
  1743  0470  2C71               	nop2
  1744                           
  1745                           ;LCD.c: 67:     lcd_cmd(0x01);
  1746  0471  3001               	movlw	1
  1747  0472  118A  258E  118A   	fcall	_lcd_cmd
  1748                           
  1749                           ;LCD.c: 68:     _delay((unsigned long)((5)*(31000/4000.0)));
  1750  0475  300B               	movlw	11
  1751  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0478  00AE               	movwf	??_lcd_init
  1754  0479                     u1297:	
  1755  0479  0BAE               	decfsz	??_lcd_init,f
  1756  047A  2C79               	goto	u1297
  1757  047B  2C7C               	nop2
  1758                           
  1759                           ;LCD.c: 70:     lcd_cmd(0x80);
  1760  047C  3080               	movlw	128
  1761  047D  118A  258E  118A   	fcall	_lcd_cmd
  1762                           
  1763                           ;LCD.c: 71:     _delay((unsigned long)((5)*(31000/4000.0)));
  1764  0480  300B               	movlw	11
  1765  0481  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0482  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0483  00AE               	movwf	??_lcd_init
  1768  0484                     u1307:	
  1769  0484  0BAE               	decfsz	??_lcd_init,f
  1770  0485  2C84               	goto	u1307
  1771  0486  2C87               	nop2
  1772  0487  0008               	return
  1773  0488                     __end_of_lcd_init:	
  1774                           
  1775                           	psect	text5
  1776  05C1                     __ptext5:	
  1777 ;; *************** function _lcd_clear_line *****************
  1778 ;; Defined at:
  1779 ;;		line 33 in file "LCD.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  line            1    wreg     unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  line            1   15[BANK0 ] unsigned char 
  1784 ;;  i               2   16[BANK0 ] int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         0       0       0       0       0
  1795 ;;      Locals:         0       3       0       0       0
  1796 ;;      Temps:          0       1       0       0       0
  1797 ;;      Totals:         0       4       0       0       0
  1798 ;;Total ram usage:        4 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    6
  1801 ;; This function calls:
  1802 ;;		_lcd_cmd
  1803 ;;		_lcd_data
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _lcd_clear_line
  1811  05C1                     _lcd_clear_line:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1815                           ;lcd_clear_line@line stored from wreg
  1816  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1817  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1818  05C3  00AF               	movwf	lcd_clear_line@line
  1819                           
  1820                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  1821  05C4  082F               	movf	lcd_clear_line@line,w
  1822  05C5  00AE               	movwf	??_lcd_clear_line
  1823  05C6  3005               	movlw	5
  1824  05C7                     u685:	
  1825  05C7  1003               	clrc
  1826  05C8  0DAE               	rlf	??_lcd_clear_line,f
  1827  05C9  3EFF               	addlw	-1
  1828  05CA  1D03               	skipz
  1829  05CB  2DC7               	goto	u685
  1830  05CC  1003               	clrc
  1831  05CD  0D2E               	rlf	??_lcd_clear_line,w
  1832  05CE  3880               	iorlw	128
  1833  05CF  118A  258E  118A   	fcall	_lcd_cmd
  1834                           
  1835                           ;LCD.c: 37:     for (i=0; i<40; i++)
  1836  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1837  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1838  05D4  01B0               	clrf	lcd_clear_line@i
  1839  05D5  01B1               	clrf	lcd_clear_line@i+1
  1840  05D6                     l1302:	
  1841                           
  1842                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  1843  05D6  3020               	movlw	32
  1844  05D7  118A  26F1  118A   	fcall	_lcd_data
  1845                           
  1846                           ;LCD.c: 40:     }
  1847  05DA  3001               	movlw	1
  1848  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1849  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1850  05DD  07B0               	addwf	lcd_clear_line@i,f
  1851  05DE  1803               	skipnc
  1852  05DF  0AB1               	incf	lcd_clear_line@i+1,f
  1853  05E0  3000               	movlw	0
  1854  05E1  07B1               	addwf	lcd_clear_line@i+1,f
  1855  05E2  0831               	movf	lcd_clear_line@i+1,w
  1856  05E3  3A80               	xorlw	128
  1857  05E4  00FF               	movwf	127
  1858  05E5  3080               	movlw	128
  1859  05E6  027F               	subwf	127,w
  1860  05E7  1D03               	skipz
  1861  05E8  2DEB               	goto	u695
  1862  05E9  3028               	movlw	40
  1863  05EA  0230               	subwf	lcd_clear_line@i,w
  1864  05EB                     u695:	
  1865  05EB  1C03               	skipc
  1866  05EC  2DD6               	goto	l1302
  1867                           
  1868                           ;LCD.c: 41:     lcd_cmd(0x80);
  1869  05ED  3080               	movlw	128
  1870  05EE  118A  258E         	fcall	_lcd_cmd
  1871  05F0  0008               	return
  1872  05F1                     __end_of_lcd_clear_line:	
  1873                           
  1874                           	psect	text6
  1875  06F1                     __ptext6:	
  1876 ;; *************** function _lcd_data *****************
  1877 ;; Defined at:
  1878 ;;		line 90 in file "LCD.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  d               1    wreg     unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  d               1   13[BANK0 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       1       0       0       0
  1894 ;;      Temps:          0       2       0       0       0
  1895 ;;      Totals:         0       3       0       0       0
  1896 ;;Total ram usage:        3 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    5
  1899 ;; This function calls:
  1900 ;;		_enable
  1901 ;; This function is called by:
  1902 ;;		_lcd_print
  1903 ;;		_lcd_clear_line
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _lcd_data
  1909  06F1                     _lcd_data:	
  1910                           
  1911                           ;incstack = 0
  1912                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1913                           ;lcd_data@d stored from wreg
  1914  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1915  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1916  06F3  00AD               	movwf	lcd_data@d
  1917                           
  1918                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  1919  06F4  1486               	bsf	6,1	;volatile
  1920                           
  1921                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  1922  06F5  082D               	movf	lcd_data@d,w
  1923  06F6  00AB               	movwf	??_lcd_data
  1924  06F7  3004               	movlw	4
  1925  06F8                     u625:	
  1926  06F8  1003               	clrc
  1927  06F9  0CAB               	rrf	??_lcd_data,f
  1928  06FA  3EFF               	addlw	-1
  1929  06FB  1D03               	skipz
  1930  06FC  2EF8               	goto	u625
  1931  06FD  300F               	movlw	15
  1932  06FE  052B               	andwf	??_lcd_data,w
  1933  06FF  00AC               	movwf	??_lcd_data+1
  1934  0700  0805               	movf	5,w	;volatile
  1935  0701  39F0               	andlw	240
  1936  0702  042C               	iorwf	??_lcd_data+1,w
  1937  0703  0085               	movwf	5	;volatile
  1938                           
  1939                           ;LCD.c: 99:     enable();
  1940  0704  118A  2788  118A   	fcall	_enable
  1941                           
  1942                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  1943  0707  300F               	movlw	15
  1944  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1946  070A  052D               	andwf	lcd_data@d,w
  1947  070B  00AB               	movwf	??_lcd_data
  1948  070C  0805               	movf	5,w	;volatile
  1949  070D  39F0               	andlw	240
  1950  070E  042B               	iorwf	??_lcd_data,w
  1951  070F  0085               	movwf	5	;volatile
  1952                           
  1953                           ;LCD.c: 102:     enable();
  1954  0710  118A  2788         	fcall	_enable
  1955  0712  0008               	return
  1956  0713                     __end_of_lcd_data:	
  1957                           
  1958                           	psect	text7
  1959  0796                     __ptext7:	
  1960 ;; *************** function _lcd_clear_all *****************
  1961 ;; Defined at:
  1962 ;;		line 27 in file "LCD.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          0       1       0       0       0
  1979 ;;      Totals:         0       1       0       0       0
  1980 ;;Total ram usage:        1 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    6
  1983 ;; This function calls:
  1984 ;;		_lcd_cmd
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _lcd_clear_all
  1992  0796                     _lcd_clear_all:	
  1993                           
  1994                           ;LCD.c: 29:     lcd_cmd(0x01);
  1995                           
  1996                           ;incstack = 0
  1997                           ; Regs used in _lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  1998  0796  3001               	movlw	1
  1999  0797  118A  258E  118A   	fcall	_lcd_cmd
  2000                           
  2001                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2002  079A  300B               	movlw	11
  2003  079B  1283               	bcf	3,5	;RP0=0, select bank0
  2004  079C  1303               	bcf	3,6	;RP1=0, select bank0
  2005  079D  00AE               	movwf	??_lcd_clear_all
  2006  079E                     u1317:	
  2007  079E  0BAE               	decfsz	??_lcd_clear_all,f
  2008  079F  2F9E               	goto	u1317
  2009  07A0  2FA1               	nop2
  2010  07A1  0008               	return
  2011  07A2                     __end_of_lcd_clear_all:	
  2012                           
  2013                           	psect	text8
  2014  058E                     __ptext8:	
  2015 ;; *************** function _lcd_cmd *****************
  2016 ;; Defined at:
  2017 ;;		line 74 in file "LCD.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  c               1    wreg     unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  c               1   13[BANK0 ] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       0       0       0       0
  2032 ;;      Locals:         0       1       0       0       0
  2033 ;;      Temps:          0       2       0       0       0
  2034 ;;      Totals:         0       3       0       0       0
  2035 ;;Total ram usage:        3 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    5
  2038 ;; This function calls:
  2039 ;;		_enable
  2040 ;; This function is called by:
  2041 ;;		_lcd_print
  2042 ;;		_lcd_clear_all
  2043 ;;		_lcd_clear_line
  2044 ;;		_lcd_init
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _lcd_cmd
  2050  058E                     _lcd_cmd:	
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2054                           ;lcd_cmd@c stored from wreg
  2055  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2056  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0590  00AD               	movwf	lcd_cmd@c
  2058                           
  2059                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2060  0591  1086               	bcf	6,1	;volatile
  2061                           
  2062                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2063  0592  300B               	movlw	11
  2064  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0595  00AB               	movwf	??_lcd_cmd
  2067  0596                     u1327:	
  2068  0596  0BAB               	decfsz	??_lcd_cmd,f
  2069  0597  2D96               	goto	u1327
  2070  0598  2D99               	nop2
  2071                           
  2072                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2073  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2074  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2075  059B  082D               	movf	lcd_cmd@c,w
  2076  059C  00AB               	movwf	??_lcd_cmd
  2077  059D  3004               	movlw	4
  2078  059E                     u615:	
  2079  059E  1003               	clrc
  2080  059F  0CAB               	rrf	??_lcd_cmd,f
  2081  05A0  3EFF               	addlw	-1
  2082  05A1  1D03               	skipz
  2083  05A2  2D9E               	goto	u615
  2084  05A3  300F               	movlw	15
  2085  05A4  052B               	andwf	??_lcd_cmd,w
  2086  05A5  00AC               	movwf	??_lcd_cmd+1
  2087  05A6  0805               	movf	5,w	;volatile
  2088  05A7  39F0               	andlw	240
  2089  05A8  042C               	iorwf	??_lcd_cmd+1,w
  2090  05A9  0085               	movwf	5	;volatile
  2091                           
  2092                           ;LCD.c: 83:     enable();
  2093  05AA  118A  2788  118A   	fcall	_enable
  2094                           
  2095                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2096  05AD  300F               	movlw	15
  2097  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2098  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2099  05B0  052D               	andwf	lcd_cmd@c,w
  2100  05B1  00AB               	movwf	??_lcd_cmd
  2101  05B2  0805               	movf	5,w	;volatile
  2102  05B3  39F0               	andlw	240
  2103  05B4  042B               	iorwf	??_lcd_cmd,w
  2104  05B5  0085               	movwf	5	;volatile
  2105                           
  2106                           ;LCD.c: 86:     enable();
  2107  05B6  118A  2788  118A   	fcall	_enable
  2108                           
  2109                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2110  05B9  300B               	movlw	11
  2111  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2112  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2113  05BC  00AB               	movwf	??_lcd_cmd
  2114  05BD                     u1337:	
  2115  05BD  0BAB               	decfsz	??_lcd_cmd,f
  2116  05BE  2DBD               	goto	u1337
  2117  05BF  2DC0               	nop2
  2118  05C0  0008               	return
  2119  05C1                     __end_of_lcd_cmd:	
  2120                           
  2121                           	psect	text9
  2122  0788                     __ptext9:	
  2123 ;; *************** function _enable *****************
  2124 ;; Defined at:
  2125 ;;		line 106 in file "LCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          0       1       0       0       0
  2142 ;;      Totals:         0       1       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    4
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_lcd_cmd
  2150 ;;		_lcd_data
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _enable
  2156  0788                     _enable:	
  2157                           
  2158                           ;LCD.c: 108:     RB2 = 1;
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _enable: [wreg]
  2162  0788  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0789  1303               	bcf	3,6	;RP1=0, select bank0
  2164  078A  1506               	bsf	6,2	;volatile
  2165                           
  2166                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2167  078B  300B               	movlw	11
  2168  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2169  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2170  078E  00AA               	movwf	??_enable
  2171  078F                     u1347:	
  2172  078F  0BAA               	decfsz	??_enable,f
  2173  0790  2F8F               	goto	u1347
  2174  0791  2F92               	nop2
  2175                           
  2176                           ;LCD.c: 112:     RB2 = 0;
  2177  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0794  1106               	bcf	6,2	;volatile
  2180  0795  0008               	return
  2181  0796                     __end_of_enable:	
  2182                           
  2183                           	psect	text10
  2184  06CE                     __ptext10:	
  2185 ;; *************** function ___wmul *****************
  2186 ;; Defined at:
  2187 ;;		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  multiplier      2   20[BANK0 ] unsigned int 
  2190 ;;  multiplicand    2   22[BANK0 ] unsigned int 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  product         2   24[BANK0 ] unsigned int 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2   20[BANK0 ] unsigned int 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       4       0       0       0
  2203 ;;      Locals:         0       2       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         0       6       0       0       0
  2206 ;;Total ram usage:        6 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function ___wmul
  2218  06CE                     ___wmul:	
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2222  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2223  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2224  06D0  01B8               	clrf	___wmul@product
  2225  06D1  01B9               	clrf	___wmul@product+1
  2226  06D2                     l1382:	
  2227  06D2  1C34               	btfss	___wmul@multiplier,0
  2228  06D3  2EDA               	goto	l250
  2229  06D4  0836               	movf	___wmul@multiplicand,w
  2230  06D5  07B8               	addwf	___wmul@product,f
  2231  06D6  1803               	skipnc
  2232  06D7  0AB9               	incf	___wmul@product+1,f
  2233  06D8  0837               	movf	___wmul@multiplicand+1,w
  2234  06D9  07B9               	addwf	___wmul@product+1,f
  2235  06DA                     l250:	
  2236  06DA  3001               	movlw	1
  2237  06DB                     u755:	
  2238  06DB  1003               	clrc
  2239  06DC  0DB6               	rlf	___wmul@multiplicand,f
  2240  06DD  0DB7               	rlf	___wmul@multiplicand+1,f
  2241  06DE  3EFF               	addlw	-1
  2242  06DF  1D03               	skipz
  2243  06E0  2EDB               	goto	u755
  2244  06E1  3001               	movlw	1
  2245  06E2                     u765:	
  2246  06E2  1003               	clrc
  2247  06E3  0CB5               	rrf	___wmul@multiplier+1,f
  2248  06E4  0CB4               	rrf	___wmul@multiplier,f
  2249  06E5  3EFF               	addlw	-1
  2250  06E6  1D03               	skipz
  2251  06E7  2EE2               	goto	u765
  2252  06E8  0834               	movf	___wmul@multiplier,w
  2253  06E9  0435               	iorwf	___wmul@multiplier+1,w
  2254  06EA  1D03               	btfss	3,2
  2255  06EB  2ED2               	goto	l1382
  2256  06EC  0839               	movf	___wmul@product+1,w
  2257  06ED  00B5               	movwf	?___wmul+1
  2258  06EE  0838               	movf	___wmul@product,w
  2259  06EF  00B4               	movwf	?___wmul
  2260  06F0  0008               	return
  2261  06F1                     __end_of___wmul:	
  2262                           
  2263                           	psect	text11
  2264  0775                     __ptext11:	
  2265 ;; *************** function ___bmul *****************
  2266 ;; Defined at:
  2267 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  multiplier      1    wreg     unsigned char 
  2270 ;;  multiplicand    1   10[BANK0 ] unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  multiplier      1   13[BANK0 ] unsigned char 
  2273 ;;  product         1   12[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      unsigned char 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       1       0       0       0
  2284 ;;      Locals:         0       2       0       0       0
  2285 ;;      Temps:          0       1       0       0       0
  2286 ;;      Totals:         0       4       0       0       0
  2287 ;;Total ram usage:        4 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    4
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function ___bmul
  2299  0775                     ___bmul:	
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2303                           ;___bmul@multiplier stored from wreg
  2304  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0777  00AD               	movwf	___bmul@multiplier
  2307  0778  01AC               	clrf	___bmul@product
  2308  0779                     l1396:	
  2309  0779  1C2D               	btfss	___bmul@multiplier,0
  2310  077A  2F7F               	goto	l1400
  2311  077B  082A               	movf	___bmul@multiplicand,w
  2312  077C  00AB               	movwf	??___bmul
  2313  077D  082B               	movf	??___bmul,w
  2314  077E  07AC               	addwf	___bmul@product,f
  2315  077F                     l1400:	
  2316  077F  1003               	clrc
  2317  0780  0DAA               	rlf	___bmul@multiplicand,f
  2318  0781  1003               	clrc
  2319  0782  0CAD               	rrf	___bmul@multiplier,f
  2320  0783  082D               	movf	___bmul@multiplier,w
  2321  0784  1D03               	btfss	3,2
  2322  0785  2F79               	goto	l1396
  2323  0786  082C               	movf	___bmul@product,w
  2324  0787  0008               	return
  2325  0788                     __end_of___bmul:	
  2326                           
  2327                           	psect	text12
  2328  0488                     __ptext12:	
  2329 ;; *************** function ___awmod *****************
  2330 ;; Defined at:
  2331 ;;		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  divisor         2   13[BANK0 ] int 
  2334 ;;  dividend        2   15[BANK0 ] int 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  sign            1   19[BANK0 ] unsigned char 
  2337 ;;  counter         1   18[BANK0 ] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2   13[BANK0 ] int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       4       0       0       0
  2348 ;;      Locals:         0       2       0       0       0
  2349 ;;      Temps:          0       1       0       0       0
  2350 ;;      Totals:         0       7       0       0       0
  2351 ;;Total ram usage:        7 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    4
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;;		_itoa
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function ___awmod
  2364  0488                     ___awmod:	
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2368  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2370  048A  01B3               	clrf	___awmod@sign
  2371  048B  1FB0               	btfss	___awmod@dividend+1,7
  2372  048C  2C94               	goto	l1416
  2373  048D  09AF               	comf	___awmod@dividend,f
  2374  048E  09B0               	comf	___awmod@dividend+1,f
  2375  048F  0AAF               	incf	___awmod@dividend,f
  2376  0490  1903               	skipnz
  2377  0491  0AB0               	incf	___awmod@dividend+1,f
  2378  0492  01B3               	clrf	___awmod@sign
  2379  0493  0AB3               	incf	___awmod@sign,f
  2380  0494                     l1416:	
  2381  0494  1FAE               	btfss	___awmod@divisor+1,7
  2382  0495  2C9B               	goto	l1420
  2383  0496  09AD               	comf	___awmod@divisor,f
  2384  0497  09AE               	comf	___awmod@divisor+1,f
  2385  0498  0AAD               	incf	___awmod@divisor,f
  2386  0499  1903               	skipnz
  2387  049A  0AAE               	incf	___awmod@divisor+1,f
  2388  049B                     l1420:	
  2389  049B  082D               	movf	___awmod@divisor,w
  2390  049C  042E               	iorwf	___awmod@divisor+1,w
  2391  049D  1903               	btfsc	3,2
  2392  049E  2CC8               	goto	l1438
  2393  049F  01B2               	clrf	___awmod@counter
  2394  04A0  0AB2               	incf	___awmod@counter,f
  2395  04A1                     l1428:	
  2396  04A1  1BAE               	btfsc	___awmod@divisor+1,7
  2397  04A2  2CAF               	goto	l1430
  2398  04A3  3001               	movlw	1
  2399  04A4                     u835:	
  2400  04A4  1003               	clrc
  2401  04A5  0DAD               	rlf	___awmod@divisor,f
  2402  04A6  0DAE               	rlf	___awmod@divisor+1,f
  2403  04A7  3EFF               	addlw	-1
  2404  04A8  1D03               	skipz
  2405  04A9  2CA4               	goto	u835
  2406  04AA  3001               	movlw	1
  2407  04AB  00B1               	movwf	??___awmod
  2408  04AC  0831               	movf	??___awmod,w
  2409  04AD  07B2               	addwf	___awmod@counter,f
  2410  04AE  2CA1               	goto	l1428
  2411  04AF                     l1430:	
  2412  04AF  082E               	movf	___awmod@divisor+1,w
  2413  04B0  0230               	subwf	___awmod@dividend+1,w
  2414  04B1  1D03               	skipz
  2415  04B2  2CB5               	goto	u855
  2416  04B3  082D               	movf	___awmod@divisor,w
  2417  04B4  022F               	subwf	___awmod@dividend,w
  2418  04B5                     u855:	
  2419  04B5  1C03               	skipc
  2420  04B6  2CBD               	goto	l1434
  2421  04B7  082D               	movf	___awmod@divisor,w
  2422  04B8  02AF               	subwf	___awmod@dividend,f
  2423  04B9  082E               	movf	___awmod@divisor+1,w
  2424  04BA  1C03               	skipc
  2425  04BB  03B0               	decf	___awmod@dividend+1,f
  2426  04BC  02B0               	subwf	___awmod@dividend+1,f
  2427  04BD                     l1434:	
  2428  04BD  3001               	movlw	1
  2429  04BE                     u865:	
  2430  04BE  1003               	clrc
  2431  04BF  0CAE               	rrf	___awmod@divisor+1,f
  2432  04C0  0CAD               	rrf	___awmod@divisor,f
  2433  04C1  3EFF               	addlw	-1
  2434  04C2  1D03               	skipz
  2435  04C3  2CBE               	goto	u865
  2436  04C4  3001               	movlw	1
  2437  04C5  02B2               	subwf	___awmod@counter,f
  2438  04C6  1D03               	btfss	3,2
  2439  04C7  2CAF               	goto	l1430
  2440  04C8                     l1438:	
  2441  04C8  0833               	movf	___awmod@sign,w
  2442  04C9  1903               	btfsc	3,2
  2443  04CA  2CD0               	goto	l1442
  2444  04CB  09AF               	comf	___awmod@dividend,f
  2445  04CC  09B0               	comf	___awmod@dividend+1,f
  2446  04CD  0AAF               	incf	___awmod@dividend,f
  2447  04CE  1903               	skipnz
  2448  04CF  0AB0               	incf	___awmod@dividend+1,f
  2449  04D0                     l1442:	
  2450  04D0  0830               	movf	___awmod@dividend+1,w
  2451  04D1  00AE               	movwf	?___awmod+1
  2452  04D2  082F               	movf	___awmod@dividend,w
  2453  04D3  00AD               	movwf	?___awmod
  2454  04D4  0008               	return
  2455  04D5                     __end_of___awmod:	
  2456                           
  2457                           	psect	text13
  2458  0276                     __ptext13:	
  2459 ;; *************** function _testing *****************
  2460 ;; Defined at:
  2461 ;;		line 96 in file "Main.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       8       0       0       0
  2478 ;;      Totals:         0       8       0       0       0
  2479 ;;Total ram usage:        8 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		i1___awmod
  2484 ;;		i1___wmul
  2485 ;;		i1_lcd_clear_all
  2486 ;;		i1_lcd_clear_line
  2487 ;;		i1_lcd_cmd
  2488 ;;		i1_lcd_print
  2489 ;;		i1_random
  2490 ;;		i1_strlen
  2491 ;; This function is called by:
  2492 ;;		Interrupt level 1
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _testing
  2498  0276                     _testing:	
  2499                           
  2500                           ;Main.c: 98:     if (INT0IF == 1)
  2501  0276  1C8B               	btfss	11,1	;volatile
  2502  0277  2B2C               	goto	i1l126
  2503                           
  2504                           ;Main.c: 99:     {;Main.c: 100:         _delay((unsigned long)((5)*(31000/4000.0)));
  2505  0278  300B               	movlw	11
  2506  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2507  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2508  027B  00A2               	movwf	??_testing
  2509  027C                     u135_27:	
  2510  027C  0BA2               	decfsz	??_testing,f
  2511  027D  2A7C               	goto	u135_27
  2512  027E  2A7F               	nop2
  2513                           
  2514                           ;Main.c: 101:         if (lcd_off)
  2515  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0281  084B               	movf	_lcd_off,w
  2518  0282  1903               	btfsc	3,2
  2519  0283  2A8F               	goto	i1l1636
  2520                           
  2521                           ;Main.c: 102:         {;Main.c: 103:             lcd_cmd(0x0c);
  2522  0284  300C               	movlw	12
  2523  0285  118A  2620  118A   	fcall	i1_lcd_cmd
  2524                           
  2525                           ;Main.c: 104:             lcd_clear_all();
  2526  0288  118A  27AE  118A   	fcall	i1_lcd_clear_all
  2527                           
  2528                           ;Main.c: 105:             lcd_off = 0;
  2529  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2530  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2531  028D  01CB               	clrf	_lcd_off
  2532                           
  2533                           ;Main.c: 106:         }
  2534  028E  2B05               	goto	i1l1654
  2535  028F                     i1l1636:	
  2536                           
  2537                           ;Main.c: 108:         {;Main.c: 109:             space_pos = 16;
  2538  028F  3010               	movlw	16
  2539  0290  00C2               	movwf	_space_pos
  2540  0291  3000               	movlw	0
  2541  0292  00C3               	movwf	_space_pos+1
  2542                           
  2543                           ;Main.c: 110:             rand = (random()%10);
  2544  0293  300A               	movlw	10
  2545  0294  00F3               	movwf	i1___awmod@divisor
  2546  0295  3000               	movlw	0
  2547  0296  00F4               	movwf	i1___awmod@divisor+1
  2548  0297  118A  25F1  118A   	fcall	i1_random
  2549  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2550  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2551  029C  00A2               	movwf	??_testing
  2552  029D  01A3               	clrf	??_testing+1
  2553  029E  0822               	movf	??_testing,w
  2554  029F  00F5               	movwf	i1___awmod@dividend
  2555  02A0  0823               	movf	??_testing+1,w
  2556  02A1  00F6               	movwf	i1___awmod@dividend+1
  2557  02A2  118A  24D5  118A   	fcall	i1___awmod
  2558  02A5  0874               	movf	?i1___awmod+1,w
  2559  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02A8  00C5               	movwf	_rand+1
  2562  02A9  0873               	movf	?i1___awmod,w
  2563  02AA  00C4               	movwf	_rand
  2564                           
  2565                           ;Main.c: 111:             text = &chores[rand % 11][0];
  2566  02AB  0845               	movf	_rand+1,w
  2567  02AC  00F6               	movwf	i1___awmod@dividend+1
  2568  02AD  0844               	movf	_rand,w
  2569  02AE  00F5               	movwf	i1___awmod@dividend
  2570  02AF  300B               	movlw	11
  2571  02B0  00F3               	movwf	i1___awmod@divisor
  2572  02B1  3000               	movlw	0
  2573  02B2  00F4               	movwf	i1___awmod@divisor+1
  2574  02B3  118A  24D5  118A   	fcall	i1___awmod
  2575  02B6  0874               	movf	?i1___awmod+1,w
  2576  02B7  00FB               	movwf	i1___wmul@multiplier+1
  2577  02B8  0873               	movf	?i1___awmod,w
  2578  02B9  00FA               	movwf	i1___wmul@multiplier
  2579  02BA  301E               	movlw	30
  2580  02BB  00FC               	movwf	i1___wmul@multiplicand
  2581  02BC  3000               	movlw	0
  2582  02BD  00FD               	movwf	i1___wmul@multiplicand+1
  2583  02BE  118A  26A7  118A   	fcall	i1___wmul
  2584  02C1  3012               	movlw	low (_chores| (0+32768))
  2585  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2586  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2587  02C4  00A2               	movwf	??_testing
  2588  02C5  3081               	movlw	high (_chores| (0+32768))
  2589  02C6  00A3               	movwf	??_testing+1
  2590  02C7  087A               	movf	?i1___wmul,w
  2591  02C8  0722               	addwf	??_testing,w
  2592  02C9  00A4               	movwf	??_testing+2
  2593  02CA  087B               	movf	?i1___wmul+1,w
  2594  02CB  1803               	skipnc
  2595  02CC  0A7B               	incf	?i1___wmul+1,w
  2596  02CD  0723               	addwf	??_testing+1,w
  2597  02CE  00A5               	movwf	??_testing+3
  2598  02CF  0824               	movf	??_testing+2,w
  2599  02D0  00C0               	movwf	_text
  2600  02D1  0825               	movf	??_testing+3,w
  2601  02D2  00C1               	movwf	_text+1
  2602                           
  2603                           ;Main.c: 112:             user = rand%2;
  2604  02D3  0844               	movf	_rand,w
  2605  02D4  3901               	andlw	1
  2606  02D5  00A2               	movwf	??_testing
  2607  02D6  0822               	movf	??_testing,w
  2608  02D7  00CA               	movwf	_user
  2609                           
  2610                           ;Main.c: 113:             if (strlen(text) > 16)
  2611  02D8  0840               	movf	_text,w
  2612  02D9  00F0               	movwf	i1strlen@string
  2613  02DA  0841               	movf	_text+1,w
  2614  02DB  00F1               	movwf	i1strlen@string+1
  2615  02DC  118A  2755  118A   	fcall	i1_strlen
  2616  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2617  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2618  02E1  00A2               	movwf	??_testing
  2619  02E2  3011               	movlw	17
  2620  02E3  0222               	subwf	??_testing,w
  2621  02E4  1C03               	skipc
  2622  02E5  2B05               	goto	i1l1654
  2623                           
  2624                           ;Main.c: 114:             {;Main.c: 115:                 for (space_pos = 16; text[space
      +                          _pos] != ' ' && space_pos != 0; space_pos--);
  2625  02E6  3010               	movlw	16
  2626  02E7  00C2               	movwf	_space_pos
  2627  02E8  3000               	movlw	0
  2628  02E9  00C3               	movwf	_space_pos+1
  2629  02EA  2AF5               	goto	i1l1650
  2630  02EB                     i1l1652:	
  2631  02EB  0842               	movf	_space_pos,w
  2632  02EC  0443               	iorwf	_space_pos+1,w
  2633  02ED  1903               	btfsc	3,2
  2634  02EE  2B03               	goto	i1l134
  2635  02EF  30FF               	movlw	255
  2636  02F0  07C2               	addwf	_space_pos,f
  2637  02F1  1803               	skipnc
  2638  02F2  0AC3               	incf	_space_pos+1,f
  2639  02F3  30FF               	movlw	255
  2640  02F4  07C3               	addwf	_space_pos+1,f
  2641  02F5                     i1l1650:	
  2642  02F5  0842               	movf	_space_pos,w
  2643  02F6  0740               	addwf	_text,w
  2644  02F7  0084               	movwf	4
  2645  02F8  0843               	movf	_space_pos+1,w
  2646  02F9  1803               	skipnc
  2647  02FA  0A43               	incf	_space_pos+1,w
  2648  02FB  0741               	addwf	_text+1,w
  2649  02FC  00FF               	movwf	127
  2650  02FD  118A  2100  118A   	fcall	stringtab
  2651  0300  3A20               	xorlw	32
  2652  0301  1D03               	btfss	3,2
  2653  0302  2AEB               	goto	i1l1652
  2654  0303                     i1l134:	
  2655                           
  2656                           ;Main.c: 116:                 long_text = 1;
  2657  0303  01C8               	clrf	_long_text
  2658  0304  0AC8               	incf	_long_text,f
  2659  0305                     i1l1654:	
  2660                           
  2661                           ;Main.c: 119:         lcd_print(text, space_pos, 0, 0);
  2662  0305  0840               	movf	_text,w
  2663  0306  00F4               	movwf	i1lcd_print@text
  2664  0307  0841               	movf	_text+1,w
  2665  0308  00F5               	movwf	i1lcd_print@text+1
  2666  0309  0842               	movf	_space_pos,w
  2667  030A  00A2               	movwf	??_testing
  2668  030B  0822               	movf	??_testing,w
  2669  030C  00F6               	movwf	i1lcd_print@size
  2670  030D  01F7               	clrf	i1lcd_print@line
  2671  030E  01F8               	clrf	i1lcd_print@pos
  2672  030F  118A  2559  118A   	fcall	i1_lcd_print
  2673                           
  2674                           ;Main.c: 120:         lcd_print(user, 6, 1, 0);
  2675  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0314  084A               	movf	_user,w
  2678  0315  00A2               	movwf	??_testing
  2679  0316  01A3               	clrf	??_testing+1
  2680  0317  0822               	movf	??_testing,w
  2681  0318  00F4               	movwf	i1lcd_print@text
  2682  0319  0823               	movf	??_testing+1,w
  2683  031A  00F5               	movwf	i1lcd_print@text+1
  2684  031B  3006               	movlw	6
  2685  031C  00A4               	movwf	??_testing+2
  2686  031D  0824               	movf	??_testing+2,w
  2687  031E  00F6               	movwf	i1lcd_print@size
  2688  031F  01F7               	clrf	i1lcd_print@line
  2689  0320  0AF7               	incf	i1lcd_print@line,f
  2690  0321  01F8               	clrf	i1lcd_print@pos
  2691  0322  118A  2559  118A   	fcall	i1_lcd_print
  2692                           
  2693                           ;Main.c: 121:         TMR0 = 0;
  2694  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0327  0181               	clrf	1	;volatile
  2697                           
  2698                           ;Main.c: 122:         TMR1 = 0;
  2699  0328  018E               	clrf	14	;volatile
  2700  0329  018F               	clrf	15	;volatile
  2701                           
  2702                           ;Main.c: 123:         INT0IF = 0;
  2703  032A  108B               	bcf	11,1	;volatile
  2704                           
  2705                           ;Main.c: 124:     }
  2706  032B  2B53               	goto	i1l137
  2707  032C                     i1l126:	
  2708                           ;Main.c: 125:     else if (TMR0IF)
  2709                           
  2710  032C  1D0B               	btfss	11,2	;volatile
  2711  032D  2B53               	goto	i1l137
  2712                           
  2713                           ;Main.c: 126:     {;Main.c: 127:         lcd_off = 1;
  2714  032E  01CB               	clrf	_lcd_off
  2715  032F  0ACB               	incf	_lcd_off,f
  2716                           
  2717                           ;Main.c: 128:         lcd_clear_line(0);
  2718  0330  3000               	movlw	0
  2719  0331  118A  267C  118A   	fcall	i1_lcd_clear_line
  2720                           
  2721                           ;Main.c: 129:         lcd_print("sleep time!", 16, 0, 0);
  2722  0334  306A               	movlw	low (STR_1| (0+32768))
  2723  0335  00F4               	movwf	i1lcd_print@text
  2724  0336  3082               	movlw	high (STR_1| (0+32768))
  2725  0337  00F5               	movwf	i1lcd_print@text+1
  2726  0338  3010               	movlw	16
  2727  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2728  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2729  033B  00A2               	movwf	??_testing
  2730  033C  0822               	movf	??_testing,w
  2731  033D  00F6               	movwf	i1lcd_print@size
  2732  033E  01F7               	clrf	i1lcd_print@line
  2733  033F  01F8               	clrf	i1lcd_print@pos
  2734  0340  118A  2559  118A   	fcall	i1_lcd_print
  2735                           
  2736                           ;Main.c: 130:         _delay((unsigned long)((500)*(31000/4000.0)));
  2737  0343  3006               	movlw	6
  2738  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0346  00A3               	movwf	??_testing+1
  2741  0347  3006               	movlw	6
  2742  0348  00A2               	movwf	??_testing
  2743  0349                     u136_27:	
  2744  0349  0BA2               	decfsz	??_testing,f
  2745  034A  2B49               	goto	u136_27
  2746  034B  0BA3               	decfsz	??_testing+1,f
  2747  034C  2B49               	goto	u136_27
  2748                           
  2749                           ;Main.c: 131:         lcd_cmd(0x08);
  2750  034D  3008               	movlw	8
  2751  034E  118A  2620  118A   	fcall	i1_lcd_cmd
  2752                           
  2753                           ;Main.c: 132:         TMR0IF = 0;
  2754  0351  110B               	bcf	11,2	;volatile
  2755  0352  0063               	sleep	;# 
  2756  0353                     i1l137:	
  2757  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0355  0829               	movf	??_testing+7,w
  2760  0356  00FF               	movwf	127
  2761  0357  0828               	movf	??_testing+6,w
  2762  0358  008A               	movwf	10
  2763  0359  0827               	movf	??_testing+5,w
  2764  035A  0084               	movwf	4
  2765  035B  0E26               	swapf	(??_testing+4)^0,w
  2766  035C  0083               	movwf	3
  2767  035D  0EFE               	swapf	126,f
  2768  035E  0E7E               	swapf	126,w
  2769  035F  0009               	retfie
  2770  0360                     __end_of_testing:	
  2771                           
  2772                           	psect	intentry
  2773  0004                     __pintentry:	
  2774                           ;incstack = 0
  2775                           ; Regs used in _testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2776                           
  2777  0004                     interrupt_function:	
  2778  007E                     saved_w	set	btemp
  2779  0004  00FE               	movwf	btemp
  2780  0005  0E03               	swapf	3,w
  2781  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0008  00A6               	movwf	??_testing+4
  2784  0009  0804               	movf	4,w
  2785  000A  00A7               	movwf	??_testing+5
  2786  000B  080A               	movf	10,w
  2787  000C  00A8               	movwf	??_testing+6
  2788  000D  087F               	movf	btemp+1,w
  2789  000E  00A9               	movwf	??_testing+7
  2790  000F  118A  2A76         	ljmp	_testing
  2791                           
  2792                           	psect	text14
  2793  0755                     __ptext14:	
  2794 ;; *************** function i1_strlen *****************
  2795 ;; Defined at:
  2796 ;;		line 189 in file "Main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  string          2    0[COMMON] PTR unsigned char 
  2799 ;;		 -> NULL(0), chores(330), 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  strlen          2    3[COMMON] int 
  2802 ;;  strlen          1    5[COMMON] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         2       0       0       0       0
  2813 ;;      Locals:         3       0       0       0       0
  2814 ;;      Temps:          1       0       0       0       0
  2815 ;;      Totals:         6       0       0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used:    2
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_testing
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function i1_strlen
  2827  0755                     i1_strlen:	
  2828                           
  2829                           ;Main.c: 189: unsigned char strlen( unsigned char string[]);Main.c: 190: {;Main.c: 191: 
      +                              int i = 0;
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2833  0755  01F3               	clrf	i1strlen@i
  2834  0756  01F4               	clrf	i1strlen@i+1
  2835                           
  2836                           ;Main.c: 192:     unsigned char result = 0;
  2837  0757  01F5               	clrf	i1strlen@result
  2838  0758                     i1l1522:	
  2839                           ;Main.c: 193:     while (string[i] != 0)
  2840                           
  2841                           
  2842                           ;Main.c: 193:     while (string[i] != 0)
  2843  0758  0873               	movf	i1strlen@i,w
  2844  0759  0770               	addwf	i1strlen@string,w
  2845  075A  0084               	movwf	4
  2846  075B  0874               	movf	i1strlen@i+1,w
  2847  075C  1803               	skipnc
  2848  075D  0A74               	incf	i1strlen@i+1,w
  2849  075E  0771               	addwf	i1strlen@string+1,w
  2850  075F  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0760  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0761  00FF               	movwf	127
  2853  0762  118A  2100  118A   	fcall	stringtab
  2854  0765  3A00               	xorlw	0
  2855  0766  1903               	btfsc	3,2
  2856  0767  2F73               	goto	i1l1524
  2857                           
  2858                           ;Main.c: 194:     {;Main.c: 195:         i++;
  2859  0768  3001               	movlw	1
  2860  0769  07F3               	addwf	i1strlen@i,f
  2861  076A  1803               	skipnc
  2862  076B  0AF4               	incf	i1strlen@i+1,f
  2863  076C  3000               	movlw	0
  2864  076D  07F4               	addwf	i1strlen@i+1,f
  2865                           
  2866                           ;Main.c: 196:         result++;
  2867  076E  3001               	movlw	1
  2868  076F  00F2               	movwf	??i1_strlen
  2869  0770  0872               	movf	??i1_strlen,w
  2870  0771  07F5               	addwf	i1strlen@result,f
  2871  0772  2F58               	goto	i1l1522
  2872  0773                     i1l1524:	
  2873                           
  2874                           ;Main.c: 198:     return result;
  2875  0773  0875               	movf	i1strlen@result,w
  2876  0774  0008               	return
  2877  0775                     __end_ofi1_strlen:	
  2878                           
  2879                           	psect	text15
  2880  05F1                     __ptext15:	
  2881 ;; *************** function i1_random *****************
  2882 ;; Defined at:
  2883 ;;		line 161 in file "Main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  random          1    2[COMMON] unsigned char 
  2888 ;;  random          1    1[COMMON] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      unsigned char 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         0       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0
  2900 ;;      Temps:          1       0       0       0       0
  2901 ;;      Totals:         3       0       0       0       0
  2902 ;;Total ram usage:        3 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_testing
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function i1_random
  2913  05F1                     i1_random:	
  2914                           
  2915                           ;Main.c: 163:     static char rand;;Main.c: 164:     static char count = 0;;Main.c: 165:
      +                               char original = rand;
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in i1_random: [wreg+status,2+status,0]
  2919  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2920  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2921  05F3  0847               	movf	random@rand,w
  2922  05F4  00F0               	movwf	??i1_random
  2923  05F5  0870               	movf	??i1_random,w
  2924  05F6  00F2               	movwf	i1random@original
  2925                           
  2926                           ;Main.c: 166:     char rbit = 0;
  2927  05F7  01F1               	clrf	i1random@rbit
  2928                           
  2929                           ;Main.c: 168:     if (count == 0){
  2930  05F8  0846               	movf	random@count,w
  2931  05F9  1D03               	btfss	3,2
  2932  05FA  2E07               	goto	i1l1498
  2933  05FB                     i1l152:	
  2934                           ;Main.c: 170:         }
  2935                           
  2936                           
  2937                           ;Main.c: 169:         while (RA7 == 0){
  2938  05FB  1F85               	btfss	5,7	;volatile
  2939  05FC  2DFB               	goto	i1l152
  2940                           
  2941                           ;Main.c: 171:         count = 1;
  2942  05FD  01C6               	clrf	random@count
  2943  05FE  0AC6               	incf	random@count,f
  2944                           
  2945                           ;Main.c: 172:         rand = TMR0;
  2946  05FF  0801               	movf	1,w	;volatile
  2947  0600  00F0               	movwf	??i1_random
  2948  0601  0870               	movf	??i1_random,w
  2949  0602  00C7               	movwf	random@rand
  2950                           
  2951                           ;Main.c: 173:         TMR0 = 0;
  2952  0603  0181               	clrf	1	;volatile
  2953                           
  2954                           ;Main.c: 174:         TMR0IE = 1;
  2955  0604  168B               	bsf	11,5	;volatile
  2956  0605                     i1l1494:	
  2957                           
  2958                           ;Main.c: 175:         return rand;
  2959  0605  0847               	movf	random@rand,w
  2960  0606  0008               	return
  2961  0607                     i1l1498:	
  2962                           
  2963                           ;Main.c: 178:     original &= 180;
  2964  0607  30B4               	movlw	180
  2965  0608                     L2:	
  2966  0608  00F0               	movwf	??i1_random
  2967  0609  0870               	movf	??i1_random,w
  2968  060A  05F2               	andwf	i1random@original,f
  2969                           
  2970                           ;Main.c: 179:     while(original){
  2971  060B  0872               	movf	i1random@original,w
  2972  060C  1903               	btfsc	3,2
  2973  060D  2E17               	goto	i1l1508
  2974                           
  2975                           ;Main.c: 180:         rbit ^= (original & 1);
  2976                           
  2977                           ;Main.c: 179:     while(original){
  2978  060E  0872               	movf	i1random@original,w
  2979  060F  3901               	andlw	1
  2980  0610  00F0               	movwf	??i1_random
  2981  0611  0870               	movf	??i1_random,w
  2982  0612  06F1               	xorwf	i1random@rbit,f
  2983                           
  2984                           ;Main.c: 181:         original >>= 1;
  2985  0613  1003               	clrc
  2986  0614  0CF2               	rrf	i1random@original,f
  2987                           
  2988                           ;Main.c: 182:         original &= (~(1<<7));
  2989  0615  307F               	movlw	127
  2990  0616  2E08               	goto	L2
  2991  0617                     i1l1508:	
  2992                           
  2993                           ;Main.c: 184:     rand <<= 1;
  2994  0617  1003               	clrc
  2995  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2997  061A  0DC7               	rlf	random@rand,f
  2998                           
  2999                           ;Main.c: 185:     rand |= rbit;
  3000  061B  0871               	movf	i1random@rbit,w
  3001  061C  00F0               	movwf	??i1_random
  3002  061D  0870               	movf	??i1_random,w
  3003  061E  04C7               	iorwf	random@rand,f
  3004  061F  2E05               	goto	i1l1494
  3005  0620                     __end_ofi1_random:	
  3006                           
  3007                           	psect	text16
  3008  0559                     __ptext16:	
  3009 ;; *************** function i1_lcd_print *****************
  3010 ;; Defined at:
  3011 ;;		line 13 in file "LCD.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  text            2    4[COMMON] PTR unsigned char 
  3014 ;;		 -> NULL(0), STR_1(12), RAM(512), users(14), 
  3015 ;;		 -> chores(330), 
  3016 ;;  size            1    6[COMMON] unsigned char 
  3017 ;;  line            1    7[COMMON] unsigned char 
  3018 ;;  pos             1    8[COMMON] unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  lcd_print       2   10[COMMON] PTR unsigned char 
  3021 ;;		 -> NULL(0), STR_1(12), RAM(512), users(14), 
  3022 ;;		 -> chores(330), 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         5       0       0       0       0
  3033 ;;      Locals:         2       0       0       0       0
  3034 ;;      Temps:          1       0       0       0       0
  3035 ;;      Totals:         8       0       0       0       0
  3036 ;;Total ram usage:        8 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		i1_lcd_cmd
  3041 ;;		i1_lcd_data
  3042 ;; This function is called by:
  3043 ;;		_testing
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function i1_lcd_print
  3049  0559                     i1_lcd_print:	
  3050                           
  3051                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in i1_lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3055  0559  0874               	movf	i1lcd_print@text,w
  3056  055A  00FA               	movwf	i1lcd_print@pointer
  3057  055B  0875               	movf	i1lcd_print@text+1,w
  3058  055C  00FB               	movwf	i1lcd_print@pointer+1
  3059                           
  3060                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  3061  055D  0877               	movf	i1lcd_print@line,w
  3062  055E  00F9               	movwf	??i1_lcd_print
  3063  055F  3005               	movlw	5
  3064  0560                     u89_25:	
  3065  0560  1003               	clrc
  3066  0561  0DF9               	rlf	??i1_lcd_print,f
  3067  0562  3EFF               	addlw	-1
  3068  0563  1D03               	skipz
  3069  0564  2D60               	goto	u89_25
  3070  0565  1003               	clrc
  3071  0566  0D79               	rlf	??i1_lcd_print,w
  3072  0567  0478               	iorwf	i1lcd_print@pos,w
  3073  0568  3880               	iorlw	128
  3074  0569  118A  2620  118A   	fcall	i1_lcd_cmd
  3075  056C                     i1l1456:	
  3076                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  3077                           
  3078                           
  3079                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  3080  056C  087B               	movf	i1lcd_print@pointer+1,w
  3081  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3082  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3083  056F  00FF               	movwf	127
  3084  0570  087A               	movf	i1lcd_print@pointer,w
  3085  0571  0084               	movwf	4
  3086  0572  118A  2100  118A   	fcall	stringtab
  3087  0575  3A00               	xorlw	0
  3088  0576  1903               	skipnz
  3089  0577  0008               	return
  3090  0578  0876               	movf	i1lcd_print@size,w
  3091  0579  1903               	btfsc	3,2
  3092  057A  0008               	return
  3093                           
  3094                           ;LCD.c: 21:         lcd_data(*pointer);
  3095  057B  087B               	movf	i1lcd_print@pointer+1,w
  3096  057C  00FF               	movwf	127
  3097  057D  087A               	movf	i1lcd_print@pointer,w
  3098  057E  0084               	movwf	4
  3099  057F  118A  2100  118A   	fcall	stringtab
  3100  0582  118A  2713  118A   	fcall	i1_lcd_data
  3101                           
  3102                           ;LCD.c: 22:         pointer++;
  3103  0585  3001               	movlw	1
  3104  0586  07FA               	addwf	i1lcd_print@pointer,f
  3105  0587  1803               	skipnc
  3106  0588  0AFB               	incf	i1lcd_print@pointer+1,f
  3107  0589  3000               	movlw	0
  3108  058A  07FB               	addwf	i1lcd_print@pointer+1,f
  3109                           
  3110                           ;LCD.c: 23:         size--;
  3111  058B  3001               	movlw	1
  3112  058C  02F6               	subwf	i1lcd_print@size,f
  3113  058D  2D6C               	goto	i1l1456
  3114  058E                     __end_ofi1_lcd_print:	
  3115                           
  3116                           	psect	text17
  3117  067C                     __ptext17:	
  3118 ;; *************** function i1_lcd_clear_line *****************
  3119 ;; Defined at:
  3120 ;;		line 33 in file "LCD.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  line            1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  line            1    5[COMMON] unsigned char 
  3125 ;;  lcd_clear_li    2    6[COMMON] int 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       0       0       0       0
  3136 ;;      Locals:         3       0       0       0       0
  3137 ;;      Temps:          1       0       0       0       0
  3138 ;;      Totals:         4       0       0       0       0
  3139 ;;Total ram usage:        4 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    2
  3142 ;; This function calls:
  3143 ;;		i1_lcd_cmd
  3144 ;;		i1_lcd_data
  3145 ;; This function is called by:
  3146 ;;		_testing
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function i1_lcd_clear_line
  3152  067C                     i1_lcd_clear_line:	
  3153                           
  3154                           ;incstack = 0
  3155                           ; Regs used in i1_lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3156                           ;i1lcd_clear_line@line stored from wreg
  3157  067C  00F5               	movwf	i1lcd_clear_line@line
  3158                           
  3159                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  3160  067D  0875               	movf	i1lcd_clear_line@line,w
  3161  067E  00F4               	movwf	??i1_lcd_clear_line
  3162  067F  3005               	movlw	5
  3163  0680                     u92_25:	
  3164  0680  1003               	clrc
  3165  0681  0DF4               	rlf	??i1_lcd_clear_line,f
  3166  0682  3EFF               	addlw	-1
  3167  0683  1D03               	skipz
  3168  0684  2E80               	goto	u92_25
  3169  0685  1003               	clrc
  3170  0686  0D74               	rlf	??i1_lcd_clear_line,w
  3171  0687  3880               	iorlw	128
  3172  0688  118A  2620  118A   	fcall	i1_lcd_cmd
  3173                           
  3174                           ;LCD.c: 37:     for (i=0; i<40; i++)
  3175  068B  01F6               	clrf	i1lcd_clear_line@i
  3176  068C  01F7               	clrf	i1lcd_clear_line@i+1
  3177  068D                     i1l1468:	
  3178  068D  0877               	movf	i1lcd_clear_line@i+1,w
  3179  068E  3A80               	xorlw	128
  3180  068F  00FF               	movwf	127
  3181  0690  3080               	movlw	128
  3182  0691  027F               	subwf	127,w
  3183  0692  1D03               	skipz
  3184  0693  2E96               	goto	u93_25
  3185  0694  3028               	movlw	40
  3186  0695  0276               	subwf	i1lcd_clear_line@i,w
  3187  0696                     u93_25:	
  3188  0696  1803               	btfsc	3,0
  3189  0697  2EA3               	goto	i1l1478
  3190                           
  3191                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  3192  0698  3020               	movlw	32
  3193  0699  118A  2713  118A   	fcall	i1_lcd_data
  3194                           
  3195                           ;LCD.c: 40:     }
  3196  069C  3001               	movlw	1
  3197  069D  07F6               	addwf	i1lcd_clear_line@i,f
  3198  069E  1803               	skipnc
  3199  069F  0AF7               	incf	i1lcd_clear_line@i+1,f
  3200  06A0  3000               	movlw	0
  3201  06A1  07F7               	addwf	i1lcd_clear_line@i+1,f
  3202  06A2  2E8D               	goto	i1l1468
  3203  06A3                     i1l1478:	
  3204                           
  3205                           ;LCD.c: 41:     lcd_cmd(0x80);
  3206  06A3  3080               	movlw	128
  3207  06A4  118A  2620         	fcall	i1_lcd_cmd
  3208  06A6  0008               	return
  3209  06A7                     __end_ofi1_lcd_clear_line:	
  3210                           
  3211                           	psect	text18
  3212  0713                     __ptext18:	
  3213 ;; *************** function i1_lcd_data *****************
  3214 ;; Defined at:
  3215 ;;		line 90 in file "LCD.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  d               1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  d               1    3[COMMON] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, pclath, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0
  3231 ;;      Temps:          2       0       0       0       0
  3232 ;;      Totals:         3       0       0       0       0
  3233 ;;Total ram usage:        3 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    1
  3236 ;; This function calls:
  3237 ;;		i1_enable
  3238 ;; This function is called by:
  3239 ;;		i1_lcd_print
  3240 ;;		i1_lcd_clear_line
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function i1_lcd_data
  3246  0713                     i1_lcd_data:	
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in i1_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  3250                           ;i1lcd_data@d stored from wreg
  3251  0713  00F3               	movwf	i1lcd_data@d
  3252                           
  3253                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  3254  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0716  1486               	bsf	6,1	;volatile
  3257                           
  3258                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  3259  0717  0873               	movf	i1lcd_data@d,w
  3260  0718  00F1               	movwf	??i1_lcd_data
  3261  0719  3004               	movlw	4
  3262  071A                     u64_25:	
  3263  071A  1003               	clrc
  3264  071B  0CF1               	rrf	??i1_lcd_data,f
  3265  071C  3EFF               	addlw	-1
  3266  071D  1D03               	skipz
  3267  071E  2F1A               	goto	u64_25
  3268  071F  300F               	movlw	15
  3269  0720  0571               	andwf	??i1_lcd_data,w
  3270  0721  00F2               	movwf	??i1_lcd_data+1
  3271  0722  0805               	movf	5,w	;volatile
  3272  0723  39F0               	andlw	240
  3273  0724  0472               	iorwf	??i1_lcd_data+1,w
  3274  0725  0085               	movwf	5	;volatile
  3275                           
  3276                           ;LCD.c: 99:     enable();
  3277  0726  118A  27A2  118A   	fcall	i1_enable
  3278                           
  3279                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  3280  0729  300F               	movlw	15
  3281  072A  0573               	andwf	i1lcd_data@d,w
  3282  072B  00F1               	movwf	??i1_lcd_data
  3283  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3284  072D  1303               	bcf	3,6	;RP1=0, select bank0
  3285  072E  0805               	movf	5,w	;volatile
  3286  072F  39F0               	andlw	240
  3287  0730  0471               	iorwf	??i1_lcd_data,w
  3288  0731  0085               	movwf	5	;volatile
  3289                           
  3290                           ;LCD.c: 102:     enable();
  3291  0732  118A  27A2         	fcall	i1_enable
  3292  0734  0008               	return
  3293  0735                     __end_ofi1_lcd_data:	
  3294                           
  3295                           	psect	text19
  3296  07AE                     __ptext19:	
  3297 ;; *************** function i1_lcd_clear_all *****************
  3298 ;; Defined at:
  3299 ;;		line 27 in file "LCD.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0
  3315 ;;      Temps:          1       0       0       0       0
  3316 ;;      Totals:         1       0       0       0       0
  3317 ;;Total ram usage:        1 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    2
  3320 ;; This function calls:
  3321 ;;		i1_lcd_cmd
  3322 ;; This function is called by:
  3323 ;;		_testing
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           
  3328                           ;psect for function i1_lcd_clear_all
  3329  07AE                     i1_lcd_clear_all:	
  3330                           
  3331                           ;LCD.c: 29:     lcd_cmd(0x01);
  3332                           
  3333                           ;incstack = 0
  3334                           ; Regs used in i1_lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  3335  07AE  3001               	movlw	1
  3336  07AF  118A  2620  118A   	fcall	i1_lcd_cmd
  3337                           
  3338                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  3339  07B2  300C               	movlw	12
  3340  07B3  00F4               	movwf	??i1_lcd_clear_all
  3341  07B4                     u137_27:	
  3342  07B4  0BF4               	decfsz	??i1_lcd_clear_all,f
  3343  07B5  2FB4               	goto	u137_27
  3344  07B6  0000               	nop
  3345  07B7  0008               	return
  3346  07B8                     __end_ofi1_lcd_clear_all:	
  3347                           
  3348                           	psect	text20
  3349  0620                     __ptext20:	
  3350 ;; *************** function i1_lcd_cmd *****************
  3351 ;; Defined at:
  3352 ;;		line 74 in file "LCD.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  c               1    wreg     unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  c               1    3[COMMON] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0
  3368 ;;      Temps:          2       0       0       0       0
  3369 ;;      Totals:         3       0       0       0       0
  3370 ;;Total ram usage:        3 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    1
  3373 ;; This function calls:
  3374 ;;		i1_enable
  3375 ;; This function is called by:
  3376 ;;		_testing
  3377 ;;		i1_lcd_print
  3378 ;;		i1_lcd_clear_all
  3379 ;;		i1_lcd_clear_line
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function i1_lcd_cmd
  3385  0620                     i1_lcd_cmd:	
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3389                           ;i1lcd_cmd@c stored from wreg
  3390  0620  00F3               	movwf	i1lcd_cmd@c
  3391                           
  3392                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  3393  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0623  1086               	bcf	6,1	;volatile
  3396                           
  3397                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  3398  0624  300C               	movlw	12
  3399  0625  00F1               	movwf	??i1_lcd_cmd
  3400  0626                     u138_27:	
  3401  0626  0BF1               	decfsz	??i1_lcd_cmd,f
  3402  0627  2E26               	goto	u138_27
  3403  0628  0000               	nop
  3404                           
  3405                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  3406  0629  0873               	movf	i1lcd_cmd@c,w
  3407  062A  00F1               	movwf	??i1_lcd_cmd
  3408  062B  3004               	movlw	4
  3409  062C                     u63_25:	
  3410  062C  1003               	clrc
  3411  062D  0CF1               	rrf	??i1_lcd_cmd,f
  3412  062E  3EFF               	addlw	-1
  3413  062F  1D03               	skipz
  3414  0630  2E2C               	goto	u63_25
  3415  0631  300F               	movlw	15
  3416  0632  0571               	andwf	??i1_lcd_cmd,w
  3417  0633  00F2               	movwf	??i1_lcd_cmd+1
  3418  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0636  0805               	movf	5,w	;volatile
  3421  0637  39F0               	andlw	240
  3422  0638  0472               	iorwf	??i1_lcd_cmd+1,w
  3423  0639  0085               	movwf	5	;volatile
  3424                           
  3425                           ;LCD.c: 83:     enable();
  3426  063A  118A  27A2  118A   	fcall	i1_enable
  3427                           
  3428                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  3429  063D  300F               	movlw	15
  3430  063E  0573               	andwf	i1lcd_cmd@c,w
  3431  063F  00F1               	movwf	??i1_lcd_cmd
  3432  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0642  0805               	movf	5,w	;volatile
  3435  0643  39F0               	andlw	240
  3436  0644  0471               	iorwf	??i1_lcd_cmd,w
  3437  0645  0085               	movwf	5	;volatile
  3438                           
  3439                           ;LCD.c: 86:     enable();
  3440  0646  118A  27A2  118A   	fcall	i1_enable
  3441                           
  3442                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  3443  0649  300C               	movlw	12
  3444  064A  00F1               	movwf	??i1_lcd_cmd
  3445  064B                     u139_27:	
  3446  064B  0BF1               	decfsz	??i1_lcd_cmd,f
  3447  064C  2E4B               	goto	u139_27
  3448  064D  0000               	nop
  3449  064E  0008               	return
  3450  064F                     __end_ofi1_lcd_cmd:	
  3451                           
  3452                           	psect	text21
  3453  07A2                     __ptext21:	
  3454 ;; *************** function i1_enable *****************
  3455 ;; Defined at:
  3456 ;;		line 106 in file "LCD.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0
  3472 ;;      Temps:          1       0       0       0       0
  3473 ;;      Totals:         1       0       0       0       0
  3474 ;;Total ram usage:        1 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		i1_lcd_cmd
  3480 ;;		i1_lcd_data
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function i1_enable
  3486  07A2                     i1_enable:	
  3487                           
  3488                           ;LCD.c: 108:     RB2 = 1;
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in i1_enable: [wreg]
  3492  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3493  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3494  07A4  1506               	bsf	6,2	;volatile
  3495                           
  3496                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  3497  07A5  300C               	movlw	12
  3498  07A6  00F0               	movwf	??i1_enable
  3499  07A7                     u140_27:	
  3500  07A7  0BF0               	decfsz	??i1_enable,f
  3501  07A8  2FA7               	goto	u140_27
  3502  07A9  0000               	nop
  3503                           
  3504                           ;LCD.c: 112:     RB2 = 0;
  3505  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3506  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3507  07AC  1106               	bcf	6,2	;volatile
  3508  07AD  0008               	return
  3509  07AE                     __end_ofi1_enable:	
  3510                           
  3511                           	psect	text22
  3512  06A7                     __ptext22:	
  3513 ;; *************** function i1___wmul *****************
  3514 ;; Defined at:
  3515 ;;		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  multiplier      2   10[COMMON] unsigned int 
  3518 ;;  multiplicand    2   12[COMMON] unsigned int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  __wmul          2    0[BANK0 ] unsigned int 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  2   10[COMMON] unsigned int 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3530 ;;      Params:         4       0       0       0       0
  3531 ;;      Locals:         0       2       0       0       0
  3532 ;;      Temps:          0       0       0       0       0
  3533 ;;      Totals:         4       2       0       0       0
  3534 ;;Total ram usage:        6 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_testing
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function i1___wmul
  3545  06A7                     i1___wmul:	
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3549  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3550  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3551  06A9  01A0               	clrf	i1___wmul@product
  3552  06AA  01A1               	clrf	i1___wmul@product+1
  3553  06AB                     i1l1530:	
  3554  06AB  1C7A               	btfss	i1___wmul@multiplier,0
  3555  06AC  2EB5               	goto	i1l250
  3556  06AD  087C               	movf	i1___wmul@multiplicand,w
  3557  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3558  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3559  06B0  07A0               	addwf	i1___wmul@product,f
  3560  06B1  1803               	skipnc
  3561  06B2  0AA1               	incf	i1___wmul@product+1,f
  3562  06B3  087D               	movf	i1___wmul@multiplicand+1,w
  3563  06B4  07A1               	addwf	i1___wmul@product+1,f
  3564  06B5                     i1l250:	
  3565  06B5  3001               	movlw	1
  3566  06B6                     u99_25:	
  3567  06B6  1003               	clrc
  3568  06B7  0DFC               	rlf	i1___wmul@multiplicand,f
  3569  06B8  0DFD               	rlf	i1___wmul@multiplicand+1,f
  3570  06B9  3EFF               	addlw	-1
  3571  06BA  1D03               	skipz
  3572  06BB  2EB6               	goto	u99_25
  3573  06BC  3001               	movlw	1
  3574  06BD                     u100_25:	
  3575  06BD  1003               	clrc
  3576  06BE  0CFB               	rrf	i1___wmul@multiplier+1,f
  3577  06BF  0CFA               	rrf	i1___wmul@multiplier,f
  3578  06C0  3EFF               	addlw	-1
  3579  06C1  1D03               	skipz
  3580  06C2  2EBD               	goto	u100_25
  3581  06C3  087A               	movf	i1___wmul@multiplier,w
  3582  06C4  047B               	iorwf	i1___wmul@multiplier+1,w
  3583  06C5  1D03               	btfss	3,2
  3584  06C6  2EAB               	goto	i1l1530
  3585  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3586  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3587  06C9  0821               	movf	i1___wmul@product+1,w
  3588  06CA  00FB               	movwf	?i1___wmul+1
  3589  06CB  0820               	movf	i1___wmul@product,w
  3590  06CC  00FA               	movwf	?i1___wmul
  3591  06CD  0008               	return
  3592  06CE                     __end_ofi1___wmul:	
  3593                           
  3594                           	psect	text23
  3595  04D5                     __ptext23:	
  3596 ;; *************** function i1___awmod *****************
  3597 ;; Defined at:
  3598 ;;		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  divisor         2    3[COMMON] int 
  3601 ;;  dividend        2    5[COMMON] int 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  __awmod         1    9[COMMON] unsigned char 
  3604 ;;  __awmod         1    8[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  2    3[COMMON] int 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         4       0       0       0       0
  3615 ;;      Locals:         2       0       0       0       0
  3616 ;;      Temps:          1       0       0       0       0
  3617 ;;      Totals:         7       0       0       0       0
  3618 ;;Total ram usage:        7 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_testing
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function i1___awmod
  3629  04D5                     i1___awmod:	
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  3633  04D5  01F9               	clrf	i1___awmod@sign
  3634  04D6  1FF6               	btfss	i1___awmod@dividend+1,7
  3635  04D7  2CDF               	goto	i1l1550
  3636  04D8  09F5               	comf	i1___awmod@dividend,f
  3637  04D9  09F6               	comf	i1___awmod@dividend+1,f
  3638  04DA  0AF5               	incf	i1___awmod@dividend,f
  3639  04DB  1903               	skipnz
  3640  04DC  0AF6               	incf	i1___awmod@dividend+1,f
  3641  04DD  01F9               	clrf	i1___awmod@sign
  3642  04DE  0AF9               	incf	i1___awmod@sign,f
  3643  04DF                     i1l1550:	
  3644  04DF  1FF4               	btfss	i1___awmod@divisor+1,7
  3645  04E0  2CE6               	goto	i1l1554
  3646  04E1  09F3               	comf	i1___awmod@divisor,f
  3647  04E2  09F4               	comf	i1___awmod@divisor+1,f
  3648  04E3  0AF3               	incf	i1___awmod@divisor,f
  3649  04E4  1903               	skipnz
  3650  04E5  0AF4               	incf	i1___awmod@divisor+1,f
  3651  04E6                     i1l1554:	
  3652  04E6  0873               	movf	i1___awmod@divisor,w
  3653  04E7  0474               	iorwf	i1___awmod@divisor+1,w
  3654  04E8  1903               	btfsc	3,2
  3655  04E9  2D13               	goto	i1l1572
  3656  04EA  01F8               	clrf	i1___awmod@counter
  3657  04EB  0AF8               	incf	i1___awmod@counter,f
  3658  04EC                     i1l1562:	
  3659  04EC  1BF4               	btfsc	i1___awmod@divisor+1,7
  3660  04ED  2CFA               	goto	i1l1564
  3661  04EE  3001               	movlw	1
  3662  04EF                     u105_25:	
  3663  04EF  1003               	clrc
  3664  04F0  0DF3               	rlf	i1___awmod@divisor,f
  3665  04F1  0DF4               	rlf	i1___awmod@divisor+1,f
  3666  04F2  3EFF               	addlw	-1
  3667  04F3  1D03               	skipz
  3668  04F4  2CEF               	goto	u105_25
  3669  04F5  3001               	movlw	1
  3670  04F6  00F7               	movwf	??i1___awmod
  3671  04F7  0877               	movf	??i1___awmod,w
  3672  04F8  07F8               	addwf	i1___awmod@counter,f
  3673  04F9  2CEC               	goto	i1l1562
  3674  04FA                     i1l1564:	
  3675  04FA  0874               	movf	i1___awmod@divisor+1,w
  3676  04FB  0276               	subwf	i1___awmod@dividend+1,w
  3677  04FC  1D03               	skipz
  3678  04FD  2D00               	goto	u107_25
  3679  04FE  0873               	movf	i1___awmod@divisor,w
  3680  04FF  0275               	subwf	i1___awmod@dividend,w
  3681  0500                     u107_25:	
  3682  0500  1C03               	skipc
  3683  0501  2D08               	goto	i1l1568
  3684  0502  0873               	movf	i1___awmod@divisor,w
  3685  0503  02F5               	subwf	i1___awmod@dividend,f
  3686  0504  0874               	movf	i1___awmod@divisor+1,w
  3687  0505  1C03               	skipc
  3688  0506  03F6               	decf	i1___awmod@dividend+1,f
  3689  0507  02F6               	subwf	i1___awmod@dividend+1,f
  3690  0508                     i1l1568:	
  3691  0508  3001               	movlw	1
  3692  0509                     u108_25:	
  3693  0509  1003               	clrc
  3694  050A  0CF4               	rrf	i1___awmod@divisor+1,f
  3695  050B  0CF3               	rrf	i1___awmod@divisor,f
  3696  050C  3EFF               	addlw	-1
  3697  050D  1D03               	skipz
  3698  050E  2D09               	goto	u108_25
  3699  050F  3001               	movlw	1
  3700  0510  02F8               	subwf	i1___awmod@counter,f
  3701  0511  1D03               	btfss	3,2
  3702  0512  2CFA               	goto	i1l1564
  3703  0513                     i1l1572:	
  3704  0513  0879               	movf	i1___awmod@sign,w
  3705  0514  1903               	btfsc	3,2
  3706  0515  2D1B               	goto	i1l1576
  3707  0516  09F5               	comf	i1___awmod@dividend,f
  3708  0517  09F6               	comf	i1___awmod@dividend+1,f
  3709  0518  0AF5               	incf	i1___awmod@dividend,f
  3710  0519  1903               	skipnz
  3711  051A  0AF6               	incf	i1___awmod@dividend+1,f
  3712  051B                     i1l1576:	
  3713  051B  0876               	movf	i1___awmod@dividend+1,w
  3714  051C  00F4               	movwf	?i1___awmod+1
  3715  051D  0875               	movf	i1___awmod@dividend,w
  3716  051E  00F3               	movwf	?i1___awmod
  3717  051F  0008               	return
  3718  0520                     __end_ofi1___awmod:	
  3719  007E                     btemp	set	126	;btemp
  3720  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    344
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@string	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> itoa@buffer(COMMON[8]), 

    text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    lcd_print@text	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), STR_1(CODE[12]), RAM(DATA[512]), users(CODE[14]), 
		 -> chores(CODE[330]), 

    lcd_print@pointer	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), STR_1(CODE[12]), RAM(DATA[512]), users(CODE[14]), 
		 -> chores(CODE[330]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _testing in COMMON

    _testing->i1___wmul
    i1_lcd_print->i1_lcd_cmd
    i1_lcd_print->i1_lcd_data
    i1_lcd_clear_line->i1_lcd_cmd
    i1_lcd_clear_line->i1_lcd_data
    i1_lcd_data->i1_enable
    i1_lcd_clear_all->i1_lcd_cmd
    i1_lcd_cmd->i1_enable
    i1___wmul->i1___awmod
    i1___awmod->i1_random

Critical Paths under _main in BANK0

    _main->___wmul
    _lcd_print->___bmul
    _lcd_print->_lcd_cmd
    _lcd_print->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_clear_line->_lcd_cmd
    _lcd_clear_line->_lcd_data
    _lcd_data->_enable
    _lcd_clear_all->_lcd_cmd
    _lcd_cmd->_enable
    ___wmul->___awmod
    ___awmod->_random

Critical Paths under _testing in BANK0

    _testing->i1___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _testing in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _testing in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _testing in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3761
                                             26 BANK0      4     4      0
                            ___awmod
                             ___bmul
                             ___wmul
                      _lcd_clear_all
                     _lcd_clear_line
                           _lcd_init
                          _lcd_print
                             _random
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     196
                                             10 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _random                                               3     3      0      72
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            8     3      5    1735
                                             14 BANK0      8     3      5
                             ___bmul (ARG)
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                             14 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_line                                       4     4      0     156
                                             14 BANK0      4     4      0
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                             11 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_all                                        1     1      0      44
                                             14 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                             11 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               1     1      0       0
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     444
                                             20 BANK0      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     952
                                             13 BANK0      7     3      4
                             _random (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _testing                                              8     8      0    1491
                                              2 BANK0      8     8      0
                          i1___awmod
                           i1___wmul
                    i1_lcd_clear_all
                   i1_lcd_clear_line
                          i1_lcd_cmd
                        i1_lcd_print
                           i1_random
                           i1_strlen
 ---------------------------------------------------------------------------------
 (6) i1_strlen                                             6     4      2      96
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) i1_random                                             3     3      0      72
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_lcd_print                                          8     3      5     535
                                              4 COMMON     8     3      5
                          i1_lcd_cmd
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_line                                     4     4      0     156
                                              4 COMMON     4     4      0
                          i1_lcd_cmd
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (6) i1_lcd_data                                           3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_all                                      1     1      0      44
                                              4 COMMON     1     1      0
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (6) i1_lcd_cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (7) i1_enable                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                             10 COMMON     4     0      4
                                              0 BANK0      2     2      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___awmod                                            7     3      4     400
                                              3 COMMON     7     3      4
                           i1_random (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _random (ARG)
   ___bmul
   ___wmul
     ___awmod (ARG)
       _random (ARG)
   _lcd_clear_all
     _lcd_cmd
       _enable
   _lcd_clear_line
     _lcd_cmd
       _enable
     _lcd_data
       _enable
   _lcd_init
     _lcd_cmd
       _enable
   _lcd_print
     ___bmul (ARG)
     _lcd_cmd (ARG)
       _enable
     _lcd_data (ARG)
       _enable
   _random
   _strlen

 _testing (ROOT)
   i1___awmod
     i1_random (ARG)
   i1___wmul
     i1___awmod (ARG)
       i1_random (ARG)
   i1_lcd_clear_all
     i1_lcd_cmd
       i1_enable
   i1_lcd_clear_line
     i1_lcd_cmd
       i1_enable
     i1_lcd_data
       i1_enable
   i1_lcd_cmd
     i1_enable
   i1_lcd_print
     i1_lcd_cmd
       i1_enable
     i1_lcd_data
       i1_enable
   i1_random
   i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Nov 09 14:32:41 2019

                        pc 0002             ___bmul@product 002C                __CFG_CP$OFF 0000  
                       fsr 0004        ___wmul@multiplicand 0036           i1___wmul@product 0020  
                      l152 0659                        l250 06DA                        _GIE 005F  
                      _RB1 0031                        _RB2 0032                        _RA7 002F  
                      _PS0 0408                        _PS1 0409                        _PS2 040A  
             __CFG_CPD$OFF 0000                        u615 059E                        u625 06F8  
                      u655 0529                        _PSA 040B                        u835 04A4  
                      u755 06DB                        u765 06E2                        u685 05C7  
                      u855 04B5                        u695 05EB                        u865 04BE  
                      fsr0 0004                        indf 0000               ___awmod@sign 0033  
             __CFG_IESO$ON 0000                 i1_lcd_data 0713            i1_lcd_clear_all 07AE  
             __CFG_LVP$OFF 0000                       l1302 05D6                       l1400 077F  
                     l1420 049B                       l1430 04AF                       l1350 0665  
                     l1416 0494                       l1360 0675                       l1442 04D0  
                     l1434 04BD                       l1346 0663                       l1610 03BC  
                     l1428 04A1                       l1438 04C8                       l1382 06D2  
                     l1286 0535                       l1374 073A                       l1376 0753  
                     l1624 0427                       l1396 0779                       STR_1 026A  
                     _T0CS 040D                       u1217 0404                       u1307 0484  
                     u1227 042D                       u1317 079E                       u1237 0437  
                     u1327 0596                       u1247 0442                       u1337 05BD  
                     u1257 044D                       u1347 078F                       u1267 0458  
                     u1277 0463                       u1287 046E                       u1297 0479  
                     _TMR0 0001                       _TMR1 000E               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 0360                       _rand 0044  
                     _text 0040                       btemp 007E                       _user 004A  
                     start 0011          ___bmul@multiplier 002D              __CFG_MCLRE$ON 0000  
               i1lcd_cmd@c 0073                i1_lcd_print 0559           i1_lcd_clear_line 067C  
          ??_lcd_clear_all 002E                      ?_main 0070              __CFG_WDTE$OFF 0000  
          __end_of___awmod 04D5                      i1l134 0303                      i1l126 032C  
                    i1l152 05FB                      i1l137 0353                      i1l250 06B5  
                    _PORTA 0005                      _PORTB 0006                      u63_25 062C  
                    u64_25 071A                      _TRISA 0085                      _TRISB 0086  
                    u92_25 0680                      u93_25 0696                      u89_25 0560  
                    u99_25 06B6             __CFG_CCPMX$RB0 0000               lcd_print@pos 0032  
          __end_of_lcd_cmd 05C1             i1___awmod@sign 0079                      _users 025C  
           __CFG_BOREN$OFF 0000                      pclath 000A           __end_ofi1___wmul 06CE  
          __end_of_testing 0360           __end_ofi1_enable 07AE                      status 0003  
      i1___wmul@multiplier 007A                      wtemp0 007E         __size_ofi1___awmod 004B  
         __end_ofi1_random 0620           __end_ofi1_strlen 0775            __initialization 0013  
       __size_ofi1_lcd_cmd 002F                i1lcd_data@d 0073               __end_of_main 0433  
                   ??_main 003A    __end_ofi1_lcd_clear_all 07B8           ??_lcd_clear_line 002E  
              ?i1_lcd_data 0070             i1lcd_print@pos 0078                     u100_25 06BD  
                   _INT0IE 005C                     _INT0IF 0059                     i1l1530 06AB  
                   i1l1522 0758                     i1l1508 0617                     i1l1524 0773  
                   i1l1550 04DF                     i1l1456 056C                     i1l1562 04EC  
                   i1l1554 04E6                     i1l1650 02F5                     i1l1564 04FA  
                   i1l1572 0513                     i1l1468 068D                     i1l1652 02EB  
                   i1l1636 028F                     u105_25 04EF                     i1l1478 06A3  
                   i1l1494 0605                     i1l1654 0305                     i1l1576 051B  
                   i1l1568 0508                     i1l1498 0607                     u107_25 0500  
                   u108_25 0509                     u140_27 07A7                     u135_27 027C  
                   u136_27 0349                     u137_27 07B4                     u138_27 0626  
                   u139_27 064B                     _TMR0IE 005D                     _TMR0IF 005A  
          lcd_clear_line@i 0030             __CFG_PWRTE$OFF 0000              lcd_print@line 0031  
            lcd_print@size 0030              lcd_print@text 002E           __end_of_lcd_data 0713  
         __end_of_lcd_init 0488                     ___bmul 0775                     ___wmul 06CE  
                ??___awmod 0031                     _enable 0788                     _chores 0112  
                   _lastrb 0049                     _random 064F            ___awmod@divisor 002D  
                   _scores 003E            ___awmod@counter 0032                  ??_lcd_cmd 002B  
                   _strlen 0735          __end_ofi1___awmod 0520                     saved_w 007E  
                ??_testing 0022          __end_ofi1_lcd_cmd 064F       i1lcd_clear_line@line 0075  
  __end_of__initialization 0019        ___bmul@multiplicand 002A             __pcstackCOMMON 0070  
      __size_ofi1_lcd_data 0022              __end_of_users 026A                  ?i1___wmul 007A  
         ?i1_lcd_clear_all 0070                  ?i1_enable 0070                random@count 0046  
                ?i1_random 0070                  ?i1_strlen 0070         __size_of_lcd_print 0039  
 __end_ofi1_lcd_clear_line 06A7                 __pbssBANK0 003E                 __pmaintext 0360  
             ?i1_lcd_print 0074                    ?___bmul 002A                    ?___wmul 0034  
               __pintentry 0004                    ?_enable 0070            i1lcd_print@line 0077  
          i1lcd_print@size 0076            i1lcd_print@text 0074                    ?_random 0070  
               ??i1___wmul 007E                    ?_strlen 002A                 ??i1_enable 0070  
               ??i1_random 0070                 ??i1_strlen 0072                  ?_lcd_data 0070  
                ?_lcd_init 0070                 __stringtab 0100             random@original 002C  
             strlen@result 002F            __size_of___bmul 0013          __end_of_lcd_print 0559  
             strlen@string 002A                    ___awmod 0488            __size_of___wmul 0023  
          __size_of_enable 000E               i1random@rbit 0071            __size_of_random 002D  
    __end_of_lcd_clear_all 07A2                    __ptext1 0735                    __ptext2 064F  
                  __ptext3 0520                    __ptext4 0433                    __ptext5 05C1  
                  __ptext6 06F1                    __ptext7 0796                    __ptext8 058E  
                  __ptext9 0788                    _lcd_cmd 058E                    _lcd_off 004B  
          __size_of_strlen 0020           ___awmod@dividend 002F               ??i1_lcd_data 0071  
                  _testing 0276                 ??_lcd_data 002B                    clrloop0 07B9  
               ??_lcd_init 002E       end_of_initialization 0019         __end_ofi1_lcd_data 0735  
             __pstringtext 0100             i1strlen@result 0075      i1___wmul@multiplicand 007C  
           i1strlen@string 0070                    strlen@i 002D                  i1___awmod 04D5  
       lcd_clear_line@line 002F                  i1_lcd_cmd 0620             __end_of___bmul 0788  
     __size_ofi1_lcd_print 0035             __end_of___wmul 06F1             __end_of_enable 0796  
           __end_of_chores 025C             __end_of_random 067C             __end_of_strlen 0755  
      start_initialization 0013          __size_ofi1___wmul 0027          __size_ofi1_enable 000C  
               ?i1___awmod 0073          __size_ofi1_random 002F          ?i1_lcd_clear_line 0070  
                i1strlen@i 0073          __size_ofi1_strlen 0020    __size_of_lcd_clear_line 0030  
               ?i1_lcd_cmd 0070         ??i1_lcd_clear_line 0074           lcd_print@pointer 0034  
                 ??___bmul 002B                   ??___wmul 0038                   ??_enable 002A  
       i1___awmod@dividend 0075                   ??_random 002A                   ??_strlen 002C  
                ___latbits 0001              __pcstackBANK0 0020   __size_ofi1_lcd_clear_all 000A  
               random@rand 0047                 random@rbit 002B          __size_of_lcd_data 0022  
        __size_of_lcd_init 0055                   ?___awmod 002D           i1random@original 0072  
                _lcd_print 0520                   ?_lcd_cmd 0070                ??i1___awmod 0077  
                 ?_testing 0070                ??i1_lcd_cmd 0071          interrupt_function 0004  
           ___wmul@product 0038                  _long_text 0048                  clear_ram0 07B8  
                _space_pos 0042                  lcd_data@d 002D                 ?_lcd_print 002E  
              __stringbase 0112          ___wmul@multiplier 0034                   i1___wmul 06A7  
                 i1_enable 07A2                   i1_random 05F1                   i1_strlen 0755  
       i1lcd_print@pointer 007A             _lcd_clear_line 05C1          i1lcd_clear_line@i 0076  
   __size_of_lcd_clear_all 000C          ??i1_lcd_clear_all 0074          i1___awmod@divisor 0073  
        i1___awmod@counter 0078           __size_of___awmod 004D         __end_of__stringtab 0112  
         __size_of_lcd_cmd 0033     __end_of_lcd_clear_line 05F1                   __ptext10 06CE  
                 __ptext11 0775                   __ptext20 0620                   __ptext12 0488  
                 __ptext21 07A2                   __ptext13 0276                   __ptext22 06A7  
                 __ptext14 0755                   __ptext23 04D5                   __ptext15 05F1  
                 __ptext16 0559                   __ptext17 067C                   __ptext18 0713  
                 __ptext19 07AE                   _lcd_data 06F1                   _lcd_init 0433  
         __size_of_testing 00EA              __size_of_main 00D3              ??i1_lcd_print 0079  
__size_ofi1_lcd_clear_line 002B                   lcd_cmd@c 002D                ??_lcd_print 0033  
            _lcd_clear_all 0796            ?_lcd_clear_line 0070                   intlevel1 0000  
                stringcode 010A             ?_lcd_clear_all 0070        __end_ofi1_lcd_print 058E  
                 stringtab 0100         __CFG_FOSC$INTOSCIO 0000  
