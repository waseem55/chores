

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Nov 10 23:20:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F88 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  0105                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228                           
   229                           	psect	idataBANK0
   230  06D9                     __pidataBANK0:	
   231                           
   232                           ;initializer for _space_pos
   233  06D9  3410               	retlw	16
   234  06DA  3400               	retlw	0
   235                           
   236                           	psect	stringtext
   237  0100                     __pstringtext:	
   238  0100                     stringtab:	
   239  0100                     __stringtab:	
   240                           
   241                           ;	String table - string pointers are 2 bytes each
   242  0100  1BFF               	btfsc	btemp+1,7
   243  0101  290A               	ljmp	stringcode
   244  0102  1383               	bcf	3,7
   245  0103  187F               	btfsc	btemp+1,0
   246  0104  1783               	bsf	3,7
   247  0105  0800               	movf	0,w
   248  0106  0A84               	incf	4,f
   249  0107  1903               	skipnz
   250  0108  0AFF               	incf	btemp+1,f
   251  0109  0008               	return
   252  010A                     stringcode:	
   253  010A  087F               	movf	btemp+1,w
   254  010B  397F               	andlw	127
   255  010C  008A               	movwf	10
   256  010D  0804               	movf	4,w
   257  010E  0A84               	incf	4,f
   258  010F  1903               	skipnz
   259  0110  0AFF               	incf	btemp+1,f
   260  0111  0082               	movwf	2
   261  0112                     __stringbase:	
   262  0112                     __end_of__stringtab:	
   263  0112                     _chores:	
   264  0112  3456               	retlw	86
   265  0113  3461               	retlw	97
   266  0114  3463               	retlw	99
   267  0115  3475               	retlw	117
   268  0116  3475               	retlw	117
   269  0117  346D               	retlw	109
   270  0118  3400               	retlw	0
   271  0119  3400               	retlw	0
   272  011A  3400               	retlw	0
   273  011B  3400               	retlw	0
   274  011C  3400               	retlw	0
   275  011D  3400               	retlw	0
   276  011E  3400               	retlw	0
   277  011F  3400               	retlw	0
   278  0120  3400               	retlw	0
   279  0121  3400               	retlw	0
   280  0122  3400               	retlw	0
   281  0123  3400               	retlw	0
   282  0124  3400               	retlw	0
   283  0125  3400               	retlw	0
   284  0126  3400               	retlw	0
   285  0127  3400               	retlw	0
   286  0128  3400               	retlw	0
   287  0129  3400               	retlw	0
   288  012A  3400               	retlw	0
   289  012B  3400               	retlw	0
   290  012C  3400               	retlw	0
   291  012D  3400               	retlw	0
   292  012E  3400               	retlw	0
   293  012F  3400               	retlw	0
   294  0130  3443               	retlw	67
   295  0131  346C               	retlw	108
   296  0132  3465               	retlw	101
   297  0133  3461               	retlw	97
   298  0134  346E               	retlw	110
   299  0135  3420               	retlw	32
   300  0136  3462               	retlw	98
   301  0137  3461               	retlw	97
   302  0138  3474               	retlw	116
   303  0139  3468               	retlw	104
   304  013A  3472               	retlw	114
   305  013B  346F               	retlw	111
   306  013C  346F               	retlw	111
   307  013D  346D               	retlw	109
   308  013E  3400               	retlw	0
   309  013F  3400               	retlw	0
   310  0140  3400               	retlw	0
   311  0141  3400               	retlw	0
   312  0142  3400               	retlw	0
   313  0143  3400               	retlw	0
   314  0144  3400               	retlw	0
   315  0145  3400               	retlw	0
   316  0146  3400               	retlw	0
   317  0147  3400               	retlw	0
   318  0148  3400               	retlw	0
   319  0149  3400               	retlw	0
   320  014A  3400               	retlw	0
   321  014B  3400               	retlw	0
   322  014C  3400               	retlw	0
   323  014D  3400               	retlw	0
   324  014E  344D               	retlw	77
   325  014F  346F               	retlw	111
   326  0150  3470               	retlw	112
   327  0151  3420               	retlw	32
   328  0152  3466               	retlw	102
   329  0153  346C               	retlw	108
   330  0154  346F               	retlw	111
   331  0155  346F               	retlw	111
   332  0156  3472               	retlw	114
   333  0157  3400               	retlw	0
   334  0158  3400               	retlw	0
   335  0159  3400               	retlw	0
   336  015A  3400               	retlw	0
   337  015B  3400               	retlw	0
   338  015C  3400               	retlw	0
   339  015D  3400               	retlw	0
   340  015E  3400               	retlw	0
   341  015F  3400               	retlw	0
   342  0160  3400               	retlw	0
   343  0161  3400               	retlw	0
   344  0162  3400               	retlw	0
   345  0163  3400               	retlw	0
   346  0164  3400               	retlw	0
   347  0165  3400               	retlw	0
   348  0166  3400               	retlw	0
   349  0167  3400               	retlw	0
   350  0168  3400               	retlw	0
   351  0169  3400               	retlw	0
   352  016A  3400               	retlw	0
   353  016B  3400               	retlw	0
   354  016C  3457               	retlw	87
   355  016D  3461               	retlw	97
   356  016E  3473               	retlw	115
   357  016F  3468               	retlw	104
   358  0170  3420               	retlw	32
   359  0171  3462               	retlw	98
   360  0172  3465               	retlw	101
   361  0173  3464               	retlw	100
   362  0174  3420               	retlw	32
   363  0175  3473               	retlw	115
   364  0176  3468               	retlw	104
   365  0177  3465               	retlw	101
   366  0178  3465               	retlw	101
   367  0179  3474               	retlw	116
   368  017A  3473               	retlw	115
   369  017B  3400               	retlw	0
   370  017C  3400               	retlw	0
   371  017D  3400               	retlw	0
   372  017E  3400               	retlw	0
   373  017F  3400               	retlw	0
   374  0180  3400               	retlw	0
   375  0181  3400               	retlw	0
   376  0182  3400               	retlw	0
   377  0183  3400               	retlw	0
   378  0184  3400               	retlw	0
   379  0185  3400               	retlw	0
   380  0186  3400               	retlw	0
   381  0187  3400               	retlw	0
   382  0188  3400               	retlw	0
   383  0189  3400               	retlw	0
   384  018A  3457               	retlw	87
   385  018B  3461               	retlw	97
   386  018C  3473               	retlw	115
   387  018D  3468               	retlw	104
   388  018E  3420               	retlw	32
   389  018F  3463               	retlw	99
   390  0190  3475               	retlw	117
   391  0191  3472               	retlw	114
   392  0192  3474               	retlw	116
   393  0193  3461               	retlw	97
   394  0194  3469               	retlw	105
   395  0195  346E               	retlw	110
   396  0196  3473               	retlw	115
   397  0197  3400               	retlw	0
   398  0198  3400               	retlw	0
   399  0199  3400               	retlw	0
   400  019A  3400               	retlw	0
   401  019B  3400               	retlw	0
   402  019C  3400               	retlw	0
   403  019D  3400               	retlw	0
   404  019E  3400               	retlw	0
   405  019F  3400               	retlw	0
   406  01A0  3400               	retlw	0
   407  01A1  3400               	retlw	0
   408  01A2  3400               	retlw	0
   409  01A3  3400               	retlw	0
   410  01A4  3400               	retlw	0
   411  01A5  3400               	retlw	0
   412  01A6  3400               	retlw	0
   413  01A7  3400               	retlw	0
   414  01A8  3444               	retlw	68
   415  01A9  3475               	retlw	117
   416  01AA  3473               	retlw	115
   417  01AB  3474               	retlw	116
   418  01AC  3469               	retlw	105
   419  01AD  346E               	retlw	110
   420  01AE  3467               	retlw	103
   421  01AF  3400               	retlw	0
   422  01B0  3400               	retlw	0
   423  01B1  3400               	retlw	0
   424  01B2  3400               	retlw	0
   425  01B3  3400               	retlw	0
   426  01B4  3400               	retlw	0
   427  01B5  3400               	retlw	0
   428  01B6  3400               	retlw	0
   429  01B7  3400               	retlw	0
   430  01B8  3400               	retlw	0
   431  01B9  3400               	retlw	0
   432  01BA  3400               	retlw	0
   433  01BB  3400               	retlw	0
   434  01BC  3400               	retlw	0
   435  01BD  3400               	retlw	0
   436  01BE  3400               	retlw	0
   437  01BF  3400               	retlw	0
   438  01C0  3400               	retlw	0
   439  01C1  3400               	retlw	0
   440  01C2  3400               	retlw	0
   441  01C3  3400               	retlw	0
   442  01C4  3400               	retlw	0
   443  01C5  3400               	retlw	0
   444  01C6  3443               	retlw	67
   445  01C7  346C               	retlw	108
   446  01C8  3465               	retlw	101
   447  01C9  3461               	retlw	97
   448  01CA  346E               	retlw	110
   449  01CB  3420               	retlw	32
   450  01CC  346D               	retlw	109
   451  01CD  3469               	retlw	105
   452  01CE  3463               	retlw	99
   453  01CF  3472               	retlw	114
   454  01D0  346F               	retlw	111
   455  01D1  3477               	retlw	119
   456  01D2  3461               	retlw	97
   457  01D3  3476               	retlw	118
   458  01D4  3465               	retlw	101
   459  01D5  3400               	retlw	0
   460  01D6  3400               	retlw	0
   461  01D7  3400               	retlw	0
   462  01D8  3400               	retlw	0
   463  01D9  3400               	retlw	0
   464  01DA  3400               	retlw	0
   465  01DB  3400               	retlw	0
   466  01DC  3400               	retlw	0
   467  01DD  3400               	retlw	0
   468  01DE  3400               	retlw	0
   469  01DF  3400               	retlw	0
   470  01E0  3400               	retlw	0
   471  01E1  3400               	retlw	0
   472  01E2  3400               	retlw	0
   473  01E3  3400               	retlw	0
   474  01E4  3453               	retlw	83
   475  01E5  3463               	retlw	99
   476  01E6  3472               	retlw	114
   477  01E7  3475               	retlw	117
   478  01E8  3462               	retlw	98
   479  01E9  3420               	retlw	32
   480  01EA  3464               	retlw	100
   481  01EB  346F               	retlw	111
   482  01EC  346F               	retlw	111
   483  01ED  3472               	retlw	114
   484  01EE  3473               	retlw	115
   485  01EF  3420               	retlw	32
   486  01F0  3461               	retlw	97
   487  01F1  346E               	retlw	110
   488  01F2  3464               	retlw	100
   489  01F3  3420               	retlw	32
   490  01F4  3463               	retlw	99
   491  01F5  3461               	retlw	97
   492  01F6  3462               	retlw	98
   493  01F7  3469               	retlw	105
   494  01F8  346E               	retlw	110
   495  01F9  3465               	retlw	101
   496  01FA  3474               	retlw	116
   497  01FB  3473               	retlw	115
   498  01FC  3400               	retlw	0
   499  01FD  3400               	retlw	0
   500  01FE  3400               	retlw	0
   501  01FF  3400               	retlw	0
   502  0200  3400               	retlw	0
   503  0201  3400               	retlw	0
   504  0202  344F               	retlw	79
   505  0203  3472               	retlw	114
   506  0204  3467               	retlw	103
   507  0205  3461               	retlw	97
   508  0206  346E               	retlw	110
   509  0207  3469               	retlw	105
   510  0208  347A               	retlw	122
   511  0209  3465               	retlw	101
   512  020A  3420               	retlw	32
   513  020B  3463               	retlw	99
   514  020C  346C               	retlw	108
   515  020D  346F               	retlw	111
   516  020E  3473               	retlw	115
   517  020F  3465               	retlw	101
   518  0210  3474               	retlw	116
   519  0211  3400               	retlw	0
   520  0212  3400               	retlw	0
   521  0213  3400               	retlw	0
   522  0214  3400               	retlw	0
   523  0215  3400               	retlw	0
   524  0216  3400               	retlw	0
   525  0217  3400               	retlw	0
   526  0218  3400               	retlw	0
   527  0219  3400               	retlw	0
   528  021A  3400               	retlw	0
   529  021B  3400               	retlw	0
   530  021C  3400               	retlw	0
   531  021D  3400               	retlw	0
   532  021E  3400               	retlw	0
   533  021F  3400               	retlw	0
   534  0220  3443               	retlw	67
   535  0221  346C               	retlw	108
   536  0222  3465               	retlw	101
   537  0223  3461               	retlw	97
   538  0224  346E               	retlw	110
   539  0225  3420               	retlw	32
   540  0226  3475               	retlw	117
   541  0227  346E               	retlw	110
   542  0228  3464               	retlw	100
   543  0229  3465               	retlw	101
   544  022A  3472               	retlw	114
   545  022B  3420               	retlw	32
   546  022C  3473               	retlw	115
   547  022D  3469               	retlw	105
   548  022E  346E               	retlw	110
   549  022F  346B               	retlw	107
   550  0230  3473               	retlw	115
   551  0231  3400               	retlw	0
   552  0232  3400               	retlw	0
   553  0233  3400               	retlw	0
   554  0234  3400               	retlw	0
   555  0235  3400               	retlw	0
   556  0236  3400               	retlw	0
   557  0237  3400               	retlw	0
   558  0238  3400               	retlw	0
   559  0239  3400               	retlw	0
   560  023A  3400               	retlw	0
   561  023B  3400               	retlw	0
   562  023C  3400               	retlw	0
   563  023D  3400               	retlw	0
   564  023E  3443               	retlw	67
   565  023F  346C               	retlw	108
   566  0240  3465               	retlw	101
   567  0241  3461               	retlw	97
   568  0242  346E               	retlw	110
   569  0243  3420               	retlw	32
   570  0244  3466               	retlw	102
   571  0245  3472               	retlw	114
   572  0246  3469               	retlw	105
   573  0247  3464               	retlw	100
   574  0248  3467               	retlw	103
   575  0249  3465               	retlw	101
   576  024A  3400               	retlw	0
   577  024B  3400               	retlw	0
   578  024C  3400               	retlw	0
   579  024D  3400               	retlw	0
   580  024E  3400               	retlw	0
   581  024F  3400               	retlw	0
   582  0250  3400               	retlw	0
   583  0251  3400               	retlw	0
   584  0252  3400               	retlw	0
   585  0253  3400               	retlw	0
   586  0254  3400               	retlw	0
   587  0255  3400               	retlw	0
   588  0256  3400               	retlw	0
   589  0257  3400               	retlw	0
   590  0258  3400               	retlw	0
   591  0259  3400               	retlw	0
   592  025A  3400               	retlw	0
   593  025B  3400               	retlw	0
   594  025C                     __end_of_chores:	
   595  025C                     _users:	
   596  025C  3457               	retlw	87
   597  025D  3461               	retlw	97
   598  025E  3473               	retlw	115
   599  025F  3465               	retlw	101
   600  0260  3465               	retlw	101
   601  0261  346D               	retlw	109
   602  0262  3400               	retlw	0
   603  0263  3448               	retlw	72
   604  0264  3469               	retlw	105
   605  0265  3462               	retlw	98
   606  0266  3461               	retlw	97
   607  0267  3400               	retlw	0
   608  0268  3400               	retlw	0
   609  0269  3400               	retlw	0
   610  026A                     __end_of_users:	
   611  000E                     _TMR1	set	14
   612  0001                     _TMR0	set	1
   613  0006                     _PORTB	set	6
   614  0005                     _PORTA	set	5
   615  002F                     _RA7	set	47
   616  005A                     _TMR0IF	set	90
   617  005F                     _GIE	set	95
   618  005D                     _TMR0IE	set	93
   619  005C                     _INT0IE	set	92
   620  0059                     _INT0IF	set	89
   621  0032                     _RB2	set	50
   622  0031                     _RB1	set	49
   623  0086                     _TRISB	set	134
   624  0085                     _TRISA	set	133
   625  0408                     _PS0	set	1032
   626  0409                     _PS1	set	1033
   627  040A                     _PS2	set	1034
   628  040B                     _PSA	set	1035
   629  040D                     _T0CS	set	1037
   630  026A                     STR_1:	
   631  026A  3473               	retlw	115	;'s'
   632  026B  346C               	retlw	108	;'l'
   633  026C  3465               	retlw	101	;'e'
   634  026D  3465               	retlw	101	;'e'
   635  026E  3470               	retlw	112	;'p'
   636  026F  3420               	retlw	32	;' '
   637  0270  3474               	retlw	116	;'t'
   638  0271  3469               	retlw	105	;'i'
   639  0272  346D               	retlw	109	;'m'
   640  0273  3465               	retlw	101	;'e'
   641  0274  3421               	retlw	33	;'!'
   642  0275  3400               	retlw	0
   643                           
   644                           ; #config settings
   645  0000                     
   646                           	psect	cinit
   647  0013                     start_initialization:	
   648  0013                     __initialization:	
   649                           
   650                           ; Initialize objects allocated to BANK0
   651  0013  118A  26D9  118A   	fcall	__pidataBANK0	;fetch initializer
   652  0016  00C5               	movwf	__pdataBANK0& (0+127)
   653  0017  118A  26DA         	fcall	__pidataBANK0+1	;fetch initializer
   654  0019  00C6               	movwf	(__pdataBANK0+1)& (0+127)
   655                           
   656                           ; Clear objects allocated to BANK0
   657  001A  01BA               	clrf	__pbssBANK0& (0+127)
   658  001B  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   659  001C  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   660  001D  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   661  001E  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   662  001F  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   663  0020  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   664  0021  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   665  0022  01C2               	clrf	(__pbssBANK0+8)& (0+127)
   666  0023  01C3               	clrf	(__pbssBANK0+9)& (0+127)
   667  0024  01C4               	clrf	(__pbssBANK0+10)& (0+127)
   668                           
   669                           ; Clear objects allocated to COMMON
   670  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   671  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   672  0027                     end_of_initialization:	
   673                           ;End of C runtime variable initialization code
   674                           
   675  0027                     __end_of__initialization:	
   676  0027  0183               	clrf	3
   677  0028  118A  2A76         	ljmp	_main	;jump to C main() function
   678                           
   679                           	psect	bssCOMMON
   680  007C                     __pbssCOMMON:	
   681  007C                     _lastrb:	
   682  007C                     	ds	1
   683  007D                     _lcd_off:	
   684  007D                     	ds	1
   685                           
   686                           	psect	bssBANK0
   687  003A                     __pbssBANK0:	
   688  003A                     _scores:	
   689  003A                     	ds	2
   690  003C                     _text:	
   691  003C                     	ds	2
   692  003E                     _rand:	
   693  003E                     	ds	2
   694  0040                     random@count:	
   695  0040                     	ds	1
   696  0041                     random@rand:	
   697  0041                     	ds	1
   698  0042                     _long_text:	
   699  0042                     	ds	1
   700  0043                     _user:	
   701  0043                     	ds	1
   702  0044                     _btn_pressed:	
   703  0044                     	ds	1
   704                           
   705                           	psect	dataBANK0
   706  0045                     __pdataBANK0:	
   707  0045                     _space_pos:	
   708  0045                     	ds	2
   709                           
   710                           	psect	cstackCOMMON
   711  0070                     __pcstackCOMMON:	
   712  0070                     ?_lcd_cmd:	
   713  0070                     ?_lcd_data:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_enable:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_random:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_lcd_clear_all:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_lcd_clear_line:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_lcd_init:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_main:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_testing:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?i1_lcd_clear_all:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?i1_lcd_clear_line:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?i1_lcd_cmd:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?i1_lcd_data:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?i1_enable:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??i1_enable:	
   753                           ; 1 bytes @ 0x0
   754                           
   755                           
   756                           ; 1 bytes @ 0x0
   757  0070                     	ds	1
   758  0071                     ??i1_lcd_cmd:	
   759  0071                     ??i1_lcd_data:	
   760                           ; 1 bytes @ 0x1
   761                           
   762                           
   763                           ; 1 bytes @ 0x1
   764  0071                     	ds	2
   765  0073                     i1lcd_cmd@c:	
   766  0073                     i1lcd_data@d:	
   767                           ; 1 bytes @ 0x3
   768                           
   769                           
   770                           ; 1 bytes @ 0x3
   771  0073                     	ds	1
   772  0074                     ?i1_lcd_print:	
   773  0074                     ??i1_lcd_clear_all:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     ??i1_lcd_clear_line:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     i1lcd_print@text:	
   780                           ; 1 bytes @ 0x4
   781                           
   782                           
   783                           ; 2 bytes @ 0x4
   784  0074                     	ds	1
   785  0075                     i1lcd_clear_line@line:	
   786                           
   787                           ; 1 bytes @ 0x5
   788  0075                     	ds	1
   789  0076                     i1lcd_print@size:	
   790  0076                     i1lcd_clear_line@i:	
   791                           ; 1 bytes @ 0x6
   792                           
   793                           
   794                           ; 2 bytes @ 0x6
   795  0076                     	ds	1
   796  0077                     i1lcd_print@line:	
   797                           
   798                           ; 1 bytes @ 0x7
   799  0077                     	ds	1
   800  0078                     i1lcd_print@pos:	
   801                           
   802                           ; 1 bytes @ 0x8
   803  0078                     	ds	1
   804  0079                     ??i1_lcd_print:	
   805                           
   806                           ; 1 bytes @ 0x9
   807  0079                     	ds	1
   808  007A                     i1lcd_print@pointer:	
   809                           
   810                           ; 2 bytes @ 0xA
   811  007A                     	ds	2
   812                           
   813                           	psect	cstackBANK0
   814  0020                     __pcstackBANK0:	
   815  0020                     ??_testing:	
   816                           
   817                           ; 1 bytes @ 0x0
   818  0020                     	ds	6
   819  0026                     ??_enable:	
   820  0026                     ??_random:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0026                     ?_strlen:	
   824                           ; 1 bytes @ 0x6
   825                           
   826  0026                     ?___bmul:	
   827                           ; 1 bytes @ 0x6
   828                           
   829  0026                     ___bmul@multiplicand:	
   830                           ; 1 bytes @ 0x6
   831                           
   832  0026                     strlen@string:	
   833                           ; 1 bytes @ 0x6
   834                           
   835                           
   836                           ; 2 bytes @ 0x6
   837  0026                     	ds	1
   838  0027                     ??_lcd_cmd:	
   839  0027                     ??_lcd_data:	
   840                           ; 1 bytes @ 0x7
   841                           
   842  0027                     ??___bmul:	
   843                           ; 1 bytes @ 0x7
   844                           
   845  0027                     random@rbit:	
   846                           ; 1 bytes @ 0x7
   847                           
   848                           
   849                           ; 1 bytes @ 0x7
   850  0027                     	ds	1
   851  0028                     ??_strlen:	
   852  0028                     random@original:	
   853                           ; 1 bytes @ 0x8
   854                           
   855  0028                     ___bmul@product:	
   856                           ; 1 bytes @ 0x8
   857                           
   858                           
   859                           ; 1 bytes @ 0x8
   860  0028                     	ds	1
   861  0029                     ?___awmod:	
   862  0029                     lcd_cmd@c:	
   863                           ; 2 bytes @ 0x9
   864                           
   865  0029                     lcd_data@d:	
   866                           ; 1 bytes @ 0x9
   867                           
   868  0029                     ___bmul@multiplier:	
   869                           ; 1 bytes @ 0x9
   870                           
   871  0029                     strlen@i:	
   872                           ; 1 bytes @ 0x9
   873                           
   874  0029                     ___awmod@divisor:	
   875                           ; 2 bytes @ 0x9
   876                           
   877                           
   878                           ; 2 bytes @ 0x9
   879  0029                     	ds	1
   880  002A                     ?_lcd_print:	
   881  002A                     ??_lcd_clear_all:	
   882                           ; 1 bytes @ 0xA
   883                           
   884  002A                     ??_lcd_clear_line:	
   885                           ; 1 bytes @ 0xA
   886                           
   887  002A                     ??_lcd_init:	
   888                           ; 1 bytes @ 0xA
   889                           
   890  002A                     lcd_print@text:	
   891                           ; 1 bytes @ 0xA
   892                           
   893                           
   894                           ; 2 bytes @ 0xA
   895  002A                     	ds	1
   896  002B                     lcd_clear_line@line:	
   897  002B                     strlen@result:	
   898                           ; 1 bytes @ 0xB
   899                           
   900  002B                     ___awmod@dividend:	
   901                           ; 1 bytes @ 0xB
   902                           
   903                           
   904                           ; 2 bytes @ 0xB
   905  002B                     	ds	1
   906  002C                     lcd_print@size:	
   907  002C                     lcd_clear_line@i:	
   908                           ; 1 bytes @ 0xC
   909                           
   910                           
   911                           ; 2 bytes @ 0xC
   912  002C                     	ds	1
   913  002D                     ??___awmod:	
   914  002D                     lcd_print@line:	
   915                           ; 1 bytes @ 0xD
   916                           
   917                           
   918                           ; 1 bytes @ 0xD
   919  002D                     	ds	1
   920  002E                     lcd_print@pos:	
   921  002E                     ___awmod@counter:	
   922                           ; 1 bytes @ 0xE
   923                           
   924                           
   925                           ; 1 bytes @ 0xE
   926  002E                     	ds	1
   927  002F                     ??_lcd_print:	
   928  002F                     ___awmod@sign:	
   929                           ; 1 bytes @ 0xF
   930                           
   931                           
   932                           ; 1 bytes @ 0xF
   933  002F                     	ds	1
   934  0030                     ?___wmul:	
   935  0030                     lcd_print@pointer:	
   936                           ; 2 bytes @ 0x10
   937                           
   938  0030                     ___wmul@multiplier:	
   939                           ; 2 bytes @ 0x10
   940                           
   941                           
   942                           ; 2 bytes @ 0x10
   943  0030                     	ds	2
   944  0032                     ___wmul@multiplicand:	
   945                           
   946                           ; 2 bytes @ 0x12
   947  0032                     	ds	2
   948  0034                     ??___wmul:	
   949  0034                     ___wmul@product:	
   950                           ; 1 bytes @ 0x14
   951                           
   952                           
   953                           ; 2 bytes @ 0x14
   954  0034                     	ds	2
   955  0036                     ??_main:	
   956                           
   957                           ; 1 bytes @ 0x16
   958  0036                     	ds	4
   959                           
   960                           	psect	maintext
   961  0276                     __pmaintext:	
   962 ;;
   963 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   964 ;;
   965 ;; *************** function _main *****************
   966 ;; Defined at:
   967 ;;		line 56 in file "Main.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : B00/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       4       0       0       0
   984 ;;      Totals:         0       4       0       0       0
   985 ;;Total ram usage:        4 bytes
   986 ;; Hardware stack levels required when called:    7
   987 ;; This function calls:
   988 ;;		___awmod
   989 ;;		___bmul
   990 ;;		___wmul
   991 ;;		_lcd_clear_all
   992 ;;		_lcd_clear_line
   993 ;;		_lcd_init
   994 ;;		_lcd_print
   995 ;;		_random
   996 ;;		_strlen
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _main
  1004  0276                     _main:	
  1005                           
  1006                           ;Main.c: 58:     TRISA = 0xc0;
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1010  0276  30C0               	movlw	192
  1011  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1012  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1013  0279  0085               	movwf	5	;volatile
  1014                           
  1015                           ;Main.c: 59:     TRISB = 0x01;
  1016  027A  3001               	movlw	1
  1017  027B  0086               	movwf	6	;volatile
  1018                           
  1019                           ;Main.c: 60:     PORTA = 0x00;
  1020  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1021  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1022  027E  0185               	clrf	5	;volatile
  1023                           
  1024                           ;Main.c: 61:     PORTB = 0x00;
  1025  027F  0186               	clrf	6	;volatile
  1026                           
  1027                           ;Main.c: 63:     INT0IF = 0;
  1028  0280  108B               	bcf	11,1	;volatile
  1029                           
  1030                           ;Main.c: 64:     INT0IE = 1;
  1031  0281  160B               	bsf	11,4	;volatile
  1032                           
  1033                           ;Main.c: 65:     T0CS = 0;
  1034  0282  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0283  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0284  1281               	bcf	1,5	;volatile
  1037                           
  1038                           ;Main.c: 66:     PSA = 0;
  1039  0285  1181               	bcf	1,3	;volatile
  1040                           
  1041                           ;Main.c: 67:     PS2 = 1;
  1042  0286  1501               	bsf	1,2	;volatile
  1043                           
  1044                           ;Main.c: 68:     PS1 = 1;
  1045  0287  1481               	bsf	1,1	;volatile
  1046                           
  1047                           ;Main.c: 69:     PS0 = 1;
  1048  0288  1401               	bsf	1,0	;volatile
  1049                           
  1050                           ;Main.c: 70:     TMR0IE = 0;
  1051  0289  128B               	bcf	11,5	;volatile
  1052                           
  1053                           ;Main.c: 72:     GIE = 1;
  1054  028A  178B               	bsf	11,7	;volatile
  1055                           
  1056                           ;Main.c: 75:     lcd_init();
  1057  028B  118A  23C4  118A   	fcall	_lcd_init
  1058                           
  1059                           ;Main.c: 77:     rand = (random()%10);
  1060  028E  300A               	movlw	10
  1061  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0291  00A9               	movwf	___awmod@divisor
  1064  0292  3000               	movlw	0
  1065  0293  00AA               	movwf	___awmod@divisor+1
  1066  0294  118A  25B7  118A   	fcall	_random
  1067  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0299  00B6               	movwf	??_main
  1070  029A  01B7               	clrf	??_main+1
  1071  029B  0836               	movf	??_main,w
  1072  029C  00AB               	movwf	___awmod@dividend
  1073  029D  0837               	movf	??_main+1,w
  1074  029E  00AC               	movwf	___awmod@dividend+1
  1075  029F  118A  246A  118A   	fcall	___awmod
  1076  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1077  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1078  02A4  082A               	movf	?___awmod+1,w
  1079  02A5  00BF               	movwf	_rand+1
  1080  02A6  0829               	movf	?___awmod,w
  1081  02A7  00BE               	movwf	_rand
  1082                           
  1083                           ;Main.c: 78:     text = &chores[rand % 11][0];
  1084  02A8  083F               	movf	_rand+1,w
  1085  02A9  00AC               	movwf	___awmod@dividend+1
  1086  02AA  083E               	movf	_rand,w
  1087  02AB  00AB               	movwf	___awmod@dividend
  1088  02AC  300B               	movlw	11
  1089  02AD  00A9               	movwf	___awmod@divisor
  1090  02AE  3000               	movlw	0
  1091  02AF  00AA               	movwf	___awmod@divisor+1
  1092  02B0  118A  246A  118A   	fcall	___awmod
  1093  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1094  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1095  02B5  082A               	movf	?___awmod+1,w
  1096  02B6  00B1               	movwf	___wmul@multiplier+1
  1097  02B7  0829               	movf	?___awmod,w
  1098  02B8  00B0               	movwf	___wmul@multiplier
  1099  02B9  301E               	movlw	30
  1100  02BA  00B2               	movwf	___wmul@multiplicand
  1101  02BB  3000               	movlw	0
  1102  02BC  00B3               	movwf	___wmul@multiplicand+1
  1103  02BD  118A  260F  118A   	fcall	___wmul
  1104  02C0  3012               	movlw	low (_chores| (0+32768))
  1105  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1106  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1107  02C3  00B6               	movwf	??_main
  1108  02C4  3081               	movlw	high (_chores| (0+32768))
  1109  02C5  00B7               	movwf	??_main+1
  1110  02C6  0830               	movf	?___wmul,w
  1111  02C7  0736               	addwf	??_main,w
  1112  02C8  00B8               	movwf	??_main+2
  1113  02C9  0831               	movf	?___wmul+1,w
  1114  02CA  1803               	skipnc
  1115  02CB  0A31               	incf	?___wmul+1,w
  1116  02CC  0737               	addwf	??_main+1,w
  1117  02CD  00B9               	movwf	??_main+3
  1118  02CE  0838               	movf	??_main+2,w
  1119  02CF  00BC               	movwf	_text
  1120  02D0  0839               	movf	??_main+3,w
  1121  02D1  00BD               	movwf	_text+1
  1122  02D2                     l1405:	
  1123                           
  1124                           ;Main.c: 81:         lcd_clear_all();
  1125  02D2  118A  26B7  118A   	fcall	_lcd_clear_all
  1126                           
  1127                           ;Main.c: 82:         if (strlen(text) > 16)
  1128  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1129  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1130  02D7  083C               	movf	_text,w
  1131  02D8  00A6               	movwf	strlen@string
  1132  02D9  083D               	movf	_text+1,w
  1133  02DA  00A7               	movwf	strlen@string+1
  1134  02DB  118A  2676  118A   	fcall	_strlen
  1135  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1136  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1137  02E0  00B6               	movwf	??_main
  1138  02E1  3011               	movlw	17
  1139  02E2  0236               	subwf	??_main,w
  1140  02E3  1C03               	skipc
  1141  02E4  2B04               	goto	l1417
  1142                           
  1143                           ;Main.c: 83:             {;Main.c: 84:                 for (space_pos = 16; text[space_p
      +                          os] != ' ' && space_pos != 0; space_pos--);
  1144  02E5  3010               	movlw	16
  1145  02E6  00C5               	movwf	_space_pos
  1146  02E7  3000               	movlw	0
  1147  02E8  00C6               	movwf	_space_pos+1
  1148  02E9  2AF4               	goto	l1413
  1149  02EA                     l1415:	
  1150  02EA  0845               	movf	_space_pos,w
  1151  02EB  0446               	iorwf	_space_pos+1,w
  1152  02EC  1903               	btfsc	3,2
  1153  02ED  2B02               	goto	l125
  1154  02EE  30FF               	movlw	255
  1155  02EF  07C5               	addwf	_space_pos,f
  1156  02F0  1803               	skipnc
  1157  02F1  0AC6               	incf	_space_pos+1,f
  1158  02F2  30FF               	movlw	255
  1159  02F3  07C6               	addwf	_space_pos+1,f
  1160  02F4                     l1413:	
  1161  02F4  0845               	movf	_space_pos,w
  1162  02F5  073C               	addwf	_text,w
  1163  02F6  0084               	movwf	4
  1164  02F7  0846               	movf	_space_pos+1,w
  1165  02F8  1803               	skipnc
  1166  02F9  0A46               	incf	_space_pos+1,w
  1167  02FA  073D               	addwf	_text+1,w
  1168  02FB  00FF               	movwf	127
  1169  02FC  118A  2100  118A   	fcall	stringtab
  1170  02FF  3A20               	xorlw	32
  1171  0300  1D03               	btfss	3,2
  1172  0301  2AEA               	goto	l1415
  1173  0302                     l125:	
  1174                           
  1175                           ;Main.c: 85:                 long_text = 1;
  1176  0302  01C2               	clrf	_long_text
  1177  0303  0AC2               	incf	_long_text,f
  1178  0304                     l1417:	
  1179                           
  1180                           ;Main.c: 87:         lcd_print(text, space_pos, 0, 0);
  1181  0304  083C               	movf	_text,w
  1182  0305  00AA               	movwf	lcd_print@text
  1183  0306  083D               	movf	_text+1,w
  1184  0307  00AB               	movwf	lcd_print@text+1
  1185  0308  0845               	movf	_space_pos,w
  1186  0309  00B6               	movwf	??_main
  1187  030A  0836               	movf	??_main,w
  1188  030B  00AC               	movwf	lcd_print@size
  1189  030C  01AD               	clrf	lcd_print@line
  1190  030D  01AE               	clrf	lcd_print@pos
  1191  030E  118A  24B7  118A   	fcall	_lcd_print
  1192                           
  1193                           ;Main.c: 88:         lcd_print(&users[user][0], 6, 1, 0);
  1194  0311  3007               	movlw	7
  1195  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0314  00B6               	movwf	??_main
  1198  0315  0836               	movf	??_main,w
  1199  0316  00A6               	movwf	___bmul@multiplicand
  1200  0317  0843               	movf	_user,w
  1201  0318  118A  2696  118A   	fcall	___bmul
  1202  031B  3E5C               	addlw	low (_users| (0+32768))
  1203  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1204  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1205  031E  00B7               	movwf	??_main+1
  1206  031F  3082               	movlw	high (_users| (0+32768))
  1207  0320  1803               	skipnc
  1208  0321  3E01               	addlw	1
  1209  0322  00B8               	movwf	??_main+2
  1210  0323  0837               	movf	??_main+1,w
  1211  0324  00AA               	movwf	lcd_print@text
  1212  0325  0838               	movf	??_main+2,w
  1213  0326  00AB               	movwf	lcd_print@text+1
  1214  0327  3006               	movlw	6
  1215  0328  00B9               	movwf	??_main+3
  1216  0329  0839               	movf	??_main+3,w
  1217  032A  00AC               	movwf	lcd_print@size
  1218  032B  01AD               	clrf	lcd_print@line
  1219  032C  0AAD               	incf	lcd_print@line,f
  1220  032D  01AE               	clrf	lcd_print@pos
  1221  032E  118A  24B7  118A   	fcall	_lcd_print
  1222                           
  1223                           ;Main.c: 89:         if (strlen(text) > 16)
  1224  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0333  083C               	movf	_text,w
  1227  0334  00A6               	movwf	strlen@string
  1228  0335  083D               	movf	_text+1,w
  1229  0336  00A7               	movwf	strlen@string+1
  1230  0337  118A  2676  118A   	fcall	_strlen
  1231  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1232  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1233  033C  00B6               	movwf	??_main
  1234  033D  3011               	movlw	17
  1235  033E  0236               	subwf	??_main,w
  1236  033F  1C03               	skipc
  1237  0340  2B6B               	goto	l1425
  1238                           
  1239                           ;Main.c: 90:         {;Main.c: 91:             _delay((unsigned long)((300)*(31000/4000.
      +                          0)));
  1240  0341  3004               	movlw	4
  1241  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0344  00B7               	movwf	??_main+1
  1244  0345  3002               	movlw	2
  1245  0346  00B6               	movwf	??_main
  1246  0347                     u897:	
  1247  0347  0BB6               	decfsz	??_main,f
  1248  0348  2B47               	goto	u897
  1249  0349  0BB7               	decfsz	??_main+1,f
  1250  034A  2B47               	goto	u897
  1251  034B  2B4C               	nop2
  1252                           
  1253                           ;Main.c: 92:             lcd_clear_line(0);
  1254  034C  3000               	movlw	0
  1255  034D  118A  2558  118A   	fcall	_lcd_clear_line
  1256                           
  1257                           ;Main.c: 93:             lcd_print(text+space_pos+1, 16, 0, 0);
  1258  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0352  0845               	movf	_space_pos,w
  1261  0353  073C               	addwf	_text,w
  1262  0354  00B6               	movwf	??_main
  1263  0355  0846               	movf	_space_pos+1,w
  1264  0356  1803               	skipnc
  1265  0357  0A46               	incf	_space_pos+1,w
  1266  0358  073D               	addwf	_text+1,w
  1267  0359  00B7               	movwf	??_main+1
  1268  035A  0836               	movf	??_main,w
  1269  035B  3E01               	addlw	1
  1270  035C  00AA               	movwf	lcd_print@text
  1271  035D  0837               	movf	??_main+1,w
  1272  035E  1803               	skipnc
  1273  035F  3E01               	addlw	1
  1274  0360  3E00               	addlw	0
  1275  0361  00AB               	movwf	lcd_print@text+1
  1276  0362  3010               	movlw	16
  1277  0363  00B8               	movwf	??_main+2
  1278  0364  0838               	movf	??_main+2,w
  1279  0365  00AC               	movwf	lcd_print@size
  1280  0366  01AD               	clrf	lcd_print@line
  1281  0367  01AE               	clrf	lcd_print@pos
  1282  0368  118A  24B7  118A   	fcall	_lcd_print
  1283  036B                     l1425:	
  1284                           
  1285                           ;Main.c: 95:         if (btn_pressed)
  1286  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1287  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1288  036D  0844               	movf	_btn_pressed,w
  1289  036E  1903               	btfsc	3,2
  1290  036F  2BB8               	goto	l1433
  1291                           
  1292                           ;Main.c: 96:         {;Main.c: 97:             rand = (random()%10);
  1293  0370  300A               	movlw	10
  1294  0371  00A9               	movwf	___awmod@divisor
  1295  0372  3000               	movlw	0
  1296  0373  00AA               	movwf	___awmod@divisor+1
  1297  0374  118A  25B7  118A   	fcall	_random
  1298  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0379  00B6               	movwf	??_main
  1301  037A  01B7               	clrf	??_main+1
  1302  037B  0836               	movf	??_main,w
  1303  037C  00AB               	movwf	___awmod@dividend
  1304  037D  0837               	movf	??_main+1,w
  1305  037E  00AC               	movwf	___awmod@dividend+1
  1306  037F  118A  246A  118A   	fcall	___awmod
  1307  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0384  082A               	movf	?___awmod+1,w
  1310  0385  00BF               	movwf	_rand+1
  1311  0386  0829               	movf	?___awmod,w
  1312  0387  00BE               	movwf	_rand
  1313                           
  1314                           ;Main.c: 98:             text = &chores[rand % 11][0];
  1315  0388  083F               	movf	_rand+1,w
  1316  0389  00AC               	movwf	___awmod@dividend+1
  1317  038A  083E               	movf	_rand,w
  1318  038B  00AB               	movwf	___awmod@dividend
  1319  038C  300B               	movlw	11
  1320  038D  00A9               	movwf	___awmod@divisor
  1321  038E  3000               	movlw	0
  1322  038F  00AA               	movwf	___awmod@divisor+1
  1323  0390  118A  246A  118A   	fcall	___awmod
  1324  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0395  082A               	movf	?___awmod+1,w
  1327  0396  00B1               	movwf	___wmul@multiplier+1
  1328  0397  0829               	movf	?___awmod,w
  1329  0398  00B0               	movwf	___wmul@multiplier
  1330  0399  301E               	movlw	30
  1331  039A  00B2               	movwf	___wmul@multiplicand
  1332  039B  3000               	movlw	0
  1333  039C  00B3               	movwf	___wmul@multiplicand+1
  1334  039D  118A  260F  118A   	fcall	___wmul
  1335  03A0  3012               	movlw	low (_chores| (0+32768))
  1336  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1337  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1338  03A3  00B6               	movwf	??_main
  1339  03A4  3081               	movlw	high (_chores| (0+32768))
  1340  03A5  00B7               	movwf	??_main+1
  1341  03A6  0830               	movf	?___wmul,w
  1342  03A7  0736               	addwf	??_main,w
  1343  03A8  00B8               	movwf	??_main+2
  1344  03A9  0831               	movf	?___wmul+1,w
  1345  03AA  1803               	skipnc
  1346  03AB  0A31               	incf	?___wmul+1,w
  1347  03AC  0737               	addwf	??_main+1,w
  1348  03AD  00B9               	movwf	??_main+3
  1349  03AE  0838               	movf	??_main+2,w
  1350  03AF  00BC               	movwf	_text
  1351  03B0  0839               	movf	??_main+3,w
  1352  03B1  00BD               	movwf	_text+1
  1353                           
  1354                           ;Main.c: 99:             user = rand%2;
  1355  03B2  083E               	movf	_rand,w
  1356  03B3  3901               	andlw	1
  1357  03B4  00B6               	movwf	??_main
  1358  03B5  0836               	movf	??_main,w
  1359  03B6  00C3               	movwf	_user
  1360                           
  1361                           ;Main.c: 100:             btn_pressed = 0;
  1362  03B7  01C4               	clrf	_btn_pressed
  1363  03B8                     l1433:	
  1364                           
  1365                           ;Main.c: 102:         _delay((unsigned long)((1000)*(31000/4000.0)));
  1366  03B8  300B               	movlw	11
  1367  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1368  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1369  03BB  00B7               	movwf	??_main+1
  1370  03BC  300E               	movlw	14
  1371  03BD  00B6               	movwf	??_main
  1372  03BE                     u907:	
  1373  03BE  0BB6               	decfsz	??_main,f
  1374  03BF  2BBE               	goto	u907
  1375  03C0  0BB7               	decfsz	??_main+1,f
  1376  03C1  2BBE               	goto	u907
  1377  03C2  0000               	nop
  1378  03C3  2AD2               	goto	l1405
  1379  03C4                     __end_of_main:	
  1380                           
  1381                           	psect	text1
  1382  0676                     __ptext1:	
  1383 ;; *************** function _strlen *****************
  1384 ;; Defined at:
  1385 ;;		line 189 in file "Main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  string          2    6[BANK0 ] PTR unsigned char 
  1388 ;;		 -> NULL(0), chores(330), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  i               2    9[BANK0 ] int 
  1391 ;;  result          1   11[BANK0 ] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       2       0       0       0
  1402 ;;      Locals:         0       3       0       0       0
  1403 ;;      Temps:          0       1       0       0       0
  1404 ;;      Totals:         0       6       0       0       0
  1405 ;;Total ram usage:        6 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    4
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _strlen
  1417  0676                     _strlen:	
  1418                           
  1419                           ;Main.c: 189: unsigned char strlen( unsigned char string[]);Main.c: 190: {;Main.c: 191: 
      +                              int i = 0;
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1423  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0678  01A9               	clrf	strlen@i
  1426  0679  01AA               	clrf	strlen@i+1
  1427                           
  1428                           ;Main.c: 192:     unsigned char result = 0;
  1429  067A  01AB               	clrf	strlen@result
  1430  067B                     l1269:	
  1431                           ;Main.c: 193:     while (string[i] != 0)
  1432                           
  1433                           
  1434                           ;Main.c: 193:     while (string[i] != 0)
  1435  067B  0829               	movf	strlen@i,w
  1436  067C  0726               	addwf	strlen@string,w
  1437  067D  0084               	movwf	4
  1438  067E  082A               	movf	strlen@i+1,w
  1439  067F  1803               	skipnc
  1440  0680  0A2A               	incf	strlen@i+1,w
  1441  0681  0727               	addwf	strlen@string+1,w
  1442  0682  00FF               	movwf	127
  1443  0683  118A  2100  118A   	fcall	stringtab
  1444  0686  3A00               	xorlw	0
  1445  0687  1903               	btfsc	3,2
  1446  0688  2E94               	goto	l1271
  1447                           
  1448                           ;Main.c: 194:     {;Main.c: 195:         i++;
  1449  0689  3001               	movlw	1
  1450  068A  07A9               	addwf	strlen@i,f
  1451  068B  1803               	skipnc
  1452  068C  0AAA               	incf	strlen@i+1,f
  1453  068D  3000               	movlw	0
  1454  068E  07AA               	addwf	strlen@i+1,f
  1455                           
  1456                           ;Main.c: 196:         result++;
  1457  068F  3001               	movlw	1
  1458  0690  00A8               	movwf	??_strlen
  1459  0691  0828               	movf	??_strlen,w
  1460  0692  07AB               	addwf	strlen@result,f
  1461  0693  2E7B               	goto	l1269
  1462  0694                     l1271:	
  1463                           
  1464                           ;Main.c: 198:     return result;
  1465  0694  082B               	movf	strlen@result,w
  1466  0695  0008               	return
  1467  0696                     __end_of_strlen:	
  1468                           
  1469                           	psect	text2
  1470  05B7                     __ptext2:	
  1471 ;; *************** function _random *****************
  1472 ;; Defined at:
  1473 ;;		line 161 in file "Main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  original        1    8[BANK0 ] unsigned char 
  1478 ;;  rbit            1    7[BANK0 ] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       2       0       0       0
  1490 ;;      Temps:          0       1       0       0       0
  1491 ;;      Totals:         0       3       0       0       0
  1492 ;;Total ram usage:        3 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    4
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _random
  1504  05B7                     _random:	
  1505                           
  1506                           ;Main.c: 163:     static char rand;;Main.c: 164:     static char count = 0;;Main.c: 165:
      +                               char original = rand;
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _random: [wreg+status,2+status,0]
  1510  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1511  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1512  05B9  0841               	movf	random@rand,w
  1513  05BA  00A6               	movwf	??_random
  1514  05BB  0826               	movf	??_random,w
  1515  05BC  00A8               	movwf	random@original
  1516                           
  1517                           ;Main.c: 166:     char rbit = 0;
  1518  05BD  01A7               	clrf	random@rbit
  1519                           
  1520                           ;Main.c: 168:     if (count == 0){
  1521  05BE  0840               	movf	random@count,w
  1522  05BF  1D03               	btfss	3,2
  1523  05C0  2DCD               	goto	l1245
  1524  05C1                     l155:	
  1525                           ;Main.c: 170:         }
  1526                           
  1527                           
  1528                           ;Main.c: 169:         while (RA7 == 0){
  1529  05C1  1F85               	btfss	5,7	;volatile
  1530  05C2  2DC1               	goto	l155
  1531                           
  1532                           ;Main.c: 171:         count = 1;
  1533  05C3  01C0               	clrf	random@count
  1534  05C4  0AC0               	incf	random@count,f
  1535                           
  1536                           ;Main.c: 172:         rand = TMR0;
  1537  05C5  0801               	movf	1,w	;volatile
  1538  05C6  00A6               	movwf	??_random
  1539  05C7  0826               	movf	??_random,w
  1540  05C8  00C1               	movwf	random@rand
  1541                           
  1542                           ;Main.c: 173:         TMR0 = 0;
  1543  05C9  0181               	clrf	1	;volatile
  1544                           
  1545                           ;Main.c: 174:         TMR0IE = 1;
  1546  05CA  168B               	bsf	11,5	;volatile
  1547  05CB                     l1241:	
  1548                           
  1549                           ;Main.c: 175:         return rand;
  1550  05CB  0841               	movf	random@rand,w
  1551  05CC  0008               	return
  1552  05CD                     l1245:	
  1553                           
  1554                           ;Main.c: 178:     original &= 180;
  1555  05CD  30B4               	movlw	180
  1556  05CE                     L1:	
  1557  05CE  00A6               	movwf	??_random
  1558  05CF  0826               	movf	??_random,w
  1559  05D0  05A8               	andwf	random@original,f
  1560                           
  1561                           ;Main.c: 179:     while(original){
  1562  05D1  0828               	movf	random@original,w
  1563  05D2  1903               	btfsc	3,2
  1564  05D3  2DDD               	goto	l1255
  1565                           
  1566                           ;Main.c: 180:         rbit ^= (original & 1);
  1567                           
  1568                           ;Main.c: 179:     while(original){
  1569  05D4  0828               	movf	random@original,w
  1570  05D5  3901               	andlw	1
  1571  05D6  00A6               	movwf	??_random
  1572  05D7  0826               	movf	??_random,w
  1573  05D8  06A7               	xorwf	random@rbit,f
  1574                           
  1575                           ;Main.c: 181:         original >>= 1;
  1576  05D9  1003               	clrc
  1577  05DA  0CA8               	rrf	random@original,f
  1578                           
  1579                           ;Main.c: 182:         original &= (~(1<<7));
  1580  05DB  307F               	movlw	127
  1581  05DC  2DCE               	goto	L1
  1582  05DD                     l1255:	
  1583                           
  1584                           ;Main.c: 184:     rand <<= 1;
  1585  05DD  1003               	clrc
  1586  05DE  0DC1               	rlf	random@rand,f
  1587                           
  1588                           ;Main.c: 185:     rand |= rbit;
  1589  05DF  0827               	movf	random@rbit,w
  1590  05E0  00A6               	movwf	??_random
  1591  05E1  0826               	movf	??_random,w
  1592  05E2  04C1               	iorwf	random@rand,f
  1593  05E3  2DCB               	goto	l1241
  1594  05E4                     __end_of_random:	
  1595                           
  1596                           	psect	text3
  1597  04B7                     __ptext3:	
  1598 ;; *************** function _lcd_print *****************
  1599 ;; Defined at:
  1600 ;;		line 13 in file "LCD.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  text            2   10[BANK0 ] PTR unsigned char 
  1603 ;;		 -> NULL(0), STR_1(12), users(14), chores(330), 
  1604 ;;  size            1   12[BANK0 ] unsigned char 
  1605 ;;  line            1   13[BANK0 ] unsigned char 
  1606 ;;  pos             1   14[BANK0 ] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  pointer         2   16[BANK0 ] PTR unsigned char 
  1609 ;;		 -> NULL(0), STR_1(12), users(14), chores(330), 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       5       0       0       0
  1620 ;;      Locals:         0       2       0       0       0
  1621 ;;      Temps:          0       1       0       0       0
  1622 ;;      Totals:         0       8       0       0       0
  1623 ;;Total ram usage:        8 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    6
  1626 ;; This function calls:
  1627 ;;		_lcd_cmd
  1628 ;;		_lcd_data
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _lcd_print
  1636  04B7                     _lcd_print:	
  1637                           
  1638                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1642  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1643  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1644  04B9  082A               	movf	lcd_print@text,w
  1645  04BA  00B0               	movwf	lcd_print@pointer
  1646  04BB  082B               	movf	lcd_print@text+1,w
  1647  04BC  00B1               	movwf	lcd_print@pointer+1
  1648                           
  1649                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  1650  04BD  082D               	movf	lcd_print@line,w
  1651  04BE  00AF               	movwf	??_lcd_print
  1652  04BF  3005               	movlw	5
  1653  04C0                     u495:	
  1654  04C0  1003               	clrc
  1655  04C1  0DAF               	rlf	??_lcd_print,f
  1656  04C2  3EFF               	addlw	-1
  1657  04C3  1D03               	skipz
  1658  04C4  2CC0               	goto	u495
  1659  04C5  1003               	clrc
  1660  04C6  0D2F               	rlf	??_lcd_print,w
  1661  04C7  042E               	iorwf	lcd_print@pos,w
  1662  04C8  3880               	iorlw	128
  1663  04C9  118A  2525  118A   	fcall	_lcd_cmd
  1664  04CC                     l1181:	
  1665                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1666                           
  1667                           
  1668                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1669  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1670  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1671  04CE  0831               	movf	lcd_print@pointer+1,w
  1672  04CF  00FF               	movwf	127
  1673  04D0  0830               	movf	lcd_print@pointer,w
  1674  04D1  0084               	movwf	4
  1675  04D2  118A  2100  118A   	fcall	stringtab
  1676  04D5  3A00               	xorlw	0
  1677  04D6  1903               	skipnz
  1678  04D7  0008               	return
  1679  04D8  082C               	movf	lcd_print@size,w
  1680  04D9  1903               	btfsc	3,2
  1681  04DA  0008               	return
  1682                           
  1683                           ;LCD.c: 21:         lcd_data(*pointer);
  1684  04DB  0831               	movf	lcd_print@pointer+1,w
  1685  04DC  00FF               	movwf	127
  1686  04DD  0830               	movf	lcd_print@pointer,w
  1687  04DE  0084               	movwf	4
  1688  04DF  118A  2100  118A   	fcall	stringtab
  1689  04E2  118A  2632  118A   	fcall	_lcd_data
  1690                           
  1691                           ;LCD.c: 22:         pointer++;
  1692  04E5  3001               	movlw	1
  1693  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1694  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1695  04E8  07B0               	addwf	lcd_print@pointer,f
  1696  04E9  1803               	skipnc
  1697  04EA  0AB1               	incf	lcd_print@pointer+1,f
  1698  04EB  3000               	movlw	0
  1699  04EC  07B1               	addwf	lcd_print@pointer+1,f
  1700                           
  1701                           ;LCD.c: 23:         size--;
  1702  04ED  3001               	movlw	1
  1703  04EE  02AC               	subwf	lcd_print@size,f
  1704  04EF  2CCC               	goto	l1181
  1705  04F0                     __end_of_lcd_print:	
  1706                           
  1707                           	psect	text4
  1708  03C4                     __ptext4:	
  1709 ;; *************** function _lcd_init *****************
  1710 ;; Defined at:
  1711 ;;		line 44 in file "LCD.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          0       1       0       0       0
  1728 ;;      Totals:         0       1       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    6
  1732 ;; This function calls:
  1733 ;;		_lcd_cmd
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _lcd_init
  1741  03C4                     _lcd_init:	
  1742                           
  1743                           ;LCD.c: 48:     _delay((unsigned long)((15)*(31000/4000.0)));
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1747  03C4  3025               	movlw	37
  1748  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1749  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1750  03C7  00AA               	movwf	??_lcd_init
  1751  03C8                     u917:	
  1752  03C8  0BAA               	decfsz	??_lcd_init,f
  1753  03C9  2BC8               	goto	u917
  1754  03CA  2BCB               	nop2
  1755                           
  1756                           ;LCD.c: 50:     lcd_cmd(0x02);
  1757  03CB  3002               	movlw	2
  1758  03CC  118A  2525  118A   	fcall	_lcd_cmd
  1759                           
  1760                           ;LCD.c: 51:     _delay((unsigned long)((5)*(31000/4000.0)));
  1761  03CF  300B               	movlw	11
  1762  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1763  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1764  03D2  00AA               	movwf	??_lcd_init
  1765  03D3                     u927:	
  1766  03D3  0BAA               	decfsz	??_lcd_init,f
  1767  03D4  2BD3               	goto	u927
  1768  03D5  2BD6               	nop2
  1769                           
  1770                           ;LCD.c: 55:     lcd_cmd(0x28);
  1771  03D6  3028               	movlw	40
  1772  03D7  118A  2525  118A   	fcall	_lcd_cmd
  1773                           
  1774                           ;LCD.c: 56:     _delay((unsigned long)((5)*(31000/4000.0)));
  1775  03DA  300B               	movlw	11
  1776  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1777  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1778  03DD  00AA               	movwf	??_lcd_init
  1779  03DE                     u937:	
  1780  03DE  0BAA               	decfsz	??_lcd_init,f
  1781  03DF  2BDE               	goto	u937
  1782  03E0  2BE1               	nop2
  1783                           
  1784                           ;LCD.c: 58:     lcd_cmd(0x10);
  1785  03E1  3010               	movlw	16
  1786  03E2  118A  2525  118A   	fcall	_lcd_cmd
  1787                           
  1788                           ;LCD.c: 59:     _delay((unsigned long)((5)*(31000/4000.0)));
  1789  03E5  300B               	movlw	11
  1790  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1791  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1792  03E8  00AA               	movwf	??_lcd_init
  1793  03E9                     u947:	
  1794  03E9  0BAA               	decfsz	??_lcd_init,f
  1795  03EA  2BE9               	goto	u947
  1796  03EB  2BEC               	nop2
  1797                           
  1798                           ;LCD.c: 61:     lcd_cmd(0x0c);
  1799  03EC  300C               	movlw	12
  1800  03ED  118A  2525  118A   	fcall	_lcd_cmd
  1801                           
  1802                           ;LCD.c: 62:     _delay((unsigned long)((5)*(31000/4000.0)));
  1803  03F0  300B               	movlw	11
  1804  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1805  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1806  03F3  00AA               	movwf	??_lcd_init
  1807  03F4                     u957:	
  1808  03F4  0BAA               	decfsz	??_lcd_init,f
  1809  03F5  2BF4               	goto	u957
  1810  03F6  2BF7               	nop2
  1811                           
  1812                           ;LCD.c: 64:     lcd_cmd(0x06);
  1813  03F7  3006               	movlw	6
  1814  03F8  118A  2525  118A   	fcall	_lcd_cmd
  1815                           
  1816                           ;LCD.c: 65:     _delay((unsigned long)((5)*(31000/4000.0)));
  1817  03FB  300B               	movlw	11
  1818  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1819  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1820  03FE  00AA               	movwf	??_lcd_init
  1821  03FF                     u967:	
  1822  03FF  0BAA               	decfsz	??_lcd_init,f
  1823  0400  2BFF               	goto	u967
  1824  0401  2C02               	nop2
  1825                           
  1826                           ;LCD.c: 67:     lcd_cmd(0x01);
  1827  0402  3001               	movlw	1
  1828  0403  118A  2525  118A   	fcall	_lcd_cmd
  1829                           
  1830                           ;LCD.c: 68:     _delay((unsigned long)((5)*(31000/4000.0)));
  1831  0406  300B               	movlw	11
  1832  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0409  00AA               	movwf	??_lcd_init
  1835  040A                     u977:	
  1836  040A  0BAA               	decfsz	??_lcd_init,f
  1837  040B  2C0A               	goto	u977
  1838  040C  2C0D               	nop2
  1839                           
  1840                           ;LCD.c: 70:     lcd_cmd(0x80);
  1841  040D  3080               	movlw	128
  1842  040E  118A  2525  118A   	fcall	_lcd_cmd
  1843                           
  1844                           ;LCD.c: 71:     _delay((unsigned long)((5)*(31000/4000.0)));
  1845  0411  300B               	movlw	11
  1846  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0414  00AA               	movwf	??_lcd_init
  1849  0415                     u987:	
  1850  0415  0BAA               	decfsz	??_lcd_init,f
  1851  0416  2C15               	goto	u987
  1852  0417  2C18               	nop2
  1853  0418  0008               	return
  1854  0419                     __end_of_lcd_init:	
  1855                           
  1856                           	psect	text5
  1857  0558                     __ptext5:	
  1858 ;; *************** function _lcd_clear_line *****************
  1859 ;; Defined at:
  1860 ;;		line 33 in file "LCD.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  line            1    wreg     unsigned char 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  line            1   11[BANK0 ] unsigned char 
  1865 ;;  i               2   12[BANK0 ] int 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         0       3       0       0       0
  1877 ;;      Temps:          0       1       0       0       0
  1878 ;;      Totals:         0       4       0       0       0
  1879 ;;Total ram usage:        4 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    6
  1882 ;; This function calls:
  1883 ;;		_lcd_cmd
  1884 ;;		_lcd_data
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _lcd_clear_line
  1892  0558                     _lcd_clear_line:	
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1896                           ;lcd_clear_line@line stored from wreg
  1897  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1899  055A  00AB               	movwf	lcd_clear_line@line
  1900                           
  1901                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  1902  055B  082B               	movf	lcd_clear_line@line,w
  1903  055C  00AA               	movwf	??_lcd_clear_line
  1904  055D  3005               	movlw	5
  1905  055E                     u525:	
  1906  055E  1003               	clrc
  1907  055F  0DAA               	rlf	??_lcd_clear_line,f
  1908  0560  3EFF               	addlw	-1
  1909  0561  1D03               	skipz
  1910  0562  2D5E               	goto	u525
  1911  0563  1003               	clrc
  1912  0564  0D2A               	rlf	??_lcd_clear_line,w
  1913  0565  3880               	iorlw	128
  1914  0566  118A  2525  118A   	fcall	_lcd_cmd
  1915                           
  1916                           ;LCD.c: 37:     for (i=0; i<40; i++)
  1917  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1918  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1919  056B  01AC               	clrf	lcd_clear_line@i
  1920  056C  01AD               	clrf	lcd_clear_line@i+1
  1921  056D                     l1197:	
  1922                           
  1923                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  1924  056D  3020               	movlw	32
  1925  056E  118A  2632  118A   	fcall	_lcd_data
  1926                           
  1927                           ;LCD.c: 40:     }
  1928  0571  3001               	movlw	1
  1929  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0574  07AC               	addwf	lcd_clear_line@i,f
  1932  0575  1803               	skipnc
  1933  0576  0AAD               	incf	lcd_clear_line@i+1,f
  1934  0577  3000               	movlw	0
  1935  0578  07AD               	addwf	lcd_clear_line@i+1,f
  1936  0579  082D               	movf	lcd_clear_line@i+1,w
  1937  057A  3A80               	xorlw	128
  1938  057B  00FF               	movwf	127
  1939  057C  3080               	movlw	128
  1940  057D  027F               	subwf	127,w
  1941  057E  1D03               	skipz
  1942  057F  2D82               	goto	u535
  1943  0580  3028               	movlw	40
  1944  0581  022C               	subwf	lcd_clear_line@i,w
  1945  0582                     u535:	
  1946  0582  1C03               	skipc
  1947  0583  2D6D               	goto	l1197
  1948                           
  1949                           ;LCD.c: 41:     lcd_cmd(0x80);
  1950  0584  3080               	movlw	128
  1951  0585  118A  2525         	fcall	_lcd_cmd
  1952  0587  0008               	return
  1953  0588                     __end_of_lcd_clear_line:	
  1954                           
  1955                           	psect	text6
  1956  0632                     __ptext6:	
  1957 ;; *************** function _lcd_data *****************
  1958 ;; Defined at:
  1959 ;;		line 90 in file "LCD.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  d               1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  d               1    9[BANK0 ] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       1       0       0       0
  1975 ;;      Temps:          0       2       0       0       0
  1976 ;;      Totals:         0       3       0       0       0
  1977 ;;Total ram usage:        3 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    5
  1980 ;; This function calls:
  1981 ;;		_enable
  1982 ;; This function is called by:
  1983 ;;		_lcd_print
  1984 ;;		_lcd_clear_line
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _lcd_data
  1990  0632                     _lcd_data:	
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1994                           ;lcd_data@d stored from wreg
  1995  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0634  00A9               	movwf	lcd_data@d
  1998                           
  1999                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  2000  0635  1486               	bsf	6,1	;volatile
  2001                           
  2002                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  2003  0636  0829               	movf	lcd_data@d,w
  2004  0637  00A7               	movwf	??_lcd_data
  2005  0638  3004               	movlw	4
  2006  0639                     u465:	
  2007  0639  1003               	clrc
  2008  063A  0CA7               	rrf	??_lcd_data,f
  2009  063B  3EFF               	addlw	-1
  2010  063C  1D03               	skipz
  2011  063D  2E39               	goto	u465
  2012  063E  300F               	movlw	15
  2013  063F  0527               	andwf	??_lcd_data,w
  2014  0640  00A8               	movwf	??_lcd_data+1
  2015  0641  0805               	movf	5,w	;volatile
  2016  0642  39F0               	andlw	240
  2017  0643  0428               	iorwf	??_lcd_data+1,w
  2018  0644  0085               	movwf	5	;volatile
  2019                           
  2020                           ;LCD.c: 99:     enable();
  2021  0645  118A  26A9  118A   	fcall	_enable
  2022                           
  2023                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  2024  0648  300F               	movlw	15
  2025  0649  1283               	bcf	3,5	;RP0=0, select bank0
  2026  064A  1303               	bcf	3,6	;RP1=0, select bank0
  2027  064B  0529               	andwf	lcd_data@d,w
  2028  064C  00A7               	movwf	??_lcd_data
  2029  064D  0805               	movf	5,w	;volatile
  2030  064E  39F0               	andlw	240
  2031  064F  0427               	iorwf	??_lcd_data,w
  2032  0650  0085               	movwf	5	;volatile
  2033                           
  2034                           ;LCD.c: 102:     enable();
  2035  0651  118A  26A9         	fcall	_enable
  2036  0653  0008               	return
  2037  0654                     __end_of_lcd_data:	
  2038                           
  2039                           	psect	text7
  2040  06B7                     __ptext7:	
  2041 ;; *************** function _lcd_clear_all *****************
  2042 ;; Defined at:
  2043 ;;		line 27 in file "LCD.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0
  2059 ;;      Temps:          0       1       0       0       0
  2060 ;;      Totals:         0       1       0       0       0
  2061 ;;Total ram usage:        1 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    6
  2064 ;; This function calls:
  2065 ;;		_lcd_cmd
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _lcd_clear_all
  2073  06B7                     _lcd_clear_all:	
  2074                           
  2075                           ;LCD.c: 29:     lcd_cmd(0x01);
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  2079  06B7  3001               	movlw	1
  2080  06B8  118A  2525  118A   	fcall	_lcd_cmd
  2081                           
  2082                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2083  06BB  300B               	movlw	11
  2084  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2085  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2086  06BE  00AA               	movwf	??_lcd_clear_all
  2087  06BF                     u997:	
  2088  06BF  0BAA               	decfsz	??_lcd_clear_all,f
  2089  06C0  2EBF               	goto	u997
  2090  06C1  2EC2               	nop2
  2091  06C2  0008               	return
  2092  06C3                     __end_of_lcd_clear_all:	
  2093                           
  2094                           	psect	text8
  2095  0525                     __ptext8:	
  2096 ;; *************** function _lcd_cmd *****************
  2097 ;; Defined at:
  2098 ;;		line 74 in file "LCD.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  c               1    wreg     unsigned char 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  c               1    9[BANK0 ] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       1       0       0       0
  2114 ;;      Temps:          0       2       0       0       0
  2115 ;;      Totals:         0       3       0       0       0
  2116 ;;Total ram usage:        3 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    5
  2119 ;; This function calls:
  2120 ;;		_enable
  2121 ;; This function is called by:
  2122 ;;		_lcd_print
  2123 ;;		_lcd_clear_all
  2124 ;;		_lcd_clear_line
  2125 ;;		_lcd_init
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _lcd_cmd
  2131  0525                     _lcd_cmd:	
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2135                           ;lcd_cmd@c stored from wreg
  2136  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0527  00A9               	movwf	lcd_cmd@c
  2139                           
  2140                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2141  0528  1086               	bcf	6,1	;volatile
  2142                           
  2143                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2144  0529  300B               	movlw	11
  2145  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2146  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2147  052C  00A7               	movwf	??_lcd_cmd
  2148  052D                     u1007:	
  2149  052D  0BA7               	decfsz	??_lcd_cmd,f
  2150  052E  2D2D               	goto	u1007
  2151  052F  2D30               	nop2
  2152                           
  2153                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2154  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0532  0829               	movf	lcd_cmd@c,w
  2157  0533  00A7               	movwf	??_lcd_cmd
  2158  0534  3004               	movlw	4
  2159  0535                     u455:	
  2160  0535  1003               	clrc
  2161  0536  0CA7               	rrf	??_lcd_cmd,f
  2162  0537  3EFF               	addlw	-1
  2163  0538  1D03               	skipz
  2164  0539  2D35               	goto	u455
  2165  053A  300F               	movlw	15
  2166  053B  0527               	andwf	??_lcd_cmd,w
  2167  053C  00A8               	movwf	??_lcd_cmd+1
  2168  053D  0805               	movf	5,w	;volatile
  2169  053E  39F0               	andlw	240
  2170  053F  0428               	iorwf	??_lcd_cmd+1,w
  2171  0540  0085               	movwf	5	;volatile
  2172                           
  2173                           ;LCD.c: 83:     enable();
  2174  0541  118A  26A9  118A   	fcall	_enable
  2175                           
  2176                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2177  0544  300F               	movlw	15
  2178  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0547  0529               	andwf	lcd_cmd@c,w
  2181  0548  00A7               	movwf	??_lcd_cmd
  2182  0549  0805               	movf	5,w	;volatile
  2183  054A  39F0               	andlw	240
  2184  054B  0427               	iorwf	??_lcd_cmd,w
  2185  054C  0085               	movwf	5	;volatile
  2186                           
  2187                           ;LCD.c: 86:     enable();
  2188  054D  118A  26A9  118A   	fcall	_enable
  2189                           
  2190                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2191  0550  300B               	movlw	11
  2192  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0553  00A7               	movwf	??_lcd_cmd
  2195  0554                     u1017:	
  2196  0554  0BA7               	decfsz	??_lcd_cmd,f
  2197  0555  2D54               	goto	u1017
  2198  0556  2D57               	nop2
  2199  0557  0008               	return
  2200  0558                     __end_of_lcd_cmd:	
  2201                           
  2202                           	psect	text9
  2203  06A9                     __ptext9:	
  2204 ;; *************** function _enable *****************
  2205 ;; Defined at:
  2206 ;;		line 106 in file "LCD.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0
  2222 ;;      Temps:          0       1       0       0       0
  2223 ;;      Totals:         0       1       0       0       0
  2224 ;;Total ram usage:        1 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    4
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_lcd_cmd
  2231 ;;		_lcd_data
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _enable
  2237  06A9                     _enable:	
  2238                           
  2239                           ;LCD.c: 108:     RB2 = 1;
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _enable: [wreg]
  2243  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2244  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2245  06AB  1506               	bsf	6,2	;volatile
  2246                           
  2247                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2248  06AC  300B               	movlw	11
  2249  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2250  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2251  06AF  00A6               	movwf	??_enable
  2252  06B0                     u1027:	
  2253  06B0  0BA6               	decfsz	??_enable,f
  2254  06B1  2EB0               	goto	u1027
  2255  06B2  2EB3               	nop2
  2256                           
  2257                           ;LCD.c: 112:     RB2 = 0;
  2258  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2259  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2260  06B5  1106               	bcf	6,2	;volatile
  2261  06B6  0008               	return
  2262  06B7                     __end_of_enable:	
  2263                           
  2264                           	psect	text10
  2265  060F                     __ptext10:	
  2266 ;; *************** function ___wmul *****************
  2267 ;; Defined at:
  2268 ;;		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  multiplier      2   16[BANK0 ] unsigned int 
  2271 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  product         2   20[BANK0 ] unsigned int 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2   16[BANK0 ] unsigned int 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       4       0       0       0
  2284 ;;      Locals:         0       2       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       6       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    4
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function ___wmul
  2299  060F                     ___wmul:	
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2303  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0611  01B4               	clrf	___wmul@product
  2306  0612  01B5               	clrf	___wmul@product+1
  2307  0613                     l1277:	
  2308  0613  1C30               	btfss	___wmul@multiplier,0
  2309  0614  2E1B               	goto	l253
  2310  0615  0832               	movf	___wmul@multiplicand,w
  2311  0616  07B4               	addwf	___wmul@product,f
  2312  0617  1803               	skipnc
  2313  0618  0AB5               	incf	___wmul@product+1,f
  2314  0619  0833               	movf	___wmul@multiplicand+1,w
  2315  061A  07B5               	addwf	___wmul@product+1,f
  2316  061B                     l253:	
  2317  061B  3001               	movlw	1
  2318  061C                     u595:	
  2319  061C  1003               	clrc
  2320  061D  0DB2               	rlf	___wmul@multiplicand,f
  2321  061E  0DB3               	rlf	___wmul@multiplicand+1,f
  2322  061F  3EFF               	addlw	-1
  2323  0620  1D03               	skipz
  2324  0621  2E1C               	goto	u595
  2325  0622  3001               	movlw	1
  2326  0623                     u605:	
  2327  0623  1003               	clrc
  2328  0624  0CB1               	rrf	___wmul@multiplier+1,f
  2329  0625  0CB0               	rrf	___wmul@multiplier,f
  2330  0626  3EFF               	addlw	-1
  2331  0627  1D03               	skipz
  2332  0628  2E23               	goto	u605
  2333  0629  0830               	movf	___wmul@multiplier,w
  2334  062A  0431               	iorwf	___wmul@multiplier+1,w
  2335  062B  1D03               	btfss	3,2
  2336  062C  2E13               	goto	l1277
  2337  062D  0835               	movf	___wmul@product+1,w
  2338  062E  00B1               	movwf	?___wmul+1
  2339  062F  0834               	movf	___wmul@product,w
  2340  0630  00B0               	movwf	?___wmul
  2341  0631  0008               	return
  2342  0632                     __end_of___wmul:	
  2343                           
  2344                           	psect	text11
  2345  0696                     __ptext11:	
  2346 ;; *************** function ___bmul *****************
  2347 ;; Defined at:
  2348 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  multiplier      1    wreg     unsigned char 
  2351 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  multiplier      1    9[BANK0 ] unsigned char 
  2354 ;;  product         1    8[BANK0 ] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         0       1       0       0       0
  2365 ;;      Locals:         0       2       0       0       0
  2366 ;;      Temps:          0       1       0       0       0
  2367 ;;      Totals:         0       4       0       0       0
  2368 ;;Total ram usage:        4 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    4
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___bmul
  2380  0696                     ___bmul:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2384                           ;___bmul@multiplier stored from wreg
  2385  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0698  00A9               	movwf	___bmul@multiplier
  2388  0699  01A8               	clrf	___bmul@product
  2389  069A                     l1291:	
  2390  069A  1C29               	btfss	___bmul@multiplier,0
  2391  069B  2EA0               	goto	l1295
  2392  069C  0826               	movf	___bmul@multiplicand,w
  2393  069D  00A7               	movwf	??___bmul
  2394  069E  0827               	movf	??___bmul,w
  2395  069F  07A8               	addwf	___bmul@product,f
  2396  06A0                     l1295:	
  2397  06A0  1003               	clrc
  2398  06A1  0DA6               	rlf	___bmul@multiplicand,f
  2399  06A2  1003               	clrc
  2400  06A3  0CA9               	rrf	___bmul@multiplier,f
  2401  06A4  0829               	movf	___bmul@multiplier,w
  2402  06A5  1D03               	btfss	3,2
  2403  06A6  2E9A               	goto	l1291
  2404  06A7  0828               	movf	___bmul@product,w
  2405  06A8  0008               	return
  2406  06A9                     __end_of___bmul:	
  2407                           
  2408                           	psect	text12
  2409  046A                     __ptext12:	
  2410 ;; *************** function ___awmod *****************
  2411 ;; Defined at:
  2412 ;;		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  divisor         2    9[BANK0 ] int 
  2415 ;;  dividend        2   11[BANK0 ] int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  sign            1   15[BANK0 ] unsigned char 
  2418 ;;  counter         1   14[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2    9[BANK0 ] int 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       4       0       0       0
  2429 ;;      Locals:         0       2       0       0       0
  2430 ;;      Temps:          0       1       0       0       0
  2431 ;;      Totals:         0       7       0       0       0
  2432 ;;Total ram usage:        7 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;;		_itoa
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function ___awmod
  2445  046A                     ___awmod:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2449  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2450  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2451  046C  01AF               	clrf	___awmod@sign
  2452  046D  1FAC               	btfss	___awmod@dividend+1,7
  2453  046E  2C76               	goto	l1311
  2454  046F  09AB               	comf	___awmod@dividend,f
  2455  0470  09AC               	comf	___awmod@dividend+1,f
  2456  0471  0AAB               	incf	___awmod@dividend,f
  2457  0472  1903               	skipnz
  2458  0473  0AAC               	incf	___awmod@dividend+1,f
  2459  0474  01AF               	clrf	___awmod@sign
  2460  0475  0AAF               	incf	___awmod@sign,f
  2461  0476                     l1311:	
  2462  0476  1FAA               	btfss	___awmod@divisor+1,7
  2463  0477  2C7D               	goto	l1315
  2464  0478  09A9               	comf	___awmod@divisor,f
  2465  0479  09AA               	comf	___awmod@divisor+1,f
  2466  047A  0AA9               	incf	___awmod@divisor,f
  2467  047B  1903               	skipnz
  2468  047C  0AAA               	incf	___awmod@divisor+1,f
  2469  047D                     l1315:	
  2470  047D  0829               	movf	___awmod@divisor,w
  2471  047E  042A               	iorwf	___awmod@divisor+1,w
  2472  047F  1903               	btfsc	3,2
  2473  0480  2CAA               	goto	l1333
  2474  0481  01AE               	clrf	___awmod@counter
  2475  0482  0AAE               	incf	___awmod@counter,f
  2476  0483                     l1323:	
  2477  0483  1BAA               	btfsc	___awmod@divisor+1,7
  2478  0484  2C91               	goto	l1325
  2479  0485  3001               	movlw	1
  2480  0486                     u675:	
  2481  0486  1003               	clrc
  2482  0487  0DA9               	rlf	___awmod@divisor,f
  2483  0488  0DAA               	rlf	___awmod@divisor+1,f
  2484  0489  3EFF               	addlw	-1
  2485  048A  1D03               	skipz
  2486  048B  2C86               	goto	u675
  2487  048C  3001               	movlw	1
  2488  048D  00AD               	movwf	??___awmod
  2489  048E  082D               	movf	??___awmod,w
  2490  048F  07AE               	addwf	___awmod@counter,f
  2491  0490  2C83               	goto	l1323
  2492  0491                     l1325:	
  2493  0491  082A               	movf	___awmod@divisor+1,w
  2494  0492  022C               	subwf	___awmod@dividend+1,w
  2495  0493  1D03               	skipz
  2496  0494  2C97               	goto	u695
  2497  0495  0829               	movf	___awmod@divisor,w
  2498  0496  022B               	subwf	___awmod@dividend,w
  2499  0497                     u695:	
  2500  0497  1C03               	skipc
  2501  0498  2C9F               	goto	l1329
  2502  0499  0829               	movf	___awmod@divisor,w
  2503  049A  02AB               	subwf	___awmod@dividend,f
  2504  049B  082A               	movf	___awmod@divisor+1,w
  2505  049C  1C03               	skipc
  2506  049D  03AC               	decf	___awmod@dividend+1,f
  2507  049E  02AC               	subwf	___awmod@dividend+1,f
  2508  049F                     l1329:	
  2509  049F  3001               	movlw	1
  2510  04A0                     u705:	
  2511  04A0  1003               	clrc
  2512  04A1  0CAA               	rrf	___awmod@divisor+1,f
  2513  04A2  0CA9               	rrf	___awmod@divisor,f
  2514  04A3  3EFF               	addlw	-1
  2515  04A4  1D03               	skipz
  2516  04A5  2CA0               	goto	u705
  2517  04A6  3001               	movlw	1
  2518  04A7  02AE               	subwf	___awmod@counter,f
  2519  04A8  1D03               	btfss	3,2
  2520  04A9  2C91               	goto	l1325
  2521  04AA                     l1333:	
  2522  04AA  082F               	movf	___awmod@sign,w
  2523  04AB  1903               	btfsc	3,2
  2524  04AC  2CB2               	goto	l1337
  2525  04AD  09AB               	comf	___awmod@dividend,f
  2526  04AE  09AC               	comf	___awmod@dividend+1,f
  2527  04AF  0AAB               	incf	___awmod@dividend,f
  2528  04B0  1903               	skipnz
  2529  04B1  0AAC               	incf	___awmod@dividend+1,f
  2530  04B2                     l1337:	
  2531  04B2  082C               	movf	___awmod@dividend+1,w
  2532  04B3  00AA               	movwf	?___awmod+1
  2533  04B4  082B               	movf	___awmod@dividend,w
  2534  04B5  00A9               	movwf	?___awmod
  2535  04B6  0008               	return
  2536  04B7                     __end_of___awmod:	
  2537                           
  2538                           	psect	text13
  2539  0419                     __ptext13:	
  2540 ;; *************** function _testing *****************
  2541 ;; Defined at:
  2542 ;;		line 108 in file "Main.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0
  2558 ;;      Temps:          0       6       0       0       0
  2559 ;;      Totals:         0       6       0       0       0
  2560 ;;Total ram usage:        6 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    3
  2563 ;; This function calls:
  2564 ;;		i1_lcd_clear_all
  2565 ;;		i1_lcd_clear_line
  2566 ;;		i1_lcd_cmd
  2567 ;;		i1_lcd_print
  2568 ;; This function is called by:
  2569 ;;		Interrupt level 1
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _testing
  2575  0419                     _testing:	
  2576                           
  2577                           ;Main.c: 110:     if (INT0IF == 1)
  2578  0419  1C8B               	btfss	11,1	;volatile
  2579  041A  2C36               	goto	i1l135
  2580                           
  2581                           ;Main.c: 111:     {;Main.c: 112:         if (lcd_off)
  2582  041B  087D               	movf	_lcd_off,w
  2583  041C  1903               	btfsc	3,2
  2584  041D  2C2D               	goto	i1l136
  2585                           
  2586                           ;Main.c: 113:         {;Main.c: 114:             lcd_cmd(0x0c);
  2587  041E  300C               	movlw	12
  2588  041F  118A  2588  118A   	fcall	i1_lcd_cmd
  2589                           
  2590                           ;Main.c: 115:             lcd_clear_all();
  2591  0422  118A  26CF  118A   	fcall	i1_lcd_clear_all
  2592                           
  2593                           ;Main.c: 116:             _delay((unsigned long)((50)*(31000/4000.0)));
  2594  0425  3080               	movlw	128
  2595  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0428  00A0               	movwf	??_testing
  2598  0429                     u103_27:	
  2599  0429  0BA0               	decfsz	??_testing,f
  2600  042A  2C29               	goto	u103_27
  2601                           
  2602                           ;Main.c: 117:             lcd_off = 0;
  2603  042B  01FD               	clrf	_lcd_off
  2604                           
  2605                           ;Main.c: 118:         }
  2606  042C  2C2F               	goto	i1l1445
  2607  042D                     i1l136:	
  2608                           ;Main.c: 119:         else
  2609                           
  2610                           
  2611                           ;Main.c: 120:             btn_pressed = 1;
  2612  042D  01C4               	clrf	_btn_pressed
  2613  042E  0AC4               	incf	_btn_pressed,f
  2614  042F                     i1l1445:	
  2615                           
  2616                           ;Main.c: 121:         TMR0 = 0;
  2617  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0431  0181               	clrf	1	;volatile
  2620                           
  2621                           ;Main.c: 122:         TMR1 = 0;
  2622  0432  018E               	clrf	14	;volatile
  2623  0433  018F               	clrf	15	;volatile
  2624                           
  2625                           ;Main.c: 123:         INT0IF = 0;
  2626  0434  108B               	bcf	11,1	;volatile
  2627                           
  2628                           ;Main.c: 124:     }
  2629  0435  2C5D               	goto	i1l140
  2630  0436                     i1l135:	
  2631                           ;Main.c: 125:     else if (TMR0IF)
  2632                           
  2633  0436  1D0B               	btfss	11,2	;volatile
  2634  0437  2C5D               	goto	i1l140
  2635                           
  2636                           ;Main.c: 126:     {;Main.c: 127:         lcd_off = 1;
  2637  0438  01FD               	clrf	_lcd_off
  2638  0439  0AFD               	incf	_lcd_off,f
  2639                           
  2640                           ;Main.c: 128:         lcd_clear_line(0);
  2641  043A  3000               	movlw	0
  2642  043B  118A  25E4  118A   	fcall	i1_lcd_clear_line
  2643                           
  2644                           ;Main.c: 129:         lcd_print("sleep time!", 16, 0, 0);
  2645  043E  306A               	movlw	low (STR_1| (0+32768))
  2646  043F  00F4               	movwf	i1lcd_print@text
  2647  0440  3082               	movlw	high (STR_1| (0+32768))
  2648  0441  00F5               	movwf	i1lcd_print@text+1
  2649  0442  3010               	movlw	16
  2650  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0445  00A0               	movwf	??_testing
  2653  0446  0820               	movf	??_testing,w
  2654  0447  00F6               	movwf	i1lcd_print@size
  2655  0448  01F7               	clrf	i1lcd_print@line
  2656  0449  01F8               	clrf	i1lcd_print@pos
  2657  044A  118A  24F0  118A   	fcall	i1_lcd_print
  2658                           
  2659                           ;Main.c: 130:         _delay((unsigned long)((500)*(31000/4000.0)));
  2660  044D  3006               	movlw	6
  2661  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2662  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0450  00A1               	movwf	??_testing+1
  2664  0451  3006               	movlw	6
  2665  0452  00A0               	movwf	??_testing
  2666  0453                     u104_27:	
  2667  0453  0BA0               	decfsz	??_testing,f
  2668  0454  2C53               	goto	u104_27
  2669  0455  0BA1               	decfsz	??_testing+1,f
  2670  0456  2C53               	goto	u104_27
  2671                           
  2672                           ;Main.c: 131:         lcd_cmd(0x08);
  2673  0457  3008               	movlw	8
  2674  0458  118A  2588  118A   	fcall	i1_lcd_cmd
  2675                           
  2676                           ;Main.c: 132:         TMR0IF = 0;
  2677  045B  110B               	bcf	11,2	;volatile
  2678  045C  0063               	sleep	;# 
  2679  045D                     i1l140:	
  2680  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2681  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2682  045F  0825               	movf	??_testing+5,w
  2683  0460  00FF               	movwf	127
  2684  0461  0824               	movf	??_testing+4,w
  2685  0462  008A               	movwf	10
  2686  0463  0823               	movf	??_testing+3,w
  2687  0464  0084               	movwf	4
  2688  0465  0E22               	swapf	(??_testing+2)^0,w
  2689  0466  0083               	movwf	3
  2690  0467  0EFE               	swapf	126,f
  2691  0468  0E7E               	swapf	126,w
  2692  0469  0009               	retfie
  2693  046A                     __end_of_testing:	
  2694                           
  2695                           	psect	intentry
  2696  0004                     __pintentry:	
  2697                           ;incstack = 0
  2698                           ; Regs used in _testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2699                           
  2700  0004                     interrupt_function:	
  2701  007E                     saved_w	set	btemp
  2702  0004  00FE               	movwf	btemp
  2703  0005  0E03               	swapf	3,w
  2704  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0008  00A2               	movwf	??_testing+2
  2707  0009  0804               	movf	4,w
  2708  000A  00A3               	movwf	??_testing+3
  2709  000B  080A               	movf	10,w
  2710  000C  00A4               	movwf	??_testing+4
  2711  000D  087F               	movf	btemp+1,w
  2712  000E  00A5               	movwf	??_testing+5
  2713  000F  118A  2C19         	ljmp	_testing
  2714                           
  2715                           	psect	text14
  2716  04F0                     __ptext14:	
  2717 ;; *************** function i1_lcd_print *****************
  2718 ;; Defined at:
  2719 ;;		line 13 in file "LCD.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  text            2    4[COMMON] PTR unsigned char 
  2722 ;;		 -> NULL(0), STR_1(12), users(14), chores(330), 
  2723 ;;  size            1    6[COMMON] unsigned char 
  2724 ;;  line            1    7[COMMON] unsigned char 
  2725 ;;  pos             1    8[COMMON] unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  lcd_print       2   10[COMMON] PTR unsigned char 
  2728 ;;		 -> NULL(0), STR_1(12), users(14), chores(330), 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         5       0       0       0       0
  2739 ;;      Locals:         2       0       0       0       0
  2740 ;;      Temps:          1       0       0       0       0
  2741 ;;      Totals:         8       0       0       0       0
  2742 ;;Total ram usage:        8 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    2
  2745 ;; This function calls:
  2746 ;;		i1_lcd_cmd
  2747 ;;		i1_lcd_data
  2748 ;; This function is called by:
  2749 ;;		_testing
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function i1_lcd_print
  2755  04F0                     i1_lcd_print:	
  2756                           
  2757                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in i1_lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2761  04F0  0874               	movf	i1lcd_print@text,w
  2762  04F1  00FA               	movwf	i1lcd_print@pointer
  2763  04F2  0875               	movf	i1lcd_print@text+1,w
  2764  04F3  00FB               	movwf	i1lcd_print@pointer+1
  2765                           
  2766                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  2767  04F4  0877               	movf	i1lcd_print@line,w
  2768  04F5  00F9               	movwf	??i1_lcd_print
  2769  04F6  3005               	movlw	5
  2770  04F7                     u73_25:	
  2771  04F7  1003               	clrc
  2772  04F8  0DF9               	rlf	??i1_lcd_print,f
  2773  04F9  3EFF               	addlw	-1
  2774  04FA  1D03               	skipz
  2775  04FB  2CF7               	goto	u73_25
  2776  04FC  1003               	clrc
  2777  04FD  0D79               	rlf	??i1_lcd_print,w
  2778  04FE  0478               	iorwf	i1lcd_print@pos,w
  2779  04FF  3880               	iorlw	128
  2780  0500  118A  2588  118A   	fcall	i1_lcd_cmd
  2781  0503                     i1l1351:	
  2782                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  2783                           
  2784                           
  2785                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  2786  0503  087B               	movf	i1lcd_print@pointer+1,w
  2787  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0506  00FF               	movwf	127
  2790  0507  087A               	movf	i1lcd_print@pointer,w
  2791  0508  0084               	movwf	4
  2792  0509  118A  2100  118A   	fcall	stringtab
  2793  050C  3A00               	xorlw	0
  2794  050D  1903               	skipnz
  2795  050E  0008               	return
  2796  050F  0876               	movf	i1lcd_print@size,w
  2797  0510  1903               	btfsc	3,2
  2798  0511  0008               	return
  2799                           
  2800                           ;LCD.c: 21:         lcd_data(*pointer);
  2801  0512  087B               	movf	i1lcd_print@pointer+1,w
  2802  0513  00FF               	movwf	127
  2803  0514  087A               	movf	i1lcd_print@pointer,w
  2804  0515  0084               	movwf	4
  2805  0516  118A  2100  118A   	fcall	stringtab
  2806  0519  118A  2654  118A   	fcall	i1_lcd_data
  2807                           
  2808                           ;LCD.c: 22:         pointer++;
  2809  051C  3001               	movlw	1
  2810  051D  07FA               	addwf	i1lcd_print@pointer,f
  2811  051E  1803               	skipnc
  2812  051F  0AFB               	incf	i1lcd_print@pointer+1,f
  2813  0520  3000               	movlw	0
  2814  0521  07FB               	addwf	i1lcd_print@pointer+1,f
  2815                           
  2816                           ;LCD.c: 23:         size--;
  2817  0522  3001               	movlw	1
  2818  0523  02F6               	subwf	i1lcd_print@size,f
  2819  0524  2D03               	goto	i1l1351
  2820  0525                     __end_ofi1_lcd_print:	
  2821                           
  2822                           	psect	text15
  2823  05E4                     __ptext15:	
  2824 ;; *************** function i1_lcd_clear_line *****************
  2825 ;; Defined at:
  2826 ;;		line 33 in file "LCD.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  line            1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  line            1    5[COMMON] unsigned char 
  2831 ;;  lcd_clear_li    2    6[COMMON] int 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         3       0       0       0       0
  2843 ;;      Temps:          1       0       0       0       0
  2844 ;;      Totals:         4       0       0       0       0
  2845 ;;Total ram usage:        4 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		i1_lcd_cmd
  2850 ;;		i1_lcd_data
  2851 ;; This function is called by:
  2852 ;;		_testing
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function i1_lcd_clear_line
  2858  05E4                     i1_lcd_clear_line:	
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in i1_lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2862                           ;i1lcd_clear_line@line stored from wreg
  2863  05E4  00F5               	movwf	i1lcd_clear_line@line
  2864                           
  2865                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  2866  05E5  0875               	movf	i1lcd_clear_line@line,w
  2867  05E6  00F4               	movwf	??i1_lcd_clear_line
  2868  05E7  3005               	movlw	5
  2869  05E8                     u76_25:	
  2870  05E8  1003               	clrc
  2871  05E9  0DF4               	rlf	??i1_lcd_clear_line,f
  2872  05EA  3EFF               	addlw	-1
  2873  05EB  1D03               	skipz
  2874  05EC  2DE8               	goto	u76_25
  2875  05ED  1003               	clrc
  2876  05EE  0D74               	rlf	??i1_lcd_clear_line,w
  2877  05EF  3880               	iorlw	128
  2878  05F0  118A  2588  118A   	fcall	i1_lcd_cmd
  2879                           
  2880                           ;LCD.c: 37:     for (i=0; i<40; i++)
  2881  05F3  01F6               	clrf	i1lcd_clear_line@i
  2882  05F4  01F7               	clrf	i1lcd_clear_line@i+1
  2883  05F5                     i1l1363:	
  2884  05F5  0877               	movf	i1lcd_clear_line@i+1,w
  2885  05F6  3A80               	xorlw	128
  2886  05F7  00FF               	movwf	127
  2887  05F8  3080               	movlw	128
  2888  05F9  027F               	subwf	127,w
  2889  05FA  1D03               	skipz
  2890  05FB  2DFE               	goto	u77_25
  2891  05FC  3028               	movlw	40
  2892  05FD  0276               	subwf	i1lcd_clear_line@i,w
  2893  05FE                     u77_25:	
  2894  05FE  1803               	btfsc	3,0
  2895  05FF  2E0B               	goto	i1l1373
  2896                           
  2897                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  2898  0600  3020               	movlw	32
  2899  0601  118A  2654  118A   	fcall	i1_lcd_data
  2900                           
  2901                           ;LCD.c: 40:     }
  2902  0604  3001               	movlw	1
  2903  0605  07F6               	addwf	i1lcd_clear_line@i,f
  2904  0606  1803               	skipnc
  2905  0607  0AF7               	incf	i1lcd_clear_line@i+1,f
  2906  0608  3000               	movlw	0
  2907  0609  07F7               	addwf	i1lcd_clear_line@i+1,f
  2908  060A  2DF5               	goto	i1l1363
  2909  060B                     i1l1373:	
  2910                           
  2911                           ;LCD.c: 41:     lcd_cmd(0x80);
  2912  060B  3080               	movlw	128
  2913  060C  118A  2588         	fcall	i1_lcd_cmd
  2914  060E  0008               	return
  2915  060F                     __end_ofi1_lcd_clear_line:	
  2916                           
  2917                           	psect	text16
  2918  0654                     __ptext16:	
  2919 ;; *************** function i1_lcd_data *****************
  2920 ;; Defined at:
  2921 ;;		line 90 in file "LCD.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  d               1    wreg     unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  d               1    3[COMMON] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       0       0       0       0
  2936 ;;      Locals:         1       0       0       0       0
  2937 ;;      Temps:          2       0       0       0       0
  2938 ;;      Totals:         3       0       0       0       0
  2939 ;;Total ram usage:        3 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    1
  2942 ;; This function calls:
  2943 ;;		i1_enable
  2944 ;; This function is called by:
  2945 ;;		i1_lcd_print
  2946 ;;		i1_lcd_clear_line
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function i1_lcd_data
  2952  0654                     i1_lcd_data:	
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in i1_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2956                           ;i1lcd_data@d stored from wreg
  2957  0654  00F3               	movwf	i1lcd_data@d
  2958                           
  2959                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  2960  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0657  1486               	bsf	6,1	;volatile
  2963                           
  2964                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  2965  0658  0873               	movf	i1lcd_data@d,w
  2966  0659  00F1               	movwf	??i1_lcd_data
  2967  065A  3004               	movlw	4
  2968  065B                     u48_25:	
  2969  065B  1003               	clrc
  2970  065C  0CF1               	rrf	??i1_lcd_data,f
  2971  065D  3EFF               	addlw	-1
  2972  065E  1D03               	skipz
  2973  065F  2E5B               	goto	u48_25
  2974  0660  300F               	movlw	15
  2975  0661  0571               	andwf	??i1_lcd_data,w
  2976  0662  00F2               	movwf	??i1_lcd_data+1
  2977  0663  0805               	movf	5,w	;volatile
  2978  0664  39F0               	andlw	240
  2979  0665  0472               	iorwf	??i1_lcd_data+1,w
  2980  0666  0085               	movwf	5	;volatile
  2981                           
  2982                           ;LCD.c: 99:     enable();
  2983  0667  118A  26C3  118A   	fcall	i1_enable
  2984                           
  2985                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  2986  066A  300F               	movlw	15
  2987  066B  0573               	andwf	i1lcd_data@d,w
  2988  066C  00F1               	movwf	??i1_lcd_data
  2989  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2990  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2991  066F  0805               	movf	5,w	;volatile
  2992  0670  39F0               	andlw	240
  2993  0671  0471               	iorwf	??i1_lcd_data,w
  2994  0672  0085               	movwf	5	;volatile
  2995                           
  2996                           ;LCD.c: 102:     enable();
  2997  0673  118A  26C3         	fcall	i1_enable
  2998  0675  0008               	return
  2999  0676                     __end_ofi1_lcd_data:	
  3000                           
  3001                           	psect	text17
  3002  06CF                     __ptext17:	
  3003 ;; *************** function i1_lcd_clear_all *****************
  3004 ;; Defined at:
  3005 ;;		line 27 in file "LCD.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0
  3021 ;;      Temps:          1       0       0       0       0
  3022 ;;      Totals:         1       0       0       0       0
  3023 ;;Total ram usage:        1 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    2
  3026 ;; This function calls:
  3027 ;;		i1_lcd_cmd
  3028 ;; This function is called by:
  3029 ;;		_testing
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function i1_lcd_clear_all
  3035  06CF                     i1_lcd_clear_all:	
  3036                           
  3037                           ;LCD.c: 29:     lcd_cmd(0x01);
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in i1_lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  3041  06CF  3001               	movlw	1
  3042  06D0  118A  2588  118A   	fcall	i1_lcd_cmd
  3043                           
  3044                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  3045  06D3  300C               	movlw	12
  3046  06D4  00F4               	movwf	??i1_lcd_clear_all
  3047  06D5                     u105_27:	
  3048  06D5  0BF4               	decfsz	??i1_lcd_clear_all,f
  3049  06D6  2ED5               	goto	u105_27
  3050  06D7  0000               	nop
  3051  06D8  0008               	return
  3052  06D9                     __end_ofi1_lcd_clear_all:	
  3053                           
  3054                           	psect	text18
  3055  0588                     __ptext18:	
  3056 ;; *************** function i1_lcd_cmd *****************
  3057 ;; Defined at:
  3058 ;;		line 74 in file "LCD.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  c               1    wreg     unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  c               1    3[COMMON] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, pclath, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3072 ;;      Params:         0       0       0       0       0
  3073 ;;      Locals:         1       0       0       0       0
  3074 ;;      Temps:          2       0       0       0       0
  3075 ;;      Totals:         3       0       0       0       0
  3076 ;;Total ram usage:        3 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    1
  3079 ;; This function calls:
  3080 ;;		i1_enable
  3081 ;; This function is called by:
  3082 ;;		_testing
  3083 ;;		i1_lcd_print
  3084 ;;		i1_lcd_clear_all
  3085 ;;		i1_lcd_clear_line
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function i1_lcd_cmd
  3091  0588                     i1_lcd_cmd:	
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3095                           ;i1lcd_cmd@c stored from wreg
  3096  0588  00F3               	movwf	i1lcd_cmd@c
  3097                           
  3098                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  3099  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3100  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3101  058B  1086               	bcf	6,1	;volatile
  3102                           
  3103                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  3104  058C  300C               	movlw	12
  3105  058D  00F1               	movwf	??i1_lcd_cmd
  3106  058E                     u106_27:	
  3107  058E  0BF1               	decfsz	??i1_lcd_cmd,f
  3108  058F  2D8E               	goto	u106_27
  3109  0590  0000               	nop
  3110                           
  3111                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  3112  0591  0873               	movf	i1lcd_cmd@c,w
  3113  0592  00F1               	movwf	??i1_lcd_cmd
  3114  0593  3004               	movlw	4
  3115  0594                     u47_25:	
  3116  0594  1003               	clrc
  3117  0595  0CF1               	rrf	??i1_lcd_cmd,f
  3118  0596  3EFF               	addlw	-1
  3119  0597  1D03               	skipz
  3120  0598  2D94               	goto	u47_25
  3121  0599  300F               	movlw	15
  3122  059A  0571               	andwf	??i1_lcd_cmd,w
  3123  059B  00F2               	movwf	??i1_lcd_cmd+1
  3124  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3125  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3126  059E  0805               	movf	5,w	;volatile
  3127  059F  39F0               	andlw	240
  3128  05A0  0472               	iorwf	??i1_lcd_cmd+1,w
  3129  05A1  0085               	movwf	5	;volatile
  3130                           
  3131                           ;LCD.c: 83:     enable();
  3132  05A2  118A  26C3  118A   	fcall	i1_enable
  3133                           
  3134                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  3135  05A5  300F               	movlw	15
  3136  05A6  0573               	andwf	i1lcd_cmd@c,w
  3137  05A7  00F1               	movwf	??i1_lcd_cmd
  3138  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3139  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3140  05AA  0805               	movf	5,w	;volatile
  3141  05AB  39F0               	andlw	240
  3142  05AC  0471               	iorwf	??i1_lcd_cmd,w
  3143  05AD  0085               	movwf	5	;volatile
  3144                           
  3145                           ;LCD.c: 86:     enable();
  3146  05AE  118A  26C3  118A   	fcall	i1_enable
  3147                           
  3148                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  3149  05B1  300C               	movlw	12
  3150  05B2  00F1               	movwf	??i1_lcd_cmd
  3151  05B3                     u107_27:	
  3152  05B3  0BF1               	decfsz	??i1_lcd_cmd,f
  3153  05B4  2DB3               	goto	u107_27
  3154  05B5  0000               	nop
  3155  05B6  0008               	return
  3156  05B7                     __end_ofi1_lcd_cmd:	
  3157                           
  3158                           	psect	text19
  3159  06C3                     __ptext19:	
  3160 ;; *************** function i1_enable *****************
  3161 ;; Defined at:
  3162 ;;		line 106 in file "LCD.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0
  3178 ;;      Temps:          1       0       0       0       0
  3179 ;;      Totals:         1       0       0       0       0
  3180 ;;Total ram usage:        1 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		i1_lcd_cmd
  3186 ;;		i1_lcd_data
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function i1_enable
  3192  06C3                     i1_enable:	
  3193                           
  3194                           ;LCD.c: 108:     RB2 = 1;
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in i1_enable: [wreg]
  3198  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3199  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3200  06C5  1506               	bsf	6,2	;volatile
  3201                           
  3202                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  3203  06C6  300C               	movlw	12
  3204  06C7  00F0               	movwf	??i1_enable
  3205  06C8                     u108_27:	
  3206  06C8  0BF0               	decfsz	??i1_enable,f
  3207  06C9  2EC8               	goto	u108_27
  3208  06CA  0000               	nop
  3209                           
  3210                           ;LCD.c: 112:     RB2 = 0;
  3211  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3212  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3213  06CD  1106               	bcf	6,2	;volatile
  3214  06CE  0008               	return
  3215  06CF                     __end_ofi1_enable:	
  3216  007E                     btemp	set	126	;btemp
  3217  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    344
    Data        2
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     26      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@string	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> itoa@buffer(COMMON[8]), 

    text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    lcd_print@text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), STR_1(CODE[12]), users(CODE[14]), chores(CODE[330]), 

    lcd_print@pointer	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), STR_1(CODE[12]), users(CODE[14]), chores(CODE[330]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _testing in COMMON

    _testing->i1_lcd_print
    i1_lcd_print->i1_lcd_cmd
    i1_lcd_print->i1_lcd_data
    i1_lcd_clear_line->i1_lcd_cmd
    i1_lcd_clear_line->i1_lcd_data
    i1_lcd_data->i1_enable
    i1_lcd_clear_all->i1_lcd_cmd
    i1_lcd_cmd->i1_enable

Critical Paths under _main in BANK0

    _main->___wmul
    _lcd_print->___bmul
    _lcd_print->_lcd_cmd
    _lcd_print->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_clear_line->_lcd_cmd
    _lcd_clear_line->_lcd_data
    _lcd_data->_enable
    _lcd_clear_all->_lcd_cmd
    _lcd_cmd->_enable
    ___wmul->___awmod
    ___awmod->_random

Critical Paths under _testing in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _testing in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _testing in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _testing in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3543
                                             22 BANK0      4     4      0
                            ___awmod
                             ___bmul
                             ___wmul
                      _lcd_clear_all
                     _lcd_clear_line
                           _lcd_init
                          _lcd_print
                             _random
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     222
                                              6 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _random                                               3     3      0      72
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            8     3      5    1335
                                             10 BANK0      8     3      5
                             ___bmul (ARG)
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                             10 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_line                                       4     4      0     156
                                             10 BANK0      4     4      0
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              7 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_all                                        1     1      0      44
                                             10 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              7 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                             16 BANK0      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              9 BANK0      7     3      4
                             _random (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _testing                                              6     6      0     571
                                              0 BANK0      6     6      0
                    i1_lcd_clear_all
                   i1_lcd_clear_line
                          i1_lcd_cmd
                        i1_lcd_print
 ---------------------------------------------------------------------------------
 (5) i1_lcd_print                                          8     3      5     327
                                              4 COMMON     8     3      5
                          i1_lcd_cmd
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_line                                     4     4      0     156
                                              4 COMMON     4     4      0
                          i1_lcd_cmd
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (6) i1_lcd_data                                           3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_all                                      1     1      0      44
                                              4 COMMON     1     1      0
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (6) i1_lcd_cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (7) i1_enable                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _random (ARG)
   ___bmul
   ___wmul
     ___awmod (ARG)
       _random (ARG)
   _lcd_clear_all
     _lcd_cmd
       _enable
   _lcd_clear_line
     _lcd_cmd
       _enable
     _lcd_data
       _enable
   _lcd_init
     _lcd_cmd
       _enable
   _lcd_print
     ___bmul (ARG)
     _lcd_cmd (ARG)
       _enable
     _lcd_data (ARG)
       _enable
   _random
   _strlen

 _testing (ROOT)
   i1_lcd_clear_all
     i1_lcd_cmd
       i1_enable
   i1_lcd_clear_line
     i1_lcd_cmd
       i1_enable
     i1_lcd_data
       i1_enable
   i1_lcd_cmd
     i1_enable
   i1_lcd_print
     i1_lcd_cmd
       i1_enable
     i1_lcd_data
       i1_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      27       5       48.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Nov 10 23:20:34 2019

                        pc 0002             ___bmul@product 0028                __CFG_CP$OFF 0000  
                       fsr 0004        ___wmul@multiplicand 0032                        l125 0302  
                      l155 05C1                        l253 061B                        _GIE 005F  
                      _RB1 0031                        _RB2 0032                        _RA7 002F  
                      _PS0 0408                        _PS1 0409                        _PS2 040A  
             __CFG_CPD$OFF 0000                        u605 0623                        u525 055E  
                      u455 0535                        u535 0582                        u705 04A0  
                      u465 0639                        u495 04C0                        _PSA 040B  
                      u675 0486                        u595 061C                        u907 03BE  
                      u917 03C8                        u695 0497                        u927 03D3  
                      u937 03DE                        u947 03E9                        u957 03F4  
                      u967 03FF                        u977 040A                        u897 0347  
                      u987 0415                        u997 06BF                        fsr0 0004  
                      indf 0000               ___awmod@sign 002F               __CFG_IESO$ON 0000  
               i1_lcd_data 0654            i1_lcd_clear_all 06CF               __CFG_LVP$OFF 0000  
                     l1311 0476                       l1241 05CB                       l1323 0483  
                     l1315 047D                       l1325 0491                       l1333 04AA  
                     l1181 04CC                       l1245 05CD                       l1413 02F4  
                     l1405 02D2                       l1255 05DD                       l1271 0694  
                     l1415 02EA                       l1337 04B2                       l1329 049F  
                     l1433 03B8                       l1425 036B                       l1417 0304  
                     l1291 069A                       l1277 0613                       l1197 056D  
                     l1269 067B                       l1295 06A0                       STR_1 026A  
                     _T0CS 040D                       u1007 052D                       u1017 0554  
                     u1027 06B0                       _TMR0 0001                       _TMR1 000E  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 0276  
                     _rand 003E                       _text 003C                       btemp 007E  
                     _user 0043                       start 0011          ___bmul@multiplier 0029  
            __CFG_MCLRE$ON 0000                 i1lcd_cmd@c 0073                i1_lcd_print 04F0  
         i1_lcd_clear_line 05E4            ??_lcd_clear_all 002A                      ?_main 0070  
            __CFG_WDTE$OFF 0000            __end_of___awmod 04B7                      i1l140 045D  
                    i1l135 0436                      i1l136 042D                      _PORTA 0005  
                    _PORTB 0006                      u47_25 0594                      u48_25 065B  
                    _TRISA 0085                      _TRISB 0086                      u73_25 04F7  
                    u76_25 05E8                      u77_25 05FE             __CFG_CCPMX$RB0 0000  
             lcd_print@pos 002E            __end_of_lcd_cmd 0558                      _users 025C  
           __CFG_BOREN$OFF 0000                      pclath 000A            __end_of_testing 046A  
         __end_ofi1_enable 06CF                      status 0003                      wtemp0 007E  
          __initialization 0013         __size_ofi1_lcd_cmd 002F                i1lcd_data@d 0073  
             __end_of_main 03C4                     ??_main 0036    __end_ofi1_lcd_clear_all 06D9  
         ??_lcd_clear_line 002A                ?i1_lcd_data 0070             i1lcd_print@pos 0078  
                   _INT0IE 005C                     _INT0IF 0059                     i1l1351 0503  
                   u103_27 0429                     i1l1363 05F5                     i1l1373 060B  
                   i1l1445 042F                     u104_27 0453                     u105_27 06D5  
                   u106_27 058E                     u107_27 05B3                     u108_27 06C8  
                   _TMR0IE 005D                     _TMR0IF 005A            lcd_clear_line@i 002C  
           __CFG_PWRTE$OFF 0000              lcd_print@line 002D              lcd_print@size 002C  
            lcd_print@text 002A           __end_of_lcd_data 0654           __end_of_lcd_init 0419  
                   ___bmul 0696                     ___wmul 060F                  ??___awmod 002D  
                   _enable 06A9                     _chores 0112                     _lastrb 007C  
                   _random 05B7            ___awmod@divisor 0029                     _scores 003A  
          ___awmod@counter 002E                  ??_lcd_cmd 0027                     _strlen 0676  
                   saved_w 007E                  ??_testing 0020          __end_ofi1_lcd_cmd 05B7  
     i1lcd_clear_line@line 0075    __end_of__initialization 0027        ___bmul@multiplicand 0026  
           __pcstackCOMMON 0070        __size_ofi1_lcd_data 0022               __pidataBANK0 06D9  
            __end_of_users 026A           ?i1_lcd_clear_all 0070                  ?i1_enable 0070  
              random@count 0040         __size_of_lcd_print 0039   __end_ofi1_lcd_clear_line 060F  
               __pbssBANK0 003A                 __pmaintext 0276               ?i1_lcd_print 0074  
                  ?___bmul 0026                    ?___wmul 0030                 __pintentry 0004  
                  ?_enable 0070            i1lcd_print@line 0077            i1lcd_print@size 0076  
          i1lcd_print@text 0074                    ?_random 0070                    ?_strlen 0026  
               ??i1_enable 0070                  ?_lcd_data 0070                  ?_lcd_init 0070  
               __stringtab 0100             random@original 0028               strlen@result 002B  
          __size_of___bmul 0013          __end_of_lcd_print 04F0               strlen@string 0026  
                  ___awmod 046A            __size_of___wmul 0023            __size_of_enable 000E  
          __size_of_random 002D      __end_of_lcd_clear_all 06C3                    __ptext1 0676  
                  __ptext2 05B7                    __ptext3 04B7                    __ptext4 03C4  
                  __ptext5 0558                    __ptext6 0632                    __ptext7 06B7  
                  __ptext8 0525                    __ptext9 06A9                    _lcd_cmd 0525  
                  _lcd_off 007D            __size_of_strlen 0020           ___awmod@dividend 002B  
             ??i1_lcd_data 0071                    _testing 0419                 ??_lcd_data 0027  
               ??_lcd_init 002A       end_of_initialization 0027         __end_ofi1_lcd_data 0676  
             __pstringtext 0100                    strlen@i 0029         lcd_clear_line@line 002B  
                i1_lcd_cmd 0588             __end_of___bmul 06A9       __size_ofi1_lcd_print 0035  
           __end_of___wmul 0632             __end_of_enable 06B7             __end_of_chores 025C  
           __end_of_random 05E4             __end_of_strlen 0696        start_initialization 0013  
        __size_ofi1_enable 000C          ?i1_lcd_clear_line 0070    __size_of_lcd_clear_line 0030  
               ?i1_lcd_cmd 0070         ??i1_lcd_clear_line 0074           lcd_print@pointer 0030  
                 ??___bmul 0027                   ??___wmul 0034                   ??_enable 0026  
              __pdataBANK0 0045                   ??_random 0026                   ??_strlen 0028  
              __pbssCOMMON 007C                  ___latbits 0001              __pcstackBANK0 0020  
 __size_ofi1_lcd_clear_all 000A                 random@rand 0041                 random@rbit 0027  
        __size_of_lcd_data 0022          __size_of_lcd_init 0055                   ?___awmod 0029  
                _lcd_print 04B7                   ?_lcd_cmd 0070                   ?_testing 0070  
              ??i1_lcd_cmd 0071          interrupt_function 0004             ___wmul@product 0034  
                _long_text 0042                  _space_pos 0045                  lcd_data@d 0029  
               ?_lcd_print 002A                __stringbase 0112          ___wmul@multiplier 0030  
                 i1_enable 06C3                _btn_pressed 0044         i1lcd_print@pointer 007A  
           _lcd_clear_line 0558          i1lcd_clear_line@i 0076     __size_of_lcd_clear_all 000C  
        ??i1_lcd_clear_all 0074           __size_of___awmod 004D         __end_of__stringtab 0112  
         __size_of_lcd_cmd 0033     __end_of_lcd_clear_line 0588                   __ptext10 060F  
                 __ptext11 0696                   __ptext12 046A                   __ptext13 0419  
                 __ptext14 04F0                   __ptext15 05E4                   __ptext16 0654  
                 __ptext17 06CF                   __ptext18 0588                   __ptext19 06C3  
                 _lcd_data 0632                   _lcd_init 03C4           __size_of_testing 0051  
            __size_of_main 014E              ??i1_lcd_print 0079  __size_ofi1_lcd_clear_line 002B  
                 lcd_cmd@c 0029                ??_lcd_print 002F              _lcd_clear_all 06B7  
          ?_lcd_clear_line 0070                   intlevel1 0000                  stringcode 010A  
           ?_lcd_clear_all 0070        __end_ofi1_lcd_print 0525                   stringtab 0100  
       __CFG_FOSC$INTOSCIO 0000  
