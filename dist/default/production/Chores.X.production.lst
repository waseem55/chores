

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Nov 11 02:39:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F88 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  0105                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227  05DF                     __pidataBANK0:	
   228                           
   229                           ;initializer for _space_pos
   230  05DF  3410               	retlw	16
   231  05E0  3400               	retlw	0
   232                           
   233                           ;initializer for _print
   234  05E1  3401               	retlw	1
   235                           
   236                           	psect	stringtext
   237  0200                     __pstringtext:	
   238  0200                     stringtab:	
   239  0200                     __stringtab:	
   240                           
   241                           ;	String table - string pointers are 2 bytes each
   242  0200  1BFF               	btfsc	btemp+1,7
   243  0201  2A0A               	ljmp	stringcode
   244  0202  1383               	bcf	3,7
   245  0203  187F               	btfsc	btemp+1,0
   246  0204  1783               	bsf	3,7
   247  0205  0800               	movf	0,w
   248  0206  0A84               	incf	4,f
   249  0207  1903               	skipnz
   250  0208  0AFF               	incf	btemp+1,f
   251  0209  0008               	return
   252  020A                     stringcode:	
   253  020A  087F               	movf	btemp+1,w
   254  020B  397F               	andlw	127
   255  020C  008A               	movwf	10
   256  020D  0804               	movf	4,w
   257  020E  0A84               	incf	4,f
   258  020F  1903               	skipnz
   259  0210  0AFF               	incf	btemp+1,f
   260  0211  0082               	movwf	2
   261  0212                     __stringbase:	
   262  0212                     __end_of__stringtab:	
   263  0212                     _chores:	
   264  0212  3456               	retlw	86
   265  0213  3461               	retlw	97
   266  0214  3463               	retlw	99
   267  0215  3475               	retlw	117
   268  0216  3475               	retlw	117
   269  0217  346D               	retlw	109
   270  0218  3400               	retlw	0
   271  0219  3400               	retlw	0
   272  021A  3400               	retlw	0
   273  021B  3400               	retlw	0
   274  021C  3400               	retlw	0
   275  021D  3400               	retlw	0
   276  021E  3400               	retlw	0
   277  021F  3400               	retlw	0
   278  0220  3400               	retlw	0
   279  0221  3400               	retlw	0
   280  0222  3400               	retlw	0
   281  0223  3400               	retlw	0
   282  0224  3400               	retlw	0
   283  0225  3400               	retlw	0
   284  0226  3400               	retlw	0
   285  0227  3400               	retlw	0
   286  0228  3400               	retlw	0
   287  0229  3400               	retlw	0
   288  022A  3400               	retlw	0
   289  022B  3400               	retlw	0
   290  022C  3400               	retlw	0
   291  022D  3400               	retlw	0
   292  022E  3400               	retlw	0
   293  022F  3400               	retlw	0
   294  0230  3443               	retlw	67
   295  0231  346C               	retlw	108
   296  0232  3465               	retlw	101
   297  0233  3461               	retlw	97
   298  0234  346E               	retlw	110
   299  0235  3420               	retlw	32
   300  0236  3462               	retlw	98
   301  0237  3461               	retlw	97
   302  0238  3474               	retlw	116
   303  0239  3468               	retlw	104
   304  023A  3472               	retlw	114
   305  023B  346F               	retlw	111
   306  023C  346F               	retlw	111
   307  023D  346D               	retlw	109
   308  023E  3400               	retlw	0
   309  023F  3400               	retlw	0
   310  0240  3400               	retlw	0
   311  0241  3400               	retlw	0
   312  0242  3400               	retlw	0
   313  0243  3400               	retlw	0
   314  0244  3400               	retlw	0
   315  0245  3400               	retlw	0
   316  0246  3400               	retlw	0
   317  0247  3400               	retlw	0
   318  0248  3400               	retlw	0
   319  0249  3400               	retlw	0
   320  024A  3400               	retlw	0
   321  024B  3400               	retlw	0
   322  024C  3400               	retlw	0
   323  024D  3400               	retlw	0
   324  024E  344D               	retlw	77
   325  024F  346F               	retlw	111
   326  0250  3470               	retlw	112
   327  0251  3420               	retlw	32
   328  0252  3466               	retlw	102
   329  0253  346C               	retlw	108
   330  0254  346F               	retlw	111
   331  0255  346F               	retlw	111
   332  0256  3472               	retlw	114
   333  0257  3400               	retlw	0
   334  0258  3400               	retlw	0
   335  0259  3400               	retlw	0
   336  025A  3400               	retlw	0
   337  025B  3400               	retlw	0
   338  025C  3400               	retlw	0
   339  025D  3400               	retlw	0
   340  025E  3400               	retlw	0
   341  025F  3400               	retlw	0
   342  0260  3400               	retlw	0
   343  0261  3400               	retlw	0
   344  0262  3400               	retlw	0
   345  0263  3400               	retlw	0
   346  0264  3400               	retlw	0
   347  0265  3400               	retlw	0
   348  0266  3400               	retlw	0
   349  0267  3400               	retlw	0
   350  0268  3400               	retlw	0
   351  0269  3400               	retlw	0
   352  026A  3400               	retlw	0
   353  026B  3400               	retlw	0
   354  026C  3457               	retlw	87
   355  026D  3461               	retlw	97
   356  026E  3473               	retlw	115
   357  026F  3468               	retlw	104
   358  0270  3420               	retlw	32
   359  0271  3462               	retlw	98
   360  0272  3465               	retlw	101
   361  0273  3464               	retlw	100
   362  0274  3420               	retlw	32
   363  0275  3473               	retlw	115
   364  0276  3468               	retlw	104
   365  0277  3465               	retlw	101
   366  0278  3465               	retlw	101
   367  0279  3474               	retlw	116
   368  027A  3473               	retlw	115
   369  027B  3400               	retlw	0
   370  027C  3400               	retlw	0
   371  027D  3400               	retlw	0
   372  027E  3400               	retlw	0
   373  027F  3400               	retlw	0
   374  0280  3400               	retlw	0
   375  0281  3400               	retlw	0
   376  0282  3400               	retlw	0
   377  0283  3400               	retlw	0
   378  0284  3400               	retlw	0
   379  0285  3400               	retlw	0
   380  0286  3400               	retlw	0
   381  0287  3400               	retlw	0
   382  0288  3400               	retlw	0
   383  0289  3400               	retlw	0
   384  028A  3457               	retlw	87
   385  028B  3461               	retlw	97
   386  028C  3473               	retlw	115
   387  028D  3468               	retlw	104
   388  028E  3420               	retlw	32
   389  028F  3463               	retlw	99
   390  0290  3475               	retlw	117
   391  0291  3472               	retlw	114
   392  0292  3474               	retlw	116
   393  0293  3461               	retlw	97
   394  0294  3469               	retlw	105
   395  0295  346E               	retlw	110
   396  0296  3473               	retlw	115
   397  0297  3400               	retlw	0
   398  0298  3400               	retlw	0
   399  0299  3400               	retlw	0
   400  029A  3400               	retlw	0
   401  029B  3400               	retlw	0
   402  029C  3400               	retlw	0
   403  029D  3400               	retlw	0
   404  029E  3400               	retlw	0
   405  029F  3400               	retlw	0
   406  02A0  3400               	retlw	0
   407  02A1  3400               	retlw	0
   408  02A2  3400               	retlw	0
   409  02A3  3400               	retlw	0
   410  02A4  3400               	retlw	0
   411  02A5  3400               	retlw	0
   412  02A6  3400               	retlw	0
   413  02A7  3400               	retlw	0
   414  02A8  3444               	retlw	68
   415  02A9  3475               	retlw	117
   416  02AA  3473               	retlw	115
   417  02AB  3474               	retlw	116
   418  02AC  3469               	retlw	105
   419  02AD  346E               	retlw	110
   420  02AE  3467               	retlw	103
   421  02AF  3400               	retlw	0
   422  02B0  3400               	retlw	0
   423  02B1  3400               	retlw	0
   424  02B2  3400               	retlw	0
   425  02B3  3400               	retlw	0
   426  02B4  3400               	retlw	0
   427  02B5  3400               	retlw	0
   428  02B6  3400               	retlw	0
   429  02B7  3400               	retlw	0
   430  02B8  3400               	retlw	0
   431  02B9  3400               	retlw	0
   432  02BA  3400               	retlw	0
   433  02BB  3400               	retlw	0
   434  02BC  3400               	retlw	0
   435  02BD  3400               	retlw	0
   436  02BE  3400               	retlw	0
   437  02BF  3400               	retlw	0
   438  02C0  3400               	retlw	0
   439  02C1  3400               	retlw	0
   440  02C2  3400               	retlw	0
   441  02C3  3400               	retlw	0
   442  02C4  3400               	retlw	0
   443  02C5  3400               	retlw	0
   444  02C6  3443               	retlw	67
   445  02C7  346C               	retlw	108
   446  02C8  3465               	retlw	101
   447  02C9  3461               	retlw	97
   448  02CA  346E               	retlw	110
   449  02CB  3420               	retlw	32
   450  02CC  346D               	retlw	109
   451  02CD  3469               	retlw	105
   452  02CE  3463               	retlw	99
   453  02CF  3472               	retlw	114
   454  02D0  346F               	retlw	111
   455  02D1  3477               	retlw	119
   456  02D2  3461               	retlw	97
   457  02D3  3476               	retlw	118
   458  02D4  3465               	retlw	101
   459  02D5  3400               	retlw	0
   460  02D6  3400               	retlw	0
   461  02D7  3400               	retlw	0
   462  02D8  3400               	retlw	0
   463  02D9  3400               	retlw	0
   464  02DA  3400               	retlw	0
   465  02DB  3400               	retlw	0
   466  02DC  3400               	retlw	0
   467  02DD  3400               	retlw	0
   468  02DE  3400               	retlw	0
   469  02DF  3400               	retlw	0
   470  02E0  3400               	retlw	0
   471  02E1  3400               	retlw	0
   472  02E2  3400               	retlw	0
   473  02E3  3400               	retlw	0
   474  02E4  3453               	retlw	83
   475  02E5  3463               	retlw	99
   476  02E6  3472               	retlw	114
   477  02E7  3475               	retlw	117
   478  02E8  3462               	retlw	98
   479  02E9  3420               	retlw	32
   480  02EA  3464               	retlw	100
   481  02EB  346F               	retlw	111
   482  02EC  346F               	retlw	111
   483  02ED  3472               	retlw	114
   484  02EE  3473               	retlw	115
   485  02EF  3420               	retlw	32
   486  02F0  3461               	retlw	97
   487  02F1  346E               	retlw	110
   488  02F2  3464               	retlw	100
   489  02F3  3420               	retlw	32
   490  02F4  3463               	retlw	99
   491  02F5  3461               	retlw	97
   492  02F6  3462               	retlw	98
   493  02F7  3469               	retlw	105
   494  02F8  346E               	retlw	110
   495  02F9  3465               	retlw	101
   496  02FA  3474               	retlw	116
   497  02FB  3473               	retlw	115
   498  02FC  3400               	retlw	0
   499  02FD  3400               	retlw	0
   500  02FE  3400               	retlw	0
   501  02FF  3400               	retlw	0
   502  0300  3400               	retlw	0
   503  0301  3400               	retlw	0
   504  0302  344F               	retlw	79
   505  0303  3472               	retlw	114
   506  0304  3467               	retlw	103
   507  0305  3461               	retlw	97
   508  0306  346E               	retlw	110
   509  0307  3469               	retlw	105
   510  0308  347A               	retlw	122
   511  0309  3465               	retlw	101
   512  030A  3420               	retlw	32
   513  030B  3463               	retlw	99
   514  030C  346C               	retlw	108
   515  030D  346F               	retlw	111
   516  030E  3473               	retlw	115
   517  030F  3465               	retlw	101
   518  0310  3474               	retlw	116
   519  0311  3400               	retlw	0
   520  0312  3400               	retlw	0
   521  0313  3400               	retlw	0
   522  0314  3400               	retlw	0
   523  0315  3400               	retlw	0
   524  0316  3400               	retlw	0
   525  0317  3400               	retlw	0
   526  0318  3400               	retlw	0
   527  0319  3400               	retlw	0
   528  031A  3400               	retlw	0
   529  031B  3400               	retlw	0
   530  031C  3400               	retlw	0
   531  031D  3400               	retlw	0
   532  031E  3400               	retlw	0
   533  031F  3400               	retlw	0
   534  0320  3443               	retlw	67
   535  0321  346C               	retlw	108
   536  0322  3465               	retlw	101
   537  0323  3461               	retlw	97
   538  0324  346E               	retlw	110
   539  0325  3420               	retlw	32
   540  0326  3475               	retlw	117
   541  0327  346E               	retlw	110
   542  0328  3464               	retlw	100
   543  0329  3465               	retlw	101
   544  032A  3472               	retlw	114
   545  032B  3420               	retlw	32
   546  032C  3473               	retlw	115
   547  032D  3469               	retlw	105
   548  032E  346E               	retlw	110
   549  032F  346B               	retlw	107
   550  0330  3473               	retlw	115
   551  0331  3400               	retlw	0
   552  0332  3400               	retlw	0
   553  0333  3400               	retlw	0
   554  0334  3400               	retlw	0
   555  0335  3400               	retlw	0
   556  0336  3400               	retlw	0
   557  0337  3400               	retlw	0
   558  0338  3400               	retlw	0
   559  0339  3400               	retlw	0
   560  033A  3400               	retlw	0
   561  033B  3400               	retlw	0
   562  033C  3400               	retlw	0
   563  033D  3400               	retlw	0
   564  033E  3443               	retlw	67
   565  033F  346C               	retlw	108
   566  0340  3465               	retlw	101
   567  0341  3461               	retlw	97
   568  0342  346E               	retlw	110
   569  0343  3420               	retlw	32
   570  0344  3466               	retlw	102
   571  0345  3472               	retlw	114
   572  0346  3469               	retlw	105
   573  0347  3464               	retlw	100
   574  0348  3467               	retlw	103
   575  0349  3465               	retlw	101
   576  034A  3400               	retlw	0
   577  034B  3400               	retlw	0
   578  034C  3400               	retlw	0
   579  034D  3400               	retlw	0
   580  034E  3400               	retlw	0
   581  034F  3400               	retlw	0
   582  0350  3400               	retlw	0
   583  0351  3400               	retlw	0
   584  0352  3400               	retlw	0
   585  0353  3400               	retlw	0
   586  0354  3400               	retlw	0
   587  0355  3400               	retlw	0
   588  0356  3400               	retlw	0
   589  0357  3400               	retlw	0
   590  0358  3400               	retlw	0
   591  0359  3400               	retlw	0
   592  035A  3400               	retlw	0
   593  035B  3400               	retlw	0
   594  035C                     __end_of_chores:	
   595  035C                     _users:	
   596  035C  3457               	retlw	87
   597  035D  3461               	retlw	97
   598  035E  3473               	retlw	115
   599  035F  3465               	retlw	101
   600  0360  3465               	retlw	101
   601  0361  346D               	retlw	109
   602  0362  3400               	retlw	0
   603  0363  3448               	retlw	72
   604  0364  3469               	retlw	105
   605  0365  3462               	retlw	98
   606  0366  3461               	retlw	97
   607  0367  3400               	retlw	0
   608  0368  3400               	retlw	0
   609  0369  3400               	retlw	0
   610  036A                     __end_of_users:	
   611  000E                     _TMR1	set	14
   612  0001                     _TMR0	set	1
   613  0006                     _PORTB	set	6
   614  0005                     _PORTA	set	5
   615  002F                     _RA7	set	47
   616  005A                     _TMR0IF	set	90
   617  005F                     _GIE	set	95
   618  005D                     _TMR0IE	set	93
   619  005C                     _INT0IE	set	92
   620  0059                     _INT0IF	set	89
   621  0032                     _RB2	set	50
   622  0031                     _RB1	set	49
   623  0086                     _TRISB	set	134
   624  0085                     _TRISA	set	133
   625  0408                     _PS0	set	1032
   626  0409                     _PS1	set	1033
   627  040A                     _PS2	set	1034
   628  040B                     _PSA	set	1035
   629  040D                     _T0CS	set	1037
   630  036A                     STR_1:	
   631  036A  3473               	retlw	115	;'s'
   632  036B  346C               	retlw	108	;'l'
   633  036C  3465               	retlw	101	;'e'
   634  036D  3465               	retlw	101	;'e'
   635  036E  3470               	retlw	112	;'p'
   636  036F  3420               	retlw	32	;' '
   637  0370  3474               	retlw	116	;'t'
   638  0371  3469               	retlw	105	;'i'
   639  0372  346D               	retlw	109	;'m'
   640  0373  3465               	retlw	101	;'e'
   641  0374  3421               	retlw	33	;'!'
   642  0375  3400               	retlw	0
   643                           
   644                           ; #config settings
   645  0000                     
   646                           	psect	cinit
   647  000D                     start_initialization:	
   648  000D                     __initialization:	
   649                           
   650                           ; Initialize objects allocated to BANK0
   651  000D  118A  25DF  118A   	fcall	__pidataBANK0	;fetch initializer
   652  0010  00BE               	movwf	__pdataBANK0& (0+127)
   653  0011  118A  25E0  118A   	fcall	__pidataBANK0+1	;fetch initializer
   654  0014  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   655  0015  118A  25E1         	fcall	__pidataBANK0+2	;fetch initializer
   656  0017  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   657                           
   658                           ; Clear objects allocated to BANK0
   659  0018  01B4               	clrf	__pbssBANK0& (0+127)
   660  0019  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   661  001A  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   662  001B  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   663  001C  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   664  001D  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   665  001E  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   666  001F  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   667  0020  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   668  0021  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   669                           
   670                           ; Clear objects allocated to COMMON
   671  0022  01F7               	clrf	__pbssCOMMON& (0+127)
   672  0023  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   673  0024  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   674  0025                     end_of_initialization:	
   675                           ;End of C runtime variable initialization code
   676                           
   677  0025                     __end_of__initialization:	
   678  0025  0183               	clrf	3
   679  0026  118A  2828         	ljmp	_main	;jump to C main() function
   680                           
   681                           	psect	bssCOMMON
   682  0077                     __pbssCOMMON:	
   683  0077                     _scores:	
   684  0077                     	ds	2
   685  0079                     _lastrb:	
   686  0079                     	ds	1
   687                           
   688                           	psect	bssBANK0
   689  0034                     __pbssBANK0:	
   690  0034                     _text:	
   691  0034                     	ds	2
   692  0036                     _rand:	
   693  0036                     	ds	2
   694  0038                     random@count:	
   695  0038                     	ds	1
   696  0039                     random@rand:	
   697  0039                     	ds	1
   698  003A                     _long_text:	
   699  003A                     	ds	1
   700  003B                     _user:	
   701  003B                     	ds	1
   702  003C                     _asleep:	
   703  003C                     	ds	1
   704  003D                     _btn_pressed:	
   705  003D                     	ds	1
   706                           
   707                           	psect	dataBANK0
   708  003E                     __pdataBANK0:	
   709  003E                     _space_pos:	
   710  003E                     	ds	2
   711  0040                     _print:	
   712  0040                     	ds	1
   713                           
   714                           	psect	cstackCOMMON
   715  0070                     __pcstackCOMMON:	
   716  0070                     ?_lcd_cmd:	
   717  0070                     ?_lcd_data:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_enable:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_random:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_lcd_clear_all:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_lcd_clear_line:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_lcd_init:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_main:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_testing:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?i1_lcd_clear_all:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?i1_lcd_cmd:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?i1_enable:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??i1_enable:	
   751                           ; 1 bytes @ 0x0
   752                           
   753                           
   754                           ; 1 bytes @ 0x0
   755  0070                     	ds	1
   756  0071                     ??i1_lcd_cmd:	
   757                           
   758                           ; 1 bytes @ 0x1
   759  0071                     	ds	2
   760  0073                     i1lcd_cmd@c:	
   761                           
   762                           ; 1 bytes @ 0x3
   763  0073                     	ds	1
   764  0074                     ??i1_lcd_clear_all:	
   765                           
   766                           ; 1 bytes @ 0x4
   767  0074                     	ds	1
   768  0075                     ??_testing:	
   769                           
   770                           ; 1 bytes @ 0x5
   771  0075                     	ds	2
   772                           
   773                           	psect	cstackBANK0
   774  0020                     __pcstackBANK0:	
   775  0020                     ??_enable:	
   776  0020                     ??_random:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0020                     ?_strlen:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0020                     ?___bmul:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0020                     ___bmul@multiplicand:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0020                     strlen@string:	
   789                           ; 1 bytes @ 0x0
   790                           
   791                           
   792                           ; 2 bytes @ 0x0
   793  0020                     	ds	1
   794  0021                     ??_lcd_cmd:	
   795  0021                     ??_lcd_data:	
   796                           ; 1 bytes @ 0x1
   797                           
   798  0021                     ??___bmul:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0021                     random@rbit:	
   802                           ; 1 bytes @ 0x1
   803                           
   804                           
   805                           ; 1 bytes @ 0x1
   806  0021                     	ds	1
   807  0022                     ??_strlen:	
   808  0022                     random@original:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0022                     ___bmul@product:	
   812                           ; 1 bytes @ 0x2
   813                           
   814                           
   815                           ; 1 bytes @ 0x2
   816  0022                     	ds	1
   817  0023                     ?___awmod:	
   818  0023                     lcd_cmd@c:	
   819                           ; 2 bytes @ 0x3
   820                           
   821  0023                     lcd_data@d:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0023                     ___bmul@multiplier:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0023                     strlen@i:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0023                     ___awmod@divisor:	
   831                           ; 2 bytes @ 0x3
   832                           
   833                           
   834                           ; 2 bytes @ 0x3
   835  0023                     	ds	1
   836  0024                     ?_lcd_print:	
   837  0024                     ??_lcd_clear_all:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  0024                     ??_lcd_clear_line:	
   841                           ; 1 bytes @ 0x4
   842                           
   843  0024                     ??_lcd_init:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0024                     lcd_print@text:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 2 bytes @ 0x4
   851  0024                     	ds	1
   852  0025                     lcd_clear_line@line:	
   853  0025                     strlen@result:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0025                     ___awmod@dividend:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0025                     	ds	1
   862  0026                     lcd_print@size:	
   863  0026                     lcd_clear_line@i:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 2 bytes @ 0x6
   868  0026                     	ds	1
   869  0027                     ??___awmod:	
   870  0027                     lcd_print@line:	
   871                           ; 1 bytes @ 0x7
   872                           
   873                           
   874                           ; 1 bytes @ 0x7
   875  0027                     	ds	1
   876  0028                     lcd_print@pos:	
   877  0028                     ___awmod@counter:	
   878                           ; 1 bytes @ 0x8
   879                           
   880                           
   881                           ; 1 bytes @ 0x8
   882  0028                     	ds	1
   883  0029                     ??_lcd_print:	
   884  0029                     ___awmod@sign:	
   885                           ; 1 bytes @ 0x9
   886                           
   887                           
   888                           ; 1 bytes @ 0x9
   889  0029                     	ds	1
   890  002A                     ?___wmul:	
   891  002A                     lcd_print@pointer:	
   892                           ; 2 bytes @ 0xA
   893                           
   894  002A                     ___wmul@multiplier:	
   895                           ; 2 bytes @ 0xA
   896                           
   897                           
   898                           ; 2 bytes @ 0xA
   899  002A                     	ds	2
   900  002C                     ___wmul@multiplicand:	
   901                           
   902                           ; 2 bytes @ 0xC
   903  002C                     	ds	2
   904  002E                     ??___wmul:	
   905  002E                     ___wmul@product:	
   906                           ; 1 bytes @ 0xE
   907                           
   908                           
   909                           ; 2 bytes @ 0xE
   910  002E                     	ds	2
   911  0030                     ??_main:	
   912                           
   913                           ; 1 bytes @ 0x10
   914  0030                     	ds	4
   915                           
   916                           	psect	maintext
   917  0028                     __pmaintext:	
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 57 in file "Main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : B00/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       4       0       0       0
   940 ;;      Totals:         0       4       0       0       0
   941 ;;Total ram usage:        4 bytes
   942 ;; Hardware stack levels required when called:    7
   943 ;; This function calls:
   944 ;;		___awmod
   945 ;;		___bmul
   946 ;;		___wmul
   947 ;;		_lcd_clear_all
   948 ;;		_lcd_clear_line
   949 ;;		_lcd_cmd
   950 ;;		_lcd_init
   951 ;;		_lcd_print
   952 ;;		_random
   953 ;;		_strlen
   954 ;; This function is called by:
   955 ;;		Startup code after reset
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _main
   961  0028                     _main:	
   962                           
   963                           ;Main.c: 59:     TRISA = 0xc0;
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967  0028  30C0               	movlw	192
   968  0029  1683               	bsf	3,5	;RP0=1, select bank1
   969  002A  1303               	bcf	3,6	;RP1=0, select bank1
   970  002B  0085               	movwf	5	;volatile
   971                           
   972                           ;Main.c: 60:     TRISB = 0x01;
   973  002C  3001               	movlw	1
   974  002D  0086               	movwf	6	;volatile
   975                           
   976                           ;Main.c: 61:     PORTA = 0x00;
   977  002E  1283               	bcf	3,5	;RP0=0, select bank0
   978  002F  1303               	bcf	3,6	;RP1=0, select bank0
   979  0030  0185               	clrf	5	;volatile
   980                           
   981                           ;Main.c: 62:     PORTB = 0x00;
   982  0031  0186               	clrf	6	;volatile
   983                           
   984                           ;Main.c: 64:     INT0IF = 0;
   985  0032  108B               	bcf	11,1	;volatile
   986                           
   987                           ;Main.c: 65:     INT0IE = 1;
   988  0033  160B               	bsf	11,4	;volatile
   989                           
   990                           ;Main.c: 66:     T0CS = 0;
   991  0034  1683               	bsf	3,5	;RP0=1, select bank1
   992  0035  1303               	bcf	3,6	;RP1=0, select bank1
   993  0036  1281               	bcf	1,5	;volatile
   994                           
   995                           ;Main.c: 67:     PSA = 0;
   996  0037  1181               	bcf	1,3	;volatile
   997                           
   998                           ;Main.c: 68:     PS2 = 1;
   999  0038  1501               	bsf	1,2	;volatile
  1000                           
  1001                           ;Main.c: 69:     PS1 = 1;
  1002  0039  1481               	bsf	1,1	;volatile
  1003                           
  1004                           ;Main.c: 70:     PS0 = 1;
  1005  003A  1401               	bsf	1,0	;volatile
  1006                           
  1007                           ;Main.c: 71:     TMR0IE = 0;
  1008  003B  128B               	bcf	11,5	;volatile
  1009                           
  1010                           ;Main.c: 73:     GIE = 1;
  1011  003C  178B               	bsf	11,7	;volatile
  1012                           
  1013                           ;Main.c: 76:     lcd_init();
  1014  003D  118A  2376  118A   	fcall	_lcd_init
  1015                           
  1016                           ;Main.c: 78:     rand = (random() % 10);
  1017  0040  300A               	movlw	10
  1018  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0043  00A3               	movwf	___awmod@divisor
  1021  0044  3000               	movlw	0
  1022  0045  00A4               	movwf	___awmod@divisor+1
  1023  0046  118A  24E3  118A   	fcall	_random
  1024  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1025  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1026  004B  00B0               	movwf	??_main
  1027  004C  01B1               	clrf	??_main+1
  1028  004D  0830               	movf	??_main,w
  1029  004E  00A5               	movwf	___awmod@dividend
  1030  004F  0831               	movf	??_main+1,w
  1031  0050  00A6               	movwf	___awmod@dividend+1
  1032  0051  118A  23CB  118A   	fcall	___awmod
  1033  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0056  0824               	movf	?___awmod+1,w
  1036  0057  00B7               	movwf	_rand+1
  1037  0058  0823               	movf	?___awmod,w
  1038  0059  00B6               	movwf	_rand
  1039                           
  1040                           ;Main.c: 79:     text = &chores[rand % 11][0];
  1041  005A  0837               	movf	_rand+1,w
  1042  005B  00A6               	movwf	___awmod@dividend+1
  1043  005C  0836               	movf	_rand,w
  1044  005D  00A5               	movwf	___awmod@dividend
  1045  005E  300B               	movlw	11
  1046  005F  00A3               	movwf	___awmod@divisor
  1047  0060  3000               	movlw	0
  1048  0061  00A4               	movwf	___awmod@divisor+1
  1049  0062  118A  23CB  118A   	fcall	___awmod
  1050  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0067  0824               	movf	?___awmod+1,w
  1053  0068  00AB               	movwf	___wmul@multiplier+1
  1054  0069  0823               	movf	?___awmod,w
  1055  006A  00AA               	movwf	___wmul@multiplier
  1056  006B  301E               	movlw	30
  1057  006C  00AC               	movwf	___wmul@multiplicand
  1058  006D  3000               	movlw	0
  1059  006E  00AD               	movwf	___wmul@multiplicand+1
  1060  006F  118A  2537  118A   	fcall	___wmul
  1061  0072  3012               	movlw	low (_chores| (0+32768))
  1062  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0075  00B0               	movwf	??_main
  1065  0076  3082               	movlw	high (_chores| (0+32768))
  1066  0077  00B1               	movwf	??_main+1
  1067  0078  082A               	movf	?___wmul,w
  1068  0079  0730               	addwf	??_main,w
  1069  007A  00B2               	movwf	??_main+2
  1070  007B  082B               	movf	?___wmul+1,w
  1071  007C  1803               	skipnc
  1072  007D  0A2B               	incf	?___wmul+1,w
  1073  007E  0731               	addwf	??_main+1,w
  1074  007F  00B3               	movwf	??_main+3
  1075  0080  0832               	movf	??_main+2,w
  1076  0081  00B4               	movwf	_text
  1077  0082  0833               	movf	??_main+3,w
  1078  0083  00B5               	movwf	_text+1
  1079                           
  1080                           ;Main.c: 80:     if (strlen(text) > 16)
  1081  0084  0834               	movf	_text,w
  1082  0085  00A0               	movwf	strlen@string
  1083  0086  0835               	movf	_text+1,w
  1084  0087  00A1               	movwf	strlen@string+1
  1085  0088  118A  257C  118A   	fcall	_strlen
  1086  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1087  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1088  008D  00B0               	movwf	??_main
  1089  008E  3011               	movlw	17
  1090  008F  0230               	subwf	??_main,w
  1091  0090  1C03               	skipc
  1092  0091  28B1               	goto	l1529
  1093                           
  1094                           ;Main.c: 81:     {;Main.c: 82:         for (space_pos = 16; text[space_pos] != ' ' && sp
      +                          ace_pos != 0; space_pos--);
  1095  0092  3010               	movlw	16
  1096  0093  00BE               	movwf	_space_pos
  1097  0094  3000               	movlw	0
  1098  0095  00BF               	movwf	_space_pos+1
  1099  0096  28A1               	goto	l1525
  1100  0097                     l1527:	
  1101  0097  083E               	movf	_space_pos,w
  1102  0098  043F               	iorwf	_space_pos+1,w
  1103  0099  1903               	btfsc	3,2
  1104  009A  28AF               	goto	l126
  1105  009B  30FF               	movlw	255
  1106  009C  07BE               	addwf	_space_pos,f
  1107  009D  1803               	skipnc
  1108  009E  0ABF               	incf	_space_pos+1,f
  1109  009F  30FF               	movlw	255
  1110  00A0  07BF               	addwf	_space_pos+1,f
  1111  00A1                     l1525:	
  1112  00A1  083E               	movf	_space_pos,w
  1113  00A2  0734               	addwf	_text,w
  1114  00A3  0084               	movwf	4
  1115  00A4  083F               	movf	_space_pos+1,w
  1116  00A5  1803               	skipnc
  1117  00A6  0A3F               	incf	_space_pos+1,w
  1118  00A7  0735               	addwf	_text+1,w
  1119  00A8  00FF               	movwf	127
  1120  00A9  118A  2200  118A   	fcall	stringtab
  1121  00AC  3A20               	xorlw	32
  1122  00AD  1D03               	btfss	3,2
  1123  00AE  2897               	goto	l1527
  1124  00AF                     l126:	
  1125                           
  1126                           ;Main.c: 83:         long_text = 1;
  1127  00AF  01BA               	clrf	_long_text
  1128  00B0  0ABA               	incf	_long_text,f
  1129  00B1                     l1529:	
  1130                           
  1131                           ;Main.c: 87:     {;Main.c: 88:         if (asleep)
  1132  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00B3  083C               	movf	_asleep,w
  1135  00B4  1903               	btfsc	3,2
  1136  00B5  28DF               	goto	l1543
  1137                           
  1138                           ;Main.c: 89:         {;Main.c: 90:             lcd_clear_all();
  1139  00B6  118A  25BD  118A   	fcall	_lcd_clear_all
  1140                           
  1141                           ;Main.c: 91:             lcd_print("sleep time!", 16, 0, 0);
  1142  00B9  306A               	movlw	low (STR_1| (0+32768))
  1143  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00BC  00A4               	movwf	lcd_print@text
  1146  00BD  3083               	movlw	high (STR_1| (0+32768))
  1147  00BE  00A5               	movwf	lcd_print@text+1
  1148  00BF  3010               	movlw	16
  1149  00C0  00B0               	movwf	??_main
  1150  00C1  0830               	movf	??_main,w
  1151  00C2  00A6               	movwf	lcd_print@size
  1152  00C3  01A7               	clrf	lcd_print@line
  1153  00C4  01A8               	clrf	lcd_print@pos
  1154  00C5  118A  2418  118A   	fcall	_lcd_print
  1155                           
  1156                           ;Main.c: 92:             _delay((unsigned long)((500)*(31000/4000.0)));
  1157  00C8  3006               	movlw	6
  1158  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00CB  00B1               	movwf	??_main+1
  1161  00CC  3006               	movlw	6
  1162  00CD  00B0               	movwf	??_main
  1163  00CE                     u1017:	
  1164  00CE  0BB0               	decfsz	??_main,f
  1165  00CF  28CE               	goto	u1017
  1166  00D0  0BB1               	decfsz	??_main+1,f
  1167  00D1  28CE               	goto	u1017
  1168                           
  1169                           ;Main.c: 93:             lcd_cmd(0x08);
  1170  00D2  3008               	movlw	8
  1171  00D3  118A  2451  118A   	fcall	_lcd_cmd
  1172                           
  1173                           ;Main.c: 94:             btn_pressed = 0;
  1174  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00D8  01BD               	clrf	_btn_pressed
  1177  00D9  0063               	sleep	;# 
  1178                           
  1179                           ;Main.c: 96:             print = 1;
  1180  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1181  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1182  00DC  01C0               	clrf	_print
  1183  00DD  0AC0               	incf	_print,f
  1184                           
  1185                           ;Main.c: 97:         }
  1186  00DE  295F               	goto	l1567
  1187  00DF                     l1543:	
  1188  00DF  083D               	movf	_btn_pressed,w
  1189  00E0  1903               	btfsc	3,2
  1190  00E1  295F               	goto	l1567
  1191                           
  1192                           ;Main.c: 99:         {;Main.c: 100:             print = 1;
  1193  00E2  01C0               	clrf	_print
  1194  00E3  0AC0               	incf	_print,f
  1195                           
  1196                           ;Main.c: 101:             rand = (random() % 10);
  1197  00E4  300A               	movlw	10
  1198  00E5  00A3               	movwf	___awmod@divisor
  1199  00E6  3000               	movlw	0
  1200  00E7  00A4               	movwf	___awmod@divisor+1
  1201  00E8  118A  24E3  118A   	fcall	_random
  1202  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1203  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1204  00ED  00B0               	movwf	??_main
  1205  00EE  01B1               	clrf	??_main+1
  1206  00EF  0830               	movf	??_main,w
  1207  00F0  00A5               	movwf	___awmod@dividend
  1208  00F1  0831               	movf	??_main+1,w
  1209  00F2  00A6               	movwf	___awmod@dividend+1
  1210  00F3  118A  23CB  118A   	fcall	___awmod
  1211  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1212  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1213  00F8  0824               	movf	?___awmod+1,w
  1214  00F9  00B7               	movwf	_rand+1
  1215  00FA  0823               	movf	?___awmod,w
  1216  00FB  00B6               	movwf	_rand
  1217                           
  1218                           ;Main.c: 102:             text = &chores[rand % 11][0];
  1219  00FC  0837               	movf	_rand+1,w
  1220  00FD  00A6               	movwf	___awmod@dividend+1
  1221  00FE  0836               	movf	_rand,w
  1222  00FF  00A5               	movwf	___awmod@dividend
  1223  0100  300B               	movlw	11
  1224  0101  00A3               	movwf	___awmod@divisor
  1225  0102  3000               	movlw	0
  1226  0103  00A4               	movwf	___awmod@divisor+1
  1227  0104  118A  23CB  118A   	fcall	___awmod
  1228  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0109  0824               	movf	?___awmod+1,w
  1231  010A  00AB               	movwf	___wmul@multiplier+1
  1232  010B  0823               	movf	?___awmod,w
  1233  010C  00AA               	movwf	___wmul@multiplier
  1234  010D  301E               	movlw	30
  1235  010E  00AC               	movwf	___wmul@multiplicand
  1236  010F  3000               	movlw	0
  1237  0110  00AD               	movwf	___wmul@multiplicand+1
  1238  0111  118A  2537  118A   	fcall	___wmul
  1239  0114  3012               	movlw	low (_chores| (0+32768))
  1240  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0117  00B0               	movwf	??_main
  1243  0118  3082               	movlw	high (_chores| (0+32768))
  1244  0119  00B1               	movwf	??_main+1
  1245  011A  082A               	movf	?___wmul,w
  1246  011B  0730               	addwf	??_main,w
  1247  011C  00B2               	movwf	??_main+2
  1248  011D  082B               	movf	?___wmul+1,w
  1249  011E  1803               	skipnc
  1250  011F  0A2B               	incf	?___wmul+1,w
  1251  0120  0731               	addwf	??_main+1,w
  1252  0121  00B3               	movwf	??_main+3
  1253  0122  0832               	movf	??_main+2,w
  1254  0123  00B4               	movwf	_text
  1255  0124  0833               	movf	??_main+3,w
  1256  0125  00B5               	movwf	_text+1
  1257                           
  1258                           ;Main.c: 103:             user = rand % 2;
  1259  0126  0836               	movf	_rand,w
  1260  0127  3901               	andlw	1
  1261  0128  00B0               	movwf	??_main
  1262  0129  0830               	movf	??_main,w
  1263  012A  00BB               	movwf	_user
  1264                           
  1265                           ;Main.c: 104:             if (strlen(text) > 16)
  1266  012B  0834               	movf	_text,w
  1267  012C  00A0               	movwf	strlen@string
  1268  012D  0835               	movf	_text+1,w
  1269  012E  00A1               	movwf	strlen@string+1
  1270  012F  118A  257C  118A   	fcall	_strlen
  1271  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0134  00B0               	movwf	??_main
  1274  0135  3011               	movlw	17
  1275  0136  0230               	subwf	??_main,w
  1276  0137  1C03               	skipc
  1277  0138  2959               	goto	l1561
  1278                           
  1279                           ;Main.c: 105:             {;Main.c: 106:                 for (space_pos = 16; text[space
      +                          _pos] != ' ' && space_pos != 0; space_pos--);
  1280  0139  3010               	movlw	16
  1281  013A  00BE               	movwf	_space_pos
  1282  013B  3000               	movlw	0
  1283  013C  00BF               	movwf	_space_pos+1
  1284  013D  2948               	goto	l1557
  1285  013E                     l1559:	
  1286  013E  083E               	movf	_space_pos,w
  1287  013F  043F               	iorwf	_space_pos+1,w
  1288  0140  1903               	btfsc	3,2
  1289  0141  2956               	goto	l136
  1290  0142  30FF               	movlw	255
  1291  0143  07BE               	addwf	_space_pos,f
  1292  0144  1803               	skipnc
  1293  0145  0ABF               	incf	_space_pos+1,f
  1294  0146  30FF               	movlw	255
  1295  0147  07BF               	addwf	_space_pos+1,f
  1296  0148                     l1557:	
  1297  0148  083E               	movf	_space_pos,w
  1298  0149  0734               	addwf	_text,w
  1299  014A  0084               	movwf	4
  1300  014B  083F               	movf	_space_pos+1,w
  1301  014C  1803               	skipnc
  1302  014D  0A3F               	incf	_space_pos+1,w
  1303  014E  0735               	addwf	_text+1,w
  1304  014F  00FF               	movwf	127
  1305  0150  118A  2200  118A   	fcall	stringtab
  1306  0153  3A20               	xorlw	32
  1307  0154  1D03               	btfss	3,2
  1308  0155  293E               	goto	l1559
  1309  0156                     l136:	
  1310                           
  1311                           ;Main.c: 107:                 long_text = 1;
  1312  0156  01BA               	clrf	_long_text
  1313  0157  0ABA               	incf	_long_text,f
  1314                           
  1315                           ;Main.c: 108:             }
  1316  0158  295E               	goto	l1565
  1317  0159                     l1561:	
  1318                           
  1319                           ;Main.c: 110:             {;Main.c: 111:                 long_text = 0;
  1320  0159  01BA               	clrf	_long_text
  1321                           
  1322                           ;Main.c: 112:                 space_pos = 16;
  1323  015A  3010               	movlw	16
  1324  015B  00BE               	movwf	_space_pos
  1325  015C  3000               	movlw	0
  1326  015D  00BF               	movwf	_space_pos+1
  1327  015E                     l1565:	
  1328                           
  1329                           ;Main.c: 114:             btn_pressed = 0;
  1330  015E  01BD               	clrf	_btn_pressed
  1331  015F                     l1567:	
  1332                           
  1333                           ;Main.c: 116:         if (print)
  1334  015F  0840               	movf	_print,w
  1335  0160  1903               	btfsc	3,2
  1336  0161  2995               	goto	l1577
  1337                           
  1338                           ;Main.c: 117:         {;Main.c: 118:             lcd_clear_all();
  1339  0162  118A  25BD  118A   	fcall	_lcd_clear_all
  1340                           
  1341                           ;Main.c: 119:             print = 0;
  1342  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0167  01C0               	clrf	_print
  1345                           
  1346                           ;Main.c: 120:             lcd_print(text, space_pos, 0, 0);
  1347  0168  0834               	movf	_text,w
  1348  0169  00A4               	movwf	lcd_print@text
  1349  016A  0835               	movf	_text+1,w
  1350  016B  00A5               	movwf	lcd_print@text+1
  1351  016C  083E               	movf	_space_pos,w
  1352  016D  00B0               	movwf	??_main
  1353  016E  0830               	movf	??_main,w
  1354  016F  00A6               	movwf	lcd_print@size
  1355  0170  01A7               	clrf	lcd_print@line
  1356  0171  01A8               	clrf	lcd_print@pos
  1357  0172  118A  2418  118A   	fcall	_lcd_print
  1358                           
  1359                           ;Main.c: 121:             lcd_print(&users[user][0], 6, 1, 0);
  1360  0175  3007               	movlw	7
  1361  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0178  00B0               	movwf	??_main
  1364  0179  0830               	movf	??_main,w
  1365  017A  00A0               	movwf	___bmul@multiplicand
  1366  017B  083B               	movf	_user,w
  1367  017C  118A  259C  118A   	fcall	___bmul
  1368  017F  3E5C               	addlw	low (_users| (0+32768))
  1369  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0182  00B1               	movwf	??_main+1
  1372  0183  3083               	movlw	high (_users| (0+32768))
  1373  0184  1803               	skipnc
  1374  0185  3E01               	addlw	1
  1375  0186  00B2               	movwf	??_main+2
  1376  0187  0831               	movf	??_main+1,w
  1377  0188  00A4               	movwf	lcd_print@text
  1378  0189  0832               	movf	??_main+2,w
  1379  018A  00A5               	movwf	lcd_print@text+1
  1380  018B  3006               	movlw	6
  1381  018C  00B3               	movwf	??_main+3
  1382  018D  0833               	movf	??_main+3,w
  1383  018E  00A6               	movwf	lcd_print@size
  1384  018F  01A7               	clrf	lcd_print@line
  1385  0190  0AA7               	incf	lcd_print@line,f
  1386  0191  01A8               	clrf	lcd_print@pos
  1387  0192  118A  2418  118A   	fcall	_lcd_print
  1388  0195                     l1577:	
  1389                           
  1390                           ;Main.c: 123:         if (long_text)
  1391  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0197  083A               	movf	_long_text,w
  1394  0198  1903               	btfsc	3,2
  1395  0199  29DB               	goto	l1589
  1396                           
  1397                           ;Main.c: 124:         {;Main.c: 125:             lcd_print(text, space_pos, 0, 0);
  1398  019A  0834               	movf	_text,w
  1399  019B  00A4               	movwf	lcd_print@text
  1400  019C  0835               	movf	_text+1,w
  1401  019D  00A5               	movwf	lcd_print@text+1
  1402  019E  083E               	movf	_space_pos,w
  1403  019F  00B0               	movwf	??_main
  1404  01A0  0830               	movf	??_main,w
  1405  01A1  00A6               	movwf	lcd_print@size
  1406  01A2  01A7               	clrf	lcd_print@line
  1407  01A3  01A8               	clrf	lcd_print@pos
  1408  01A4  118A  2418  118A   	fcall	_lcd_print
  1409                           
  1410                           ;Main.c: 126:             _delay((unsigned long)((300)*(31000/4000.0)));
  1411  01A7  3004               	movlw	4
  1412  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1413  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1414  01AA  00B1               	movwf	??_main+1
  1415  01AB  3002               	movlw	2
  1416  01AC  00B0               	movwf	??_main
  1417  01AD                     u1027:	
  1418  01AD  0BB0               	decfsz	??_main,f
  1419  01AE  29AD               	goto	u1027
  1420  01AF  0BB1               	decfsz	??_main+1,f
  1421  01B0  29AD               	goto	u1027
  1422  01B1  29B2               	nop2
  1423                           
  1424                           ;Main.c: 127:             lcd_clear_line(0);
  1425  01B2  3000               	movlw	0
  1426  01B3  118A  2484  118A   	fcall	_lcd_clear_line
  1427                           
  1428                           ;Main.c: 128:             lcd_print(text + space_pos + 1, 16, 0, 0);
  1429  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1430  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1431  01B8  083E               	movf	_space_pos,w
  1432  01B9  0734               	addwf	_text,w
  1433  01BA  00B0               	movwf	??_main
  1434  01BB  083F               	movf	_space_pos+1,w
  1435  01BC  1803               	skipnc
  1436  01BD  0A3F               	incf	_space_pos+1,w
  1437  01BE  0735               	addwf	_text+1,w
  1438  01BF  00B1               	movwf	??_main+1
  1439  01C0  0830               	movf	??_main,w
  1440  01C1  3E01               	addlw	1
  1441  01C2  00A4               	movwf	lcd_print@text
  1442  01C3  0831               	movf	??_main+1,w
  1443  01C4  1803               	skipnc
  1444  01C5  3E01               	addlw	1
  1445  01C6  3E00               	addlw	0
  1446  01C7  00A5               	movwf	lcd_print@text+1
  1447  01C8  3010               	movlw	16
  1448  01C9  00B2               	movwf	??_main+2
  1449  01CA  0832               	movf	??_main+2,w
  1450  01CB  00A6               	movwf	lcd_print@size
  1451  01CC  01A7               	clrf	lcd_print@line
  1452  01CD  01A8               	clrf	lcd_print@pos
  1453  01CE  118A  2418  118A   	fcall	_lcd_print
  1454                           
  1455                           ;Main.c: 129:             _delay((unsigned long)((500)*(31000/4000.0)));
  1456  01D1  3006               	movlw	6
  1457  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1458  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1459  01D4  00B1               	movwf	??_main+1
  1460  01D5  3006               	movlw	6
  1461  01D6  00B0               	movwf	??_main
  1462  01D7                     u1037:	
  1463  01D7  0BB0               	decfsz	??_main,f
  1464  01D8  29D7               	goto	u1037
  1465  01D9  0BB1               	decfsz	??_main+1,f
  1466  01DA  29D7               	goto	u1037
  1467  01DB                     l1589:	
  1468                           
  1469                           ;Main.c: 131:         _delay((unsigned long)((1000)*(31000/4000.0)));
  1470  01DB  300B               	movlw	11
  1471  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1472  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1473  01DE  00B1               	movwf	??_main+1
  1474  01DF  300E               	movlw	14
  1475  01E0  00B0               	movwf	??_main
  1476  01E1                     u1047:	
  1477  01E1  0BB0               	decfsz	??_main,f
  1478  01E2  29E1               	goto	u1047
  1479  01E3  0BB1               	decfsz	??_main+1,f
  1480  01E4  29E1               	goto	u1047
  1481  01E5  0000               	nop
  1482  01E6  28B1               	goto	l1529
  1483  01E7                     __end_of_main:	
  1484                           
  1485                           	psect	text1
  1486  057C                     __ptext1:	
  1487 ;; *************** function _strlen *****************
  1488 ;; Defined at:
  1489 ;;		line 215 in file "Main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  string          2    0[BANK0 ] PTR unsigned char 
  1492 ;;		 -> NULL(0), chores(330), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  i               2    3[BANK0 ] int 
  1495 ;;  result          1    5[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       2       0       0       0
  1506 ;;      Locals:         0       3       0       0       0
  1507 ;;      Temps:          0       1       0       0       0
  1508 ;;      Totals:         0       6       0       0       0
  1509 ;;Total ram usage:        6 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    4
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _strlen
  1521  057C                     _strlen:	
  1522                           
  1523                           ;Main.c: 215: unsigned char strlen(unsigned char string[]);Main.c: 216: {;Main.c: 217:  
      +                             int i = 0;
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1527  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1528  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1529  057E  01A3               	clrf	strlen@i
  1530  057F  01A4               	clrf	strlen@i+1
  1531                           
  1532                           ;Main.c: 218:     unsigned char result = 0;
  1533  0580  01A5               	clrf	strlen@result
  1534  0581                     l1265:	
  1535                           ;Main.c: 219:     while (string[i] != 0)
  1536                           
  1537                           
  1538                           ;Main.c: 219:     while (string[i] != 0)
  1539  0581  0823               	movf	strlen@i,w
  1540  0582  0720               	addwf	strlen@string,w
  1541  0583  0084               	movwf	4
  1542  0584  0824               	movf	strlen@i+1,w
  1543  0585  1803               	skipnc
  1544  0586  0A24               	incf	strlen@i+1,w
  1545  0587  0721               	addwf	strlen@string+1,w
  1546  0588  00FF               	movwf	127
  1547  0589  118A  2200  118A   	fcall	stringtab
  1548  058C  3A00               	xorlw	0
  1549  058D  1903               	btfsc	3,2
  1550  058E  2D9A               	goto	l1267
  1551                           
  1552                           ;Main.c: 220:     {;Main.c: 221:         i++;
  1553  058F  3001               	movlw	1
  1554  0590  07A3               	addwf	strlen@i,f
  1555  0591  1803               	skipnc
  1556  0592  0AA4               	incf	strlen@i+1,f
  1557  0593  3000               	movlw	0
  1558  0594  07A4               	addwf	strlen@i+1,f
  1559                           
  1560                           ;Main.c: 222:         result++;
  1561  0595  3001               	movlw	1
  1562  0596  00A2               	movwf	??_strlen
  1563  0597  0822               	movf	??_strlen,w
  1564  0598  07A5               	addwf	strlen@result,f
  1565  0599  2D81               	goto	l1265
  1566  059A                     l1267:	
  1567                           
  1568                           ;Main.c: 224:     return result;
  1569  059A  0825               	movf	strlen@result,w
  1570  059B  0008               	return
  1571  059C                     __end_of_strlen:	
  1572                           
  1573                           	psect	text2
  1574  04E3                     __ptext2:	
  1575 ;; *************** function _random *****************
  1576 ;; Defined at:
  1577 ;;		line 184 in file "Main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  original        1    2[BANK0 ] unsigned char 
  1582 ;;  rbit            1    1[BANK0 ] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      unsigned char 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         0       2       0       0       0
  1594 ;;      Temps:          0       1       0       0       0
  1595 ;;      Totals:         0       3       0       0       0
  1596 ;;Total ram usage:        3 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    4
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _random
  1608  04E3                     _random:	
  1609                           
  1610                           ;Main.c: 186:     static char rand;;Main.c: 187:     static char count = 0;;Main.c: 188:
      +                               char original = rand;
  1611                           
  1612                           ;incstack = 0
  1613                           ; Regs used in _random: [wreg+status,2+status,0]
  1614  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1615  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1616  04E5  0839               	movf	random@rand,w
  1617  04E6  00A0               	movwf	??_random
  1618  04E7  0820               	movf	??_random,w
  1619  04E8  00A2               	movwf	random@original
  1620                           
  1621                           ;Main.c: 189:     char rbit = 0;
  1622  04E9  01A1               	clrf	random@rbit
  1623                           
  1624                           ;Main.c: 191:     if (count == 0)
  1625  04EA  0838               	movf	random@count,w
  1626  04EB  1D03               	btfss	3,2
  1627  04EC  2CF9               	goto	l1241
  1628  04ED                     l167:	
  1629                           ;Main.c: 194:         {;Main.c: 195:         }
  1630                           
  1631                           
  1632                           ;Main.c: 193:         while (RA7 == 0)
  1633  04ED  1F85               	btfss	5,7	;volatile
  1634  04EE  2CED               	goto	l167
  1635                           
  1636                           ;Main.c: 196:         count = 1;
  1637  04EF  01B8               	clrf	random@count
  1638  04F0  0AB8               	incf	random@count,f
  1639                           
  1640                           ;Main.c: 197:         rand = TMR0;
  1641  04F1  0801               	movf	1,w	;volatile
  1642  04F2  00A0               	movwf	??_random
  1643  04F3  0820               	movf	??_random,w
  1644  04F4  00B9               	movwf	random@rand
  1645                           
  1646                           ;Main.c: 198:         TMR0 = 0;
  1647  04F5  0181               	clrf	1	;volatile
  1648                           
  1649                           ;Main.c: 199:         TMR0IE = 1;
  1650  04F6  168B               	bsf	11,5	;volatile
  1651  04F7                     l1237:	
  1652                           
  1653                           ;Main.c: 200:         return rand;
  1654  04F7  0839               	movf	random@rand,w
  1655  04F8  0008               	return
  1656  04F9                     l1241:	
  1657                           
  1658                           ;Main.c: 203:     original &= 180;
  1659  04F9  30B4               	movlw	180
  1660  04FA                     L1:	
  1661  04FA  00A0               	movwf	??_random
  1662  04FB  0820               	movf	??_random,w
  1663  04FC  05A2               	andwf	random@original,f
  1664                           
  1665                           ;Main.c: 204:     while (original)
  1666  04FD  0822               	movf	random@original,w
  1667  04FE  1903               	btfsc	3,2
  1668  04FF  2D09               	goto	l1251
  1669                           
  1670                           ;Main.c: 205:     {;Main.c: 206:         rbit ^= (original & 1);
  1671                           
  1672                           ;Main.c: 204:     while (original)
  1673  0500  0822               	movf	random@original,w
  1674  0501  3901               	andlw	1
  1675  0502  00A0               	movwf	??_random
  1676  0503  0820               	movf	??_random,w
  1677  0504  06A1               	xorwf	random@rbit,f
  1678                           
  1679                           ;Main.c: 207:         original >>= 1;
  1680  0505  1003               	clrc
  1681  0506  0CA2               	rrf	random@original,f
  1682                           
  1683                           ;Main.c: 208:         original &= (~(1 << 7));
  1684  0507  307F               	movlw	127
  1685  0508  2CFA               	goto	L1
  1686  0509                     l1251:	
  1687                           
  1688                           ;Main.c: 210:     rand <<= 1;
  1689  0509  1003               	clrc
  1690  050A  0DB9               	rlf	random@rand,f
  1691                           
  1692                           ;Main.c: 211:     rand |= rbit;
  1693  050B  0821               	movf	random@rbit,w
  1694  050C  00A0               	movwf	??_random
  1695  050D  0820               	movf	??_random,w
  1696  050E  04B9               	iorwf	random@rand,f
  1697  050F  2CF7               	goto	l1237
  1698  0510                     __end_of_random:	
  1699                           
  1700                           	psect	text3
  1701  0418                     __ptext3:	
  1702 ;; *************** function _lcd_print *****************
  1703 ;; Defined at:
  1704 ;;		line 13 in file "LCD.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  text            2    4[BANK0 ] PTR unsigned char 
  1707 ;;		 -> NULL(0), users(14), STR_1(12), chores(330), 
  1708 ;;  size            1    6[BANK0 ] unsigned char 
  1709 ;;  line            1    7[BANK0 ] unsigned char 
  1710 ;;  pos             1    8[BANK0 ] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  pointer         2   10[BANK0 ] PTR unsigned char 
  1713 ;;		 -> NULL(0), users(14), STR_1(12), chores(330), 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       5       0       0       0
  1724 ;;      Locals:         0       2       0       0       0
  1725 ;;      Temps:          0       1       0       0       0
  1726 ;;      Totals:         0       8       0       0       0
  1727 ;;Total ram usage:        8 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    6
  1730 ;; This function calls:
  1731 ;;		_lcd_cmd
  1732 ;;		_lcd_data
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _lcd_print
  1740  0418                     _lcd_print:	
  1741                           
  1742                           ;LCD.c: 13: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, 
      +                          unsigned char pos);LCD.c: 14: {;LCD.c: 18:     unsigned char *pointer = text;
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1746  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1748  041A  0824               	movf	lcd_print@text,w
  1749  041B  00AA               	movwf	lcd_print@pointer
  1750  041C  0825               	movf	lcd_print@text+1,w
  1751  041D  00AB               	movwf	lcd_print@pointer+1
  1752                           
  1753                           ;LCD.c: 19:     lcd_cmd((0x80) | (line << 6) | (pos));
  1754  041E  0827               	movf	lcd_print@line,w
  1755  041F  00A9               	movwf	??_lcd_print
  1756  0420  3005               	movlw	5
  1757  0421                     u475:	
  1758  0421  1003               	clrc
  1759  0422  0DA9               	rlf	??_lcd_print,f
  1760  0423  3EFF               	addlw	-1
  1761  0424  1D03               	skipz
  1762  0425  2C21               	goto	u475
  1763  0426  1003               	clrc
  1764  0427  0D29               	rlf	??_lcd_print,w
  1765  0428  0428               	iorwf	lcd_print@pos,w
  1766  0429  3880               	iorlw	128
  1767  042A  118A  2451  118A   	fcall	_lcd_cmd
  1768  042D                     l1177:	
  1769                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1770                           
  1771                           
  1772                           ;LCD.c: 20:     while ((*pointer) && (size != 0)){
  1773  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1774  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1775  042F  082B               	movf	lcd_print@pointer+1,w
  1776  0430  00FF               	movwf	127
  1777  0431  082A               	movf	lcd_print@pointer,w
  1778  0432  0084               	movwf	4
  1779  0433  118A  2200  118A   	fcall	stringtab
  1780  0436  3A00               	xorlw	0
  1781  0437  1903               	skipnz
  1782  0438  0008               	return
  1783  0439  0826               	movf	lcd_print@size,w
  1784  043A  1903               	btfsc	3,2
  1785  043B  0008               	return
  1786                           
  1787                           ;LCD.c: 21:         lcd_data(*pointer);
  1788  043C  082B               	movf	lcd_print@pointer+1,w
  1789  043D  00FF               	movwf	127
  1790  043E  082A               	movf	lcd_print@pointer,w
  1791  043F  0084               	movwf	4
  1792  0440  118A  2200  118A   	fcall	stringtab
  1793  0443  118A  255A  118A   	fcall	_lcd_data
  1794                           
  1795                           ;LCD.c: 22:         pointer++;
  1796  0446  3001               	movlw	1
  1797  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0449  07AA               	addwf	lcd_print@pointer,f
  1800  044A  1803               	skipnc
  1801  044B  0AAB               	incf	lcd_print@pointer+1,f
  1802  044C  3000               	movlw	0
  1803  044D  07AB               	addwf	lcd_print@pointer+1,f
  1804                           
  1805                           ;LCD.c: 23:         size--;
  1806  044E  3001               	movlw	1
  1807  044F  02A6               	subwf	lcd_print@size,f
  1808  0450  2C2D               	goto	l1177
  1809  0451                     __end_of_lcd_print:	
  1810                           
  1811                           	psect	text4
  1812  0376                     __ptext4:	
  1813 ;; *************** function _lcd_init *****************
  1814 ;; Defined at:
  1815 ;;		line 44 in file "LCD.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0
  1831 ;;      Temps:          0       1       0       0       0
  1832 ;;      Totals:         0       1       0       0       0
  1833 ;;Total ram usage:        1 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    6
  1836 ;; This function calls:
  1837 ;;		_lcd_cmd
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _lcd_init
  1845  0376                     _lcd_init:	
  1846                           
  1847                           ;LCD.c: 48:     _delay((unsigned long)((15)*(31000/4000.0)));
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1851  0376  3025               	movlw	37
  1852  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0379  00A4               	movwf	??_lcd_init
  1855  037A                     u1057:	
  1856  037A  0BA4               	decfsz	??_lcd_init,f
  1857  037B  2B7A               	goto	u1057
  1858  037C  2B7D               	nop2
  1859                           
  1860                           ;LCD.c: 50:     lcd_cmd(0x02);
  1861  037D  3002               	movlw	2
  1862  037E  118A  2451  118A   	fcall	_lcd_cmd
  1863                           
  1864                           ;LCD.c: 51:     _delay((unsigned long)((5)*(31000/4000.0)));
  1865  0381  300B               	movlw	11
  1866  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0384  00A4               	movwf	??_lcd_init
  1869  0385                     u1067:	
  1870  0385  0BA4               	decfsz	??_lcd_init,f
  1871  0386  2B85               	goto	u1067
  1872  0387  2B88               	nop2
  1873                           
  1874                           ;LCD.c: 55:     lcd_cmd(0x28);
  1875  0388  3028               	movlw	40
  1876  0389  118A  2451  118A   	fcall	_lcd_cmd
  1877                           
  1878                           ;LCD.c: 56:     _delay((unsigned long)((5)*(31000/4000.0)));
  1879  038C  300B               	movlw	11
  1880  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1881  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1882  038F  00A4               	movwf	??_lcd_init
  1883  0390                     u1077:	
  1884  0390  0BA4               	decfsz	??_lcd_init,f
  1885  0391  2B90               	goto	u1077
  1886  0392  2B93               	nop2
  1887                           
  1888                           ;LCD.c: 58:     lcd_cmd(0x10);
  1889  0393  3010               	movlw	16
  1890  0394  118A  2451  118A   	fcall	_lcd_cmd
  1891                           
  1892                           ;LCD.c: 59:     _delay((unsigned long)((5)*(31000/4000.0)));
  1893  0397  300B               	movlw	11
  1894  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1896  039A  00A4               	movwf	??_lcd_init
  1897  039B                     u1087:	
  1898  039B  0BA4               	decfsz	??_lcd_init,f
  1899  039C  2B9B               	goto	u1087
  1900  039D  2B9E               	nop2
  1901                           
  1902                           ;LCD.c: 61:     lcd_cmd(0x0c);
  1903  039E  300C               	movlw	12
  1904  039F  118A  2451  118A   	fcall	_lcd_cmd
  1905                           
  1906                           ;LCD.c: 62:     _delay((unsigned long)((5)*(31000/4000.0)));
  1907  03A2  300B               	movlw	11
  1908  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1909  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1910  03A5  00A4               	movwf	??_lcd_init
  1911  03A6                     u1097:	
  1912  03A6  0BA4               	decfsz	??_lcd_init,f
  1913  03A7  2BA6               	goto	u1097
  1914  03A8  2BA9               	nop2
  1915                           
  1916                           ;LCD.c: 64:     lcd_cmd(0x06);
  1917  03A9  3006               	movlw	6
  1918  03AA  118A  2451  118A   	fcall	_lcd_cmd
  1919                           
  1920                           ;LCD.c: 65:     _delay((unsigned long)((5)*(31000/4000.0)));
  1921  03AD  300B               	movlw	11
  1922  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1923  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1924  03B0  00A4               	movwf	??_lcd_init
  1925  03B1                     u1107:	
  1926  03B1  0BA4               	decfsz	??_lcd_init,f
  1927  03B2  2BB1               	goto	u1107
  1928  03B3  2BB4               	nop2
  1929                           
  1930                           ;LCD.c: 67:     lcd_cmd(0x01);
  1931  03B4  3001               	movlw	1
  1932  03B5  118A  2451  118A   	fcall	_lcd_cmd
  1933                           
  1934                           ;LCD.c: 68:     _delay((unsigned long)((5)*(31000/4000.0)));
  1935  03B8  300B               	movlw	11
  1936  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1937  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1938  03BB  00A4               	movwf	??_lcd_init
  1939  03BC                     u1117:	
  1940  03BC  0BA4               	decfsz	??_lcd_init,f
  1941  03BD  2BBC               	goto	u1117
  1942  03BE  2BBF               	nop2
  1943                           
  1944                           ;LCD.c: 70:     lcd_cmd(0x80);
  1945  03BF  3080               	movlw	128
  1946  03C0  118A  2451  118A   	fcall	_lcd_cmd
  1947                           
  1948                           ;LCD.c: 71:     _delay((unsigned long)((5)*(31000/4000.0)));
  1949  03C3  300B               	movlw	11
  1950  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03C6  00A4               	movwf	??_lcd_init
  1953  03C7                     u1127:	
  1954  03C7  0BA4               	decfsz	??_lcd_init,f
  1955  03C8  2BC7               	goto	u1127
  1956  03C9  2BCA               	nop2
  1957  03CA  0008               	return
  1958  03CB                     __end_of_lcd_init:	
  1959                           
  1960                           	psect	text5
  1961  0484                     __ptext5:	
  1962 ;; *************** function _lcd_clear_line *****************
  1963 ;; Defined at:
  1964 ;;		line 33 in file "LCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  line            1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  line            1    5[BANK0 ] unsigned char 
  1969 ;;  i               2    6[BANK0 ] int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         0       3       0       0       0
  1981 ;;      Temps:          0       1       0       0       0
  1982 ;;      Totals:         0       4       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    6
  1986 ;; This function calls:
  1987 ;;		_lcd_cmd
  1988 ;;		_lcd_data
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _lcd_clear_line
  1996  0484                     _lcd_clear_line:	
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _lcd_clear_line: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2000                           ;lcd_clear_line@line stored from wreg
  2001  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0486  00A5               	movwf	lcd_clear_line@line
  2004                           
  2005                           ;LCD.c: 33: void lcd_clear_line(unsigned char line);LCD.c: 34: {;LCD.c: 35:     int i;;L
      +                          CD.c: 36:     lcd_cmd((line | 2) << 6);
  2006  0487  0825               	movf	lcd_clear_line@line,w
  2007  0488  00A4               	movwf	??_lcd_clear_line
  2008  0489  3005               	movlw	5
  2009  048A                     u505:	
  2010  048A  1003               	clrc
  2011  048B  0DA4               	rlf	??_lcd_clear_line,f
  2012  048C  3EFF               	addlw	-1
  2013  048D  1D03               	skipz
  2014  048E  2C8A               	goto	u505
  2015  048F  1003               	clrc
  2016  0490  0D24               	rlf	??_lcd_clear_line,w
  2017  0491  3880               	iorlw	128
  2018  0492  118A  2451  118A   	fcall	_lcd_cmd
  2019                           
  2020                           ;LCD.c: 37:     for (i=0; i<40; i++)
  2021  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0497  01A6               	clrf	lcd_clear_line@i
  2024  0498  01A7               	clrf	lcd_clear_line@i+1
  2025  0499                     l1193:	
  2026                           
  2027                           ;LCD.c: 38:     {;LCD.c: 39:         lcd_data(' ');
  2028  0499  3020               	movlw	32
  2029  049A  118A  255A  118A   	fcall	_lcd_data
  2030                           
  2031                           ;LCD.c: 40:     }
  2032  049D  3001               	movlw	1
  2033  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2034  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2035  04A0  07A6               	addwf	lcd_clear_line@i,f
  2036  04A1  1803               	skipnc
  2037  04A2  0AA7               	incf	lcd_clear_line@i+1,f
  2038  04A3  3000               	movlw	0
  2039  04A4  07A7               	addwf	lcd_clear_line@i+1,f
  2040  04A5  0827               	movf	lcd_clear_line@i+1,w
  2041  04A6  3A80               	xorlw	128
  2042  04A7  00FF               	movwf	127
  2043  04A8  3080               	movlw	128
  2044  04A9  027F               	subwf	127,w
  2045  04AA  1D03               	skipz
  2046  04AB  2CAE               	goto	u515
  2047  04AC  3028               	movlw	40
  2048  04AD  0226               	subwf	lcd_clear_line@i,w
  2049  04AE                     u515:	
  2050  04AE  1C03               	skipc
  2051  04AF  2C99               	goto	l1193
  2052                           
  2053                           ;LCD.c: 41:     lcd_cmd(0x80);
  2054  04B0  3080               	movlw	128
  2055  04B1  118A  2451         	fcall	_lcd_cmd
  2056  04B3  0008               	return
  2057  04B4                     __end_of_lcd_clear_line:	
  2058                           
  2059                           	psect	text6
  2060  055A                     __ptext6:	
  2061 ;; *************** function _lcd_data *****************
  2062 ;; Defined at:
  2063 ;;		line 90 in file "LCD.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  d               1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  d               1    3[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       1       0       0       0
  2079 ;;      Temps:          0       2       0       0       0
  2080 ;;      Totals:         0       3       0       0       0
  2081 ;;Total ram usage:        3 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    5
  2084 ;; This function calls:
  2085 ;;		_enable
  2086 ;; This function is called by:
  2087 ;;		_lcd_print
  2088 ;;		_lcd_clear_line
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _lcd_data
  2094  055A                     _lcd_data:	
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2098                           ;lcd_data@d stored from wreg
  2099  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2100  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2101  055C  00A3               	movwf	lcd_data@d
  2102                           
  2103                           ;LCD.c: 90: void lcd_data(unsigned char d);LCD.c: 91: {;LCD.c: 93:     RB1 = 1;
  2104  055D  1486               	bsf	6,1	;volatile
  2105                           
  2106                           ;LCD.c: 98:     PORTA = ((PORTA & 0xf0) | (0xf0 & d) >> 4);
  2107  055E  0823               	movf	lcd_data@d,w
  2108  055F  00A1               	movwf	??_lcd_data
  2109  0560  3004               	movlw	4
  2110  0561                     u455:	
  2111  0561  1003               	clrc
  2112  0562  0CA1               	rrf	??_lcd_data,f
  2113  0563  3EFF               	addlw	-1
  2114  0564  1D03               	skipz
  2115  0565  2D61               	goto	u455
  2116  0566  300F               	movlw	15
  2117  0567  0521               	andwf	??_lcd_data,w
  2118  0568  00A2               	movwf	??_lcd_data+1
  2119  0569  0805               	movf	5,w	;volatile
  2120  056A  39F0               	andlw	240
  2121  056B  0422               	iorwf	??_lcd_data+1,w
  2122  056C  0085               	movwf	5	;volatile
  2123                           
  2124                           ;LCD.c: 99:     enable();
  2125  056D  118A  25AF  118A   	fcall	_enable
  2126                           
  2127                           ;LCD.c: 101:     PORTA = (PORTA & 0xf0) | (0x0f & d);
  2128  0570  300F               	movlw	15
  2129  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0573  0523               	andwf	lcd_data@d,w
  2132  0574  00A1               	movwf	??_lcd_data
  2133  0575  0805               	movf	5,w	;volatile
  2134  0576  39F0               	andlw	240
  2135  0577  0421               	iorwf	??_lcd_data,w
  2136  0578  0085               	movwf	5	;volatile
  2137                           
  2138                           ;LCD.c: 102:     enable();
  2139  0579  118A  25AF         	fcall	_enable
  2140  057B  0008               	return
  2141  057C                     __end_of_lcd_data:	
  2142                           
  2143                           	psect	text7
  2144  05BD                     __ptext7:	
  2145 ;; *************** function _lcd_clear_all *****************
  2146 ;; Defined at:
  2147 ;;		line 27 in file "LCD.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0
  2163 ;;      Temps:          0       1       0       0       0
  2164 ;;      Totals:         0       1       0       0       0
  2165 ;;Total ram usage:        1 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    6
  2168 ;; This function calls:
  2169 ;;		_lcd_cmd
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _lcd_clear_all
  2177  05BD                     _lcd_clear_all:	
  2178                           
  2179                           ;LCD.c: 29:     lcd_cmd(0x01);
  2180                           
  2181                           ;incstack = 0
  2182                           ; Regs used in _lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  2183  05BD  3001               	movlw	1
  2184  05BE  118A  2451  118A   	fcall	_lcd_cmd
  2185                           
  2186                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2187  05C1  300B               	movlw	11
  2188  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2189  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2190  05C4  00A4               	movwf	??_lcd_clear_all
  2191  05C5                     u1137:	
  2192  05C5  0BA4               	decfsz	??_lcd_clear_all,f
  2193  05C6  2DC5               	goto	u1137
  2194  05C7  2DC8               	nop2
  2195  05C8  0008               	return
  2196  05C9                     __end_of_lcd_clear_all:	
  2197                           
  2198                           	psect	text8
  2199  0451                     __ptext8:	
  2200 ;; *************** function _lcd_cmd *****************
  2201 ;; Defined at:
  2202 ;;		line 74 in file "LCD.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  c               1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  c               1    3[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       1       0       0       0
  2218 ;;      Temps:          0       2       0       0       0
  2219 ;;      Totals:         0       3       0       0       0
  2220 ;;Total ram usage:        3 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    5
  2223 ;; This function calls:
  2224 ;;		_enable
  2225 ;; This function is called by:
  2226 ;;		_lcd_print
  2227 ;;		_lcd_clear_all
  2228 ;;		_lcd_clear_line
  2229 ;;		_lcd_init
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _lcd_cmd
  2236  0451                     _lcd_cmd:	
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2240                           ;lcd_cmd@c stored from wreg
  2241  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0453  00A3               	movwf	lcd_cmd@c
  2244                           
  2245                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2246  0454  1086               	bcf	6,1	;volatile
  2247                           
  2248                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2249  0455  300B               	movlw	11
  2250  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0458  00A1               	movwf	??_lcd_cmd
  2253  0459                     u1147:	
  2254  0459  0BA1               	decfsz	??_lcd_cmd,f
  2255  045A  2C59               	goto	u1147
  2256  045B  2C5C               	nop2
  2257                           
  2258                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2259  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2260  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2261  045E  0823               	movf	lcd_cmd@c,w
  2262  045F  00A1               	movwf	??_lcd_cmd
  2263  0460  3004               	movlw	4
  2264  0461                     u445:	
  2265  0461  1003               	clrc
  2266  0462  0CA1               	rrf	??_lcd_cmd,f
  2267  0463  3EFF               	addlw	-1
  2268  0464  1D03               	skipz
  2269  0465  2C61               	goto	u445
  2270  0466  300F               	movlw	15
  2271  0467  0521               	andwf	??_lcd_cmd,w
  2272  0468  00A2               	movwf	??_lcd_cmd+1
  2273  0469  0805               	movf	5,w	;volatile
  2274  046A  39F0               	andlw	240
  2275  046B  0422               	iorwf	??_lcd_cmd+1,w
  2276  046C  0085               	movwf	5	;volatile
  2277                           
  2278                           ;LCD.c: 83:     enable();
  2279  046D  118A  25AF  118A   	fcall	_enable
  2280                           
  2281                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2282  0470  300F               	movlw	15
  2283  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0473  0523               	andwf	lcd_cmd@c,w
  2286  0474  00A1               	movwf	??_lcd_cmd
  2287  0475  0805               	movf	5,w	;volatile
  2288  0476  39F0               	andlw	240
  2289  0477  0421               	iorwf	??_lcd_cmd,w
  2290  0478  0085               	movwf	5	;volatile
  2291                           
  2292                           ;LCD.c: 86:     enable();
  2293  0479  118A  25AF  118A   	fcall	_enable
  2294                           
  2295                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2296  047C  300B               	movlw	11
  2297  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2298  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2299  047F  00A1               	movwf	??_lcd_cmd
  2300  0480                     u1157:	
  2301  0480  0BA1               	decfsz	??_lcd_cmd,f
  2302  0481  2C80               	goto	u1157
  2303  0482  2C83               	nop2
  2304  0483  0008               	return
  2305  0484                     __end_of_lcd_cmd:	
  2306                           
  2307                           	psect	text9
  2308  05AF                     __ptext9:	
  2309 ;; *************** function _enable *****************
  2310 ;; Defined at:
  2311 ;;		line 106 in file "LCD.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       1       0       0       0
  2328 ;;      Totals:         0       1       0       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    4
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_lcd_cmd
  2336 ;;		_lcd_data
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _enable
  2342  05AF                     _enable:	
  2343                           
  2344                           ;LCD.c: 108:     RB2 = 1;
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _enable: [wreg]
  2348  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2349  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2350  05B1  1506               	bsf	6,2	;volatile
  2351                           
  2352                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2353  05B2  300B               	movlw	11
  2354  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2355  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2356  05B5  00A0               	movwf	??_enable
  2357  05B6                     u1167:	
  2358  05B6  0BA0               	decfsz	??_enable,f
  2359  05B7  2DB6               	goto	u1167
  2360  05B8  2DB9               	nop2
  2361                           
  2362                           ;LCD.c: 112:     RB2 = 0;
  2363  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2364  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2365  05BB  1106               	bcf	6,2	;volatile
  2366  05BC  0008               	return
  2367  05BD                     __end_of_enable:	
  2368                           
  2369                           	psect	text10
  2370  0537                     __ptext10:	
  2371 ;; *************** function ___wmul *****************
  2372 ;; Defined at:
  2373 ;;		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  multiplier      2   10[BANK0 ] unsigned int 
  2376 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  product         2   14[BANK0 ] unsigned int 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2   10[BANK0 ] unsigned int 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       4       0       0       0
  2389 ;;      Locals:         0       2       0       0       0
  2390 ;;      Temps:          0       0       0       0       0
  2391 ;;      Totals:         0       6       0       0       0
  2392 ;;Total ram usage:        6 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    4
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function ___wmul
  2404  0537                     ___wmul:	
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2408  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0539  01AE               	clrf	___wmul@product
  2411  053A  01AF               	clrf	___wmul@product+1
  2412  053B                     l1477:	
  2413  053B  1C2A               	btfss	___wmul@multiplier,0
  2414  053C  2D43               	goto	l265
  2415  053D  082C               	movf	___wmul@multiplicand,w
  2416  053E  07AE               	addwf	___wmul@product,f
  2417  053F  1803               	skipnc
  2418  0540  0AAF               	incf	___wmul@product+1,f
  2419  0541  082D               	movf	___wmul@multiplicand+1,w
  2420  0542  07AF               	addwf	___wmul@product+1,f
  2421  0543                     l265:	
  2422  0543  3001               	movlw	1
  2423  0544                     u885:	
  2424  0544  1003               	clrc
  2425  0545  0DAC               	rlf	___wmul@multiplicand,f
  2426  0546  0DAD               	rlf	___wmul@multiplicand+1,f
  2427  0547  3EFF               	addlw	-1
  2428  0548  1D03               	skipz
  2429  0549  2D44               	goto	u885
  2430  054A  3001               	movlw	1
  2431  054B                     u895:	
  2432  054B  1003               	clrc
  2433  054C  0CAB               	rrf	___wmul@multiplier+1,f
  2434  054D  0CAA               	rrf	___wmul@multiplier,f
  2435  054E  3EFF               	addlw	-1
  2436  054F  1D03               	skipz
  2437  0550  2D4B               	goto	u895
  2438  0551  082A               	movf	___wmul@multiplier,w
  2439  0552  042B               	iorwf	___wmul@multiplier+1,w
  2440  0553  1D03               	btfss	3,2
  2441  0554  2D3B               	goto	l1477
  2442  0555  082F               	movf	___wmul@product+1,w
  2443  0556  00AB               	movwf	?___wmul+1
  2444  0557  082E               	movf	___wmul@product,w
  2445  0558  00AA               	movwf	?___wmul
  2446  0559  0008               	return
  2447  055A                     __end_of___wmul:	
  2448                           
  2449                           	psect	text11
  2450  059C                     __ptext11:	
  2451 ;; *************** function ___bmul *****************
  2452 ;; Defined at:
  2453 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  multiplier      1    wreg     unsigned char 
  2456 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2459 ;;  product         1    2[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       1       0       0       0
  2470 ;;      Locals:         0       2       0       0       0
  2471 ;;      Temps:          0       1       0       0       0
  2472 ;;      Totals:         0       4       0       0       0
  2473 ;;Total ram usage:        4 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    4
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function ___bmul
  2485  059C                     ___bmul:	
  2486                           
  2487                           ;incstack = 0
  2488                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2489                           ;___bmul@multiplier stored from wreg
  2490  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2491  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2492  059E  00A3               	movwf	___bmul@multiplier
  2493  059F  01A2               	clrf	___bmul@product
  2494  05A0                     l1287:	
  2495  05A0  1C23               	btfss	___bmul@multiplier,0
  2496  05A1  2DA6               	goto	l1291
  2497  05A2  0820               	movf	___bmul@multiplicand,w
  2498  05A3  00A1               	movwf	??___bmul
  2499  05A4  0821               	movf	??___bmul,w
  2500  05A5  07A2               	addwf	___bmul@product,f
  2501  05A6                     l1291:	
  2502  05A6  1003               	clrc
  2503  05A7  0DA0               	rlf	___bmul@multiplicand,f
  2504  05A8  1003               	clrc
  2505  05A9  0CA3               	rrf	___bmul@multiplier,f
  2506  05AA  0823               	movf	___bmul@multiplier,w
  2507  05AB  1D03               	btfss	3,2
  2508  05AC  2DA0               	goto	l1287
  2509  05AD  0822               	movf	___bmul@product,w
  2510  05AE  0008               	return
  2511  05AF                     __end_of___bmul:	
  2512                           
  2513                           	psect	text12
  2514  03CB                     __ptext12:	
  2515 ;; *************** function ___awmod *****************
  2516 ;; Defined at:
  2517 ;;		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  divisor         2    3[BANK0 ] int 
  2520 ;;  dividend        2    5[BANK0 ] int 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  sign            1    9[BANK0 ] unsigned char 
  2523 ;;  counter         1    8[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2    3[BANK0 ] int 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       4       0       0       0
  2534 ;;      Locals:         0       2       0       0       0
  2535 ;;      Temps:          0       1       0       0       0
  2536 ;;      Totals:         0       7       0       0       0
  2537 ;;Total ram usage:        7 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;;		_itoa
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function ___awmod
  2550  03CB                     ___awmod:	
  2551                           
  2552                           ;incstack = 0
  2553                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2554  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2555  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2556  03CD  01A9               	clrf	___awmod@sign
  2557  03CE  1FA6               	btfss	___awmod@dividend+1,7
  2558  03CF  2BD7               	goto	l1307
  2559  03D0  09A5               	comf	___awmod@dividend,f
  2560  03D1  09A6               	comf	___awmod@dividend+1,f
  2561  03D2  0AA5               	incf	___awmod@dividend,f
  2562  03D3  1903               	skipnz
  2563  03D4  0AA6               	incf	___awmod@dividend+1,f
  2564  03D5  01A9               	clrf	___awmod@sign
  2565  03D6  0AA9               	incf	___awmod@sign,f
  2566  03D7                     l1307:	
  2567  03D7  1FA4               	btfss	___awmod@divisor+1,7
  2568  03D8  2BDE               	goto	l1311
  2569  03D9  09A3               	comf	___awmod@divisor,f
  2570  03DA  09A4               	comf	___awmod@divisor+1,f
  2571  03DB  0AA3               	incf	___awmod@divisor,f
  2572  03DC  1903               	skipnz
  2573  03DD  0AA4               	incf	___awmod@divisor+1,f
  2574  03DE                     l1311:	
  2575  03DE  0823               	movf	___awmod@divisor,w
  2576  03DF  0424               	iorwf	___awmod@divisor+1,w
  2577  03E0  1903               	btfsc	3,2
  2578  03E1  2C0B               	goto	l1329
  2579  03E2  01A8               	clrf	___awmod@counter
  2580  03E3  0AA8               	incf	___awmod@counter,f
  2581  03E4                     l1319:	
  2582  03E4  1BA4               	btfsc	___awmod@divisor+1,7
  2583  03E5  2BF2               	goto	l1321
  2584  03E6  3001               	movlw	1
  2585  03E7                     u655:	
  2586  03E7  1003               	clrc
  2587  03E8  0DA3               	rlf	___awmod@divisor,f
  2588  03E9  0DA4               	rlf	___awmod@divisor+1,f
  2589  03EA  3EFF               	addlw	-1
  2590  03EB  1D03               	skipz
  2591  03EC  2BE7               	goto	u655
  2592  03ED  3001               	movlw	1
  2593  03EE  00A7               	movwf	??___awmod
  2594  03EF  0827               	movf	??___awmod,w
  2595  03F0  07A8               	addwf	___awmod@counter,f
  2596  03F1  2BE4               	goto	l1319
  2597  03F2                     l1321:	
  2598  03F2  0824               	movf	___awmod@divisor+1,w
  2599  03F3  0226               	subwf	___awmod@dividend+1,w
  2600  03F4  1D03               	skipz
  2601  03F5  2BF8               	goto	u675
  2602  03F6  0823               	movf	___awmod@divisor,w
  2603  03F7  0225               	subwf	___awmod@dividend,w
  2604  03F8                     u675:	
  2605  03F8  1C03               	skipc
  2606  03F9  2C00               	goto	l1325
  2607  03FA  0823               	movf	___awmod@divisor,w
  2608  03FB  02A5               	subwf	___awmod@dividend,f
  2609  03FC  0824               	movf	___awmod@divisor+1,w
  2610  03FD  1C03               	skipc
  2611  03FE  03A6               	decf	___awmod@dividend+1,f
  2612  03FF  02A6               	subwf	___awmod@dividend+1,f
  2613  0400                     l1325:	
  2614  0400  3001               	movlw	1
  2615  0401                     u685:	
  2616  0401  1003               	clrc
  2617  0402  0CA4               	rrf	___awmod@divisor+1,f
  2618  0403  0CA3               	rrf	___awmod@divisor,f
  2619  0404  3EFF               	addlw	-1
  2620  0405  1D03               	skipz
  2621  0406  2C01               	goto	u685
  2622  0407  3001               	movlw	1
  2623  0408  02A8               	subwf	___awmod@counter,f
  2624  0409  1D03               	btfss	3,2
  2625  040A  2BF2               	goto	l1321
  2626  040B                     l1329:	
  2627  040B  0829               	movf	___awmod@sign,w
  2628  040C  1903               	btfsc	3,2
  2629  040D  2C13               	goto	l1333
  2630  040E  09A5               	comf	___awmod@dividend,f
  2631  040F  09A6               	comf	___awmod@dividend+1,f
  2632  0410  0AA5               	incf	___awmod@dividend,f
  2633  0411  1903               	skipnz
  2634  0412  0AA6               	incf	___awmod@dividend+1,f
  2635  0413                     l1333:	
  2636  0413  0826               	movf	___awmod@dividend+1,w
  2637  0414  00A4               	movwf	?___awmod+1
  2638  0415  0825               	movf	___awmod@dividend,w
  2639  0416  00A3               	movwf	?___awmod
  2640  0417  0008               	return
  2641  0418                     __end_of___awmod:	
  2642                           
  2643                           	psect	text13
  2644  0510                     __ptext13:	
  2645 ;; *************** function _testing *****************
  2646 ;; Defined at:
  2647 ;;		line 137 in file "Main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          2       0       0       0       0
  2664 ;;      Totals:         2       0       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    3
  2668 ;; This function calls:
  2669 ;;		i1_lcd_clear_all
  2670 ;;		i1_lcd_cmd
  2671 ;; This function is called by:
  2672 ;;		Interrupt level 1
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _testing
  2678  0510                     _testing:	
  2679                           
  2680                           ;Main.c: 139:     if (INT0IF == 1)
  2681  0510  1C8B               	btfss	11,1	;volatile
  2682  0511  2D29               	goto	i1l147
  2683                           
  2684                           ;Main.c: 140:     {;Main.c: 141:         if (asleep)
  2685  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0514  083C               	movf	_asleep,w
  2688  0515  1903               	btfsc	3,2
  2689  0516  2D22               	goto	i1l148
  2690                           
  2691                           ;Main.c: 142:         {;Main.c: 143:             lcd_cmd(0x0c);
  2692  0517  300C               	movlw	12
  2693  0518  118A  24B4  118A   	fcall	i1_lcd_cmd
  2694                           
  2695                           ;Main.c: 144:             lcd_clear_all();
  2696  051B  118A  25D5  118A   	fcall	i1_lcd_clear_all
  2697                           
  2698                           ;Main.c: 145:             asleep = 0;
  2699  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2700  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0520  01BC               	clrf	_asleep
  2702                           
  2703                           ;Main.c: 146:         }
  2704  0521  2D24               	goto	i1l1451
  2705  0522                     i1l148:	
  2706                           ;Main.c: 147:         else
  2707                           
  2708                           
  2709                           ;Main.c: 148:             btn_pressed = 1;
  2710  0522  01BD               	clrf	_btn_pressed
  2711  0523  0ABD               	incf	_btn_pressed,f
  2712  0524                     i1l1451:	
  2713                           
  2714                           ;Main.c: 149:         TMR0 = 0;
  2715  0524  0181               	clrf	1	;volatile
  2716                           
  2717                           ;Main.c: 150:         TMR1 = 0;
  2718  0525  018E               	clrf	14	;volatile
  2719  0526  018F               	clrf	15	;volatile
  2720                           
  2721                           ;Main.c: 151:         INT0IF = 0;
  2722  0527  108B               	bcf	11,1	;volatile
  2723                           
  2724                           ;Main.c: 152:     }
  2725  0528  2D30               	goto	i1l152
  2726  0529                     i1l147:	
  2727                           ;Main.c: 153:     else if (TMR0IF)
  2728                           
  2729  0529  1D0B               	btfss	11,2	;volatile
  2730  052A  2D30               	goto	i1l152
  2731                           
  2732                           ;Main.c: 154:     {;Main.c: 155:         asleep = 1;
  2733  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2734  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2735  052D  01BC               	clrf	_asleep
  2736  052E  0ABC               	incf	_asleep,f
  2737                           
  2738                           ;Main.c: 156:         TMR0IF = 0;
  2739  052F  110B               	bcf	11,2	;volatile
  2740  0530                     i1l152:	
  2741  0530  0876               	movf	??_testing+1,w
  2742  0531  008A               	movwf	10
  2743  0532  0E75               	swapf	??_testing^(0+4294967168),w
  2744  0533  0083               	movwf	3
  2745  0534  0EFE               	swapf	126,f
  2746  0535  0E7E               	swapf	126,w
  2747  0536  0009               	retfie
  2748  0537                     __end_of_testing:	
  2749                           
  2750                           	psect	intentry
  2751  0004                     __pintentry:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _testing: [wreg+status,2+status,0+pclath+cstack]
  2754                           
  2755  0004                     interrupt_function:	
  2756  007E                     saved_w	set	btemp
  2757  0004  00FE               	movwf	btemp
  2758  0005  0E03               	swapf	3,w
  2759  0006  00F5               	movwf	??_testing
  2760  0007  080A               	movf	10,w
  2761  0008  00F6               	movwf	??_testing+1
  2762  0009  118A  2D10         	ljmp	_testing
  2763                           
  2764                           	psect	text14
  2765  05D5                     __ptext14:	
  2766 ;; *************** function i1_lcd_clear_all *****************
  2767 ;; Defined at:
  2768 ;;		line 27 in file "LCD.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		i1_lcd_cmd
  2791 ;; This function is called by:
  2792 ;;		_testing
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function i1_lcd_clear_all
  2798  05D5                     i1_lcd_clear_all:	
  2799                           
  2800                           ;LCD.c: 29:     lcd_cmd(0x01);
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in i1_lcd_clear_all: [wreg+status,2+status,0+pclath+cstack]
  2804  05D5  3001               	movlw	1
  2805  05D6  118A  24B4  118A   	fcall	i1_lcd_cmd
  2806                           
  2807                           ;LCD.c: 30:     _delay((unsigned long)((5)*(31000/4000.0)));
  2808  05D9  300C               	movlw	12
  2809  05DA  00F4               	movwf	??i1_lcd_clear_all
  2810  05DB                     u117_27:	
  2811  05DB  0BF4               	decfsz	??i1_lcd_clear_all,f
  2812  05DC  2DDB               	goto	u117_27
  2813  05DD  0000               	nop
  2814  05DE  0008               	return
  2815  05DF                     __end_ofi1_lcd_clear_all:	
  2816                           
  2817                           	psect	text15
  2818  04B4                     __ptext15:	
  2819 ;; *************** function i1_lcd_cmd *****************
  2820 ;; Defined at:
  2821 ;;		line 74 in file "LCD.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  c               1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  c               1    3[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0
  2837 ;;      Temps:          2       0       0       0       0
  2838 ;;      Totals:         3       0       0       0       0
  2839 ;;Total ram usage:        3 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		i1_enable
  2844 ;; This function is called by:
  2845 ;;		_testing
  2846 ;;		i1_lcd_clear_all
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function i1_lcd_cmd
  2852  04B4                     i1_lcd_cmd:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2856                           ;i1lcd_cmd@c stored from wreg
  2857  04B4  00F3               	movwf	i1lcd_cmd@c
  2858                           
  2859                           ;LCD.c: 74: void lcd_cmd(unsigned char c);LCD.c: 75: {;LCD.c: 77:     RB1 = 0;
  2860  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2861  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2862  04B7  1086               	bcf	6,1	;volatile
  2863                           
  2864                           ;LCD.c: 78:     _delay((unsigned long)((5)*(31000/4000.0)));
  2865  04B8  300C               	movlw	12
  2866  04B9  00F1               	movwf	??i1_lcd_cmd
  2867  04BA                     u118_27:	
  2868  04BA  0BF1               	decfsz	??i1_lcd_cmd,f
  2869  04BB  2CBA               	goto	u118_27
  2870  04BC  0000               	nop
  2871                           
  2872                           ;LCD.c: 82:     PORTA = ((PORTA & 0xf0) | (0xf0 & c) >> 4);
  2873  04BD  0873               	movf	i1lcd_cmd@c,w
  2874  04BE  00F1               	movwf	??i1_lcd_cmd
  2875  04BF  3004               	movlw	4
  2876  04C0                     u46_25:	
  2877  04C0  1003               	clrc
  2878  04C1  0CF1               	rrf	??i1_lcd_cmd,f
  2879  04C2  3EFF               	addlw	-1
  2880  04C3  1D03               	skipz
  2881  04C4  2CC0               	goto	u46_25
  2882  04C5  300F               	movlw	15
  2883  04C6  0571               	andwf	??i1_lcd_cmd,w
  2884  04C7  00F2               	movwf	??i1_lcd_cmd+1
  2885  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2886  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2887  04CA  0805               	movf	5,w	;volatile
  2888  04CB  39F0               	andlw	240
  2889  04CC  0472               	iorwf	??i1_lcd_cmd+1,w
  2890  04CD  0085               	movwf	5	;volatile
  2891                           
  2892                           ;LCD.c: 83:     enable();
  2893  04CE  118A  25C9  118A   	fcall	i1_enable
  2894                           
  2895                           ;LCD.c: 85:     PORTA = (PORTA & 0xf0) | (0x0f & c);
  2896  04D1  300F               	movlw	15
  2897  04D2  0573               	andwf	i1lcd_cmd@c,w
  2898  04D3  00F1               	movwf	??i1_lcd_cmd
  2899  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2900  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2901  04D6  0805               	movf	5,w	;volatile
  2902  04D7  39F0               	andlw	240
  2903  04D8  0471               	iorwf	??i1_lcd_cmd,w
  2904  04D9  0085               	movwf	5	;volatile
  2905                           
  2906                           ;LCD.c: 86:     enable();
  2907  04DA  118A  25C9  118A   	fcall	i1_enable
  2908                           
  2909                           ;LCD.c: 87:     _delay((unsigned long)((5)*(31000/4000.0)));
  2910  04DD  300C               	movlw	12
  2911  04DE  00F1               	movwf	??i1_lcd_cmd
  2912  04DF                     u119_27:	
  2913  04DF  0BF1               	decfsz	??i1_lcd_cmd,f
  2914  04E0  2CDF               	goto	u119_27
  2915  04E1  0000               	nop
  2916  04E2  0008               	return
  2917  04E3                     __end_ofi1_lcd_cmd:	
  2918                           
  2919                           	psect	text16
  2920  05C9                     __ptext16:	
  2921 ;; *************** function i1_enable *****************
  2922 ;; Defined at:
  2923 ;;		line 106 in file "LCD.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0
  2940 ;;      Totals:         1       0       0       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		i1_lcd_cmd
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function i1_enable
  2952  05C9                     i1_enable:	
  2953                           
  2954                           ;LCD.c: 108:     RB2 = 1;
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in i1_enable: [wreg]
  2958  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2959  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2960  05CB  1506               	bsf	6,2	;volatile
  2961                           
  2962                           ;LCD.c: 110:     _delay((unsigned long)((5)*(31000/4000.0)));
  2963  05CC  300C               	movlw	12
  2964  05CD  00F0               	movwf	??i1_enable
  2965  05CE                     u120_27:	
  2966  05CE  0BF0               	decfsz	??i1_enable,f
  2967  05CF  2DCE               	goto	u120_27
  2968  05D0  0000               	nop
  2969                           
  2970                           ;LCD.c: 112:     RB2 = 0;
  2971  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2972  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2973  05D3  1106               	bcf	6,2	;volatile
  2974  05D4  0008               	return
  2975  05D5                     __end_ofi1_enable:	
  2976  007E                     btemp	set	126	;btemp
  2977  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    344
    Data        3
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     20      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@string	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> itoa@buffer(COMMON[8]), 

    text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), chores(CODE[330]), 

    lcd_print@text	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), users(CODE[14]), STR_1(CODE[12]), chores(CODE[330]), 

    lcd_print@pointer	PTR unsigned char  size(2) Largest target is 330
		 -> NULL(NULL[0]), users(CODE[14]), STR_1(CODE[12]), chores(CODE[330]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _testing in COMMON

    _testing->i1_lcd_clear_all
    i1_lcd_clear_all->i1_lcd_cmd
    i1_lcd_cmd->i1_enable

Critical Paths under _main in BANK0

    _main->___wmul
    _lcd_print->___bmul
    _lcd_print->_lcd_cmd
    _lcd_print->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_clear_line->_lcd_cmd
    _lcd_clear_line->_lcd_data
    _lcd_data->_enable
    _lcd_clear_all->_lcd_cmd
    _lcd_cmd->_enable
    ___wmul->___awmod
    ___awmod->_random

Critical Paths under _testing in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _testing in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _testing in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _testing in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4105
                                             16 BANK0      4     4      0
                            ___awmod
                             ___bmul
                             ___wmul
                      _lcd_clear_all
                     _lcd_clear_line
                            _lcd_cmd
                           _lcd_init
                          _lcd_print
                             _random
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     222
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _random                                               3     3      0      72
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            8     3      5    1743
                                              4 BANK0      8     3      5
                             ___bmul (ARG)
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              4 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_line                                       4     4      0     156
                                              4 BANK0      4     4      0
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              1 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_all                                        1     1      0      44
                                              4 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     606
                                             10 BANK0      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              3 BANK0      7     3      4
                             _random (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _testing                                              2     2      0      88
                                              5 COMMON     2     2      0
                    i1_lcd_clear_all
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear_all                                      1     1      0      44
                                              4 COMMON     1     1      0
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) i1_lcd_cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                           i1_enable
 ---------------------------------------------------------------------------------
 (6) i1_enable                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _random (ARG)
   ___bmul
   ___wmul
     ___awmod (ARG)
       _random (ARG)
   _lcd_clear_all
     _lcd_cmd
       _enable
   _lcd_clear_line
     _lcd_cmd
       _enable
     _lcd_data
       _enable
   _lcd_cmd
     _enable
   _lcd_init
     _lcd_cmd
       _enable
   _lcd_print
     ___bmul (ARG)
     _lcd_cmd (ARG)
       _enable
     _lcd_data (ARG)
       _enable
   _random
   _strlen

 _testing (ROOT)
   i1_lcd_clear_all
     i1_lcd_cmd
       i1_enable
   i1_lcd_cmd
     i1_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Nov 11 02:39:41 2019

                       pc 0002            ___bmul@product 0022               __CFG_CP$OFF 0000  
                      fsr 0004       ___wmul@multiplicand 002C                       l126 00AF  
                     l136 0156                       l167 04ED                       l265 0543  
                     _GIE 005F                       _RB1 0031                       _RB2 0032  
                     _RA7 002F                       _PS0 0408                       _PS1 0409  
                     _PS2 040A                       u505 048A              __CFG_CPD$OFF 0000  
                     u515 04AE                       u445 0461                       u455 0561  
                     u475 0421                       u655 03E7                       _PSA 040B  
                     u675 03F8                       u685 0401                       u885 0544  
                     u895 054B                       fsr0 0004                       indf 0000  
            ___awmod@sign 0029              __CFG_IESO$ON 0000           i1_lcd_clear_all 05D5  
            __CFG_LVP$OFF 0000                      l1311 03DE                      l1321 03F2  
                    l1241 04F9                      l1307 03D7                      l1251 0509  
                    l1333 0413                      l1325 0400                      l1237 04F7  
                    l1319 03E4                      l1329 040B                      l1193 0499  
                    l1177 042D                      l1265 0581                      l1291 05A6  
                    l1267 059A                      l1525 00A1                      l1287 05A0  
                    l1543 00DF                      l1527 0097                      l1561 0159  
                    l1529 00B1                      l1477 053B                      l1565 015E  
                    l1557 0148                      l1559 013E                      l1567 015F  
                    l1577 0195                      l1589 01DB                      STR_1 036A  
                    _T0CS 040D                      u1017 00CE                      u1107 03B1  
                    u1027 01AD                      u1117 03BC                      u1037 01D7  
                    u1127 03C7                      u1047 01E1                      u1137 05C5  
                    u1057 037A                      u1147 0459                      u1067 0385  
                    u1157 0480                      u1077 0390                      u1167 05B6  
                    u1087 039B                      u1097 03A6                      _TMR0 0001  
                    _TMR1 000E              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 0028                      _rand 0036                      _text 0034  
                    btemp 007E                      _user 003B                      start 000B  
       ___bmul@multiplier 0023             __CFG_MCLRE$ON 0000                i1lcd_cmd@c 0073  
         ??_lcd_clear_all 0024                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of___awmod 0418                     i1l152 0530                     i1l147 0529  
                   i1l148 0522                     _PORTA 0005                     _PORTB 0006  
                   u46_25 04C0                     _TRISA 0085                     _TRISB 0086  
          __CFG_CCPMX$RB0 0000              lcd_print@pos 0028           __end_of_lcd_cmd 0484  
                   _print 0040                     _users 035C            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_testing 0537          __end_ofi1_enable 05D5  
                   status 0003                     wtemp0 007E           __initialization 000D  
      __size_ofi1_lcd_cmd 002F              __end_of_main 01E7                    ??_main 0030  
 __end_ofi1_lcd_clear_all 05DF          ??_lcd_clear_line 0024                    _INT0IE 005C  
                  _INT0IF 0059                    i1l1451 0524                    u120_27 05CE  
                  u117_27 05DB                    u118_27 04BA                    u119_27 04DF  
                  _TMR0IE 005D                    _TMR0IF 005A           lcd_clear_line@i 0026  
          __CFG_PWRTE$OFF 0000             lcd_print@line 0027             lcd_print@size 0026  
           lcd_print@text 0024          __end_of_lcd_data 057C          __end_of_lcd_init 03CB  
                  ___bmul 059C                    ___wmul 0537                 ??___awmod 0027  
                  _enable 05AF                    _chores 0212                    _asleep 003C  
                  _lastrb 0079                    _random 04E3           ___awmod@divisor 0023  
                  _scores 0077           ___awmod@counter 0028                 ??_lcd_cmd 0021  
                  _strlen 057C                    saved_w 007E                 ??_testing 0075  
       __end_ofi1_lcd_cmd 04E3   __end_of__initialization 0025       ___bmul@multiplicand 0020  
          __pcstackCOMMON 0070              __pidataBANK0 05DF             __end_of_users 036A  
        ?i1_lcd_clear_all 0070                 ?i1_enable 0070               random@count 0038  
      __size_of_lcd_print 0039                __pbssBANK0 0034                __pmaintext 0028  
                 ?___bmul 0020                   ?___wmul 002A                __pintentry 0004  
                 ?_enable 0070                   ?_random 0070                   ?_strlen 0020  
              ??i1_enable 0070                 ?_lcd_data 0070                 ?_lcd_init 0070  
              __stringtab 0200            random@original 0022              strlen@result 0025  
         __size_of___bmul 0013         __end_of_lcd_print 0451              strlen@string 0020  
                 ___awmod 03CB           __size_of___wmul 0023           __size_of_enable 000E  
         __size_of_random 002D     __end_of_lcd_clear_all 05C9                   __ptext1 057C  
                 __ptext2 04E3                   __ptext3 0418                   __ptext4 0376  
                 __ptext5 0484                   __ptext6 055A                   __ptext7 05BD  
                 __ptext8 0451                   __ptext9 05AF                   _lcd_cmd 0451  
         __size_of_strlen 0020          ___awmod@dividend 0025                   _testing 0510  
              ??_lcd_data 0021                ??_lcd_init 0024      end_of_initialization 0025  
            __pstringtext 0200                   strlen@i 0023        lcd_clear_line@line 0025  
               i1_lcd_cmd 04B4            __end_of___bmul 05AF            __end_of___wmul 055A  
          __end_of_enable 05BD            __end_of_chores 035C            __end_of_random 0510  
          __end_of_strlen 059C       start_initialization 000D         __size_ofi1_enable 000C  
 __size_of_lcd_clear_line 0030                ?i1_lcd_cmd 0070          lcd_print@pointer 002A  
                ??___bmul 0021                  ??___wmul 002E                  ??_enable 0020  
             __pdataBANK0 003E                  ??_random 0020                  ??_strlen 0022  
             __pbssCOMMON 0077                 ___latbits 0001             __pcstackBANK0 0020  
__size_ofi1_lcd_clear_all 000A                random@rand 0039                random@rbit 0021  
       __size_of_lcd_data 0022         __size_of_lcd_init 0055                  ?___awmod 0023  
               _lcd_print 0418                  ?_lcd_cmd 0070                  ?_testing 0070  
             ??i1_lcd_cmd 0071         interrupt_function 0004            ___wmul@product 002E  
               _long_text 003A                 _space_pos 003E                 lcd_data@d 0023  
              ?_lcd_print 0024               __stringbase 0212         ___wmul@multiplier 002A  
                i1_enable 05C9               _btn_pressed 003D            _lcd_clear_line 0484  
  __size_of_lcd_clear_all 000C         ??i1_lcd_clear_all 0074          __size_of___awmod 004D  
      __end_of__stringtab 0212          __size_of_lcd_cmd 0033    __end_of_lcd_clear_line 04B4  
                __ptext10 0537                  __ptext11 059C                  __ptext12 03CB  
                __ptext13 0510                  __ptext14 05D5                  __ptext15 04B4  
                __ptext16 05C9                  _lcd_data 055A                  _lcd_init 0376  
        __size_of_testing 0027             __size_of_main 01BF                  lcd_cmd@c 0023  
             ??_lcd_print 0029             _lcd_clear_all 05BD           ?_lcd_clear_line 0070  
                intlevel1 0000                 stringcode 020A            ?_lcd_clear_all 0070  
                stringtab 0200        __CFG_FOSC$INTOSCIO 0000  
