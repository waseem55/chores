Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1087 ../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1087: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1149
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1149: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"166
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 166: extern volatile unsigned char PORTA __attribute__((address(0x005)));
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"228
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 228: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"2335
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2335: extern volatile __bit INT0IF __attribute__((address(0x59)));
[v _INT0IF `Vb ~T0 @X0 0 e@89 ]
"2332
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2332: extern volatile __bit INT0IE __attribute__((address(0x5C)));
[v _INT0IE `Vb ~T0 @X0 0 e@92 ]
"2530
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2530: extern volatile __bit T0CS __attribute__((address(0x40D)));
[v _T0CS `Vb ~T0 @X0 0 e@1037 ]
"2386
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2386: extern volatile __bit PSA __attribute__((address(0x40B)));
[v _PSA `Vb ~T0 @X0 0 e@1035 ]
"2383
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2383: extern volatile __bit PS2 __attribute__((address(0x40A)));
[v _PS2 `Vb ~T0 @X0 0 e@1034 ]
"2380
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2380: extern volatile __bit PS1 __attribute__((address(0x409)));
[v _PS1 `Vb ~T0 @X0 0 e@1033 ]
"2377
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2377: extern volatile __bit PS0 __attribute__((address(0x408)));
[v _PS0 `Vb ~T0 @X0 0 e@1032 ]
"2557
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2557: extern volatile __bit TMR0IE __attribute__((address(0x5D)));
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"2308
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2308: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"15 ./LCD.h
[; ;./LCD.h: 15: void lcd_init(void);
[v _lcd_init `(v ~T0 @X0 0 ef ]
"53 Main.c
[; ;Main.c: 53: char random(void);
[v _random `(uc ~T0 @X0 0 ef ]
"18 ./LCD.h
[; ;./LCD.h: 18: void lcd_clear_all();
[v _lcd_clear_all `(v ~T0 @X0 0 e? ]
"54 Main.c
[; ;Main.c: 54: unsigned char strlen(unsigned char string[]);
[v _strlen `(uc ~T0 @X0 0 ef1`*uc ]
"17 ./LCD.h
[; ;./LCD.h: 17: void lcd_print(unsigned char *text, unsigned char size, unsigned char line, unsigned char pos);
[v _lcd_print `(v ~T0 @X0 0 ef4`*uc`uc`uc`uc ]
[v F758 `(v ~T0 @X0 1 tf1`ul ]
"92 ../../../../Microchip/xc8/v2.05/pic/include\pic.h
[v __delay `JF758 ~T0 @X0 0 e ]
[p i __delay ]
"19 ./LCD.h
[; ;./LCD.h: 19: void lcd_clear_line(unsigned char line);
[v _lcd_clear_line `(v ~T0 @X0 0 ef1`uc ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"13
[; ;./LCD.h: 13: void lcd_cmd(unsigned char c);
[v _lcd_cmd `(v ~T0 @X0 0 ef1`uc ]
"59 ../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 59: extern volatile unsigned char TMR0 __attribute__((address(0x001)));
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"478
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 478: extern volatile unsigned short TMR1 __attribute__((address(0x00E)));
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
"2560
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2560: extern volatile __bit TMR0IF __attribute__((address(0x5A)));
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"2410
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2410: extern volatile __bit RA7 __attribute__((address(0x2F)));
[v _RA7 `Vb ~T0 @X0 0 e@47 ]
"16 Main.c
[p x FOSC = INTOSCIO ]
"17
[p x WDTE = OFF ]
"18
[p x PWRTE = OFF ]
"19
[p x MCLRE = ON ]
"20
[p x BOREN = OFF ]
"21
[p x LVP = OFF ]
"22
[p x CPD = OFF ]
"23
[p x WRT = OFF ]
"24
[p x CCPMX = RB0 ]
"25
[p x CP = OFF ]
"28
[p x FCMEN = ON ]
"29
[p x IESO = ON ]
"54 ../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 292: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"312
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 312: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"390
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 390: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"446
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 446: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"480
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 480: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"487
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 487: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"494
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 494: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"501
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 501: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"573
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 573: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"580
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 580: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"651
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 651: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"658
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 658: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"728
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 728: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"735
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 735: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"742
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 742: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"749
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 749: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"807
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 807: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"902
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 902: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"909
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 909: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"916
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 916: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"923
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 923: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1019
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1019: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1089
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1089: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1151
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1151: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1213
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1213: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1269
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1269: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1303
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1303: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1337
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1337: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1408
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1408: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1466
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1466: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1473
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1473: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1480
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1480: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1649
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1649: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"1730
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1730: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"1737
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1737: __asm("ANSEL equ 09Bh");
[; <" ANSEL equ 09Bh ;# ">
"1793
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1793: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"1863
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1863: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"1928
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1928: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"1935
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1935: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"1983
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 1983: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"2041
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2041: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2048
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2048: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2055
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2055: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2062
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2062: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2069
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2069: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2120
[; ;../../../../Microchip/xc8/v2.05/pic/include\pic16f88.h: 2120: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"38 Main.c
[; ;Main.c: 38: int rand = 0;
[v _rand `i ~T0 @X0 1 e ]
[i _rand
-> 0 `i
]
"39
[; ;Main.c: 39: int space_pos = 16;
[v _space_pos `i ~T0 @X0 1 e ]
[i _space_pos
-> 16 `i
]
"40
[; ;Main.c: 40: unsigned char btn_pressed = 0;
[v _btn_pressed `uc ~T0 @X0 1 e ]
[i _btn_pressed
-> -> 0 `i `uc
]
"41
[; ;Main.c: 41: unsigned char lcd_off = 0;
[v _lcd_off `uc ~T0 @X0 1 e ]
[i _lcd_off
-> -> 0 `i `uc
]
"42
[; ;Main.c: 42: unsigned char user = 0;
[v _user `uc ~T0 @X0 1 e ]
[i _user
-> -> 0 `i `uc
]
"43
[; ;Main.c: 43: unsigned char lastrb = 0;
[v _lastrb `uc ~T0 @X0 1 e ]
[i _lastrb
-> -> 0 `i `uc
]
[v F787 `Cuc ~T0 @X0 -> 7 `i t ]
"44
[; ;Main.c: 44: const char users[2][7] = {"Waseem","Hiba"};
[v _users `F787 ~T0 @X0 -> 2 `i e ]
[i _users
:U ..
:U ..
-> 87 `c
-> 97 `c
-> 115 `c
-> 101 `c
-> 101 `c
-> 109 `c
-> 0 `c
..
:U ..
-> 72 `c
-> 105 `c
-> 98 `c
-> 97 `c
-> 0 `c
..
..
]
[v F789 `Cuc ~T0 @X0 -> 30 `i t ]
"45
[; ;Main.c: 45: const char chores[11][30] = {"Vacuum","Clean bathroom","Mop floor","Wash bed sheets",
[v _chores `F789 ~T0 @X0 -> 11 `i e ]
[i _chores
:U ..
:U ..
-> 86 `c
-> 97 `c
-> 99 `c
-> 117 `c
-> 117 `c
-> 109 `c
-> 0 `c
..
:U ..
-> 67 `c
-> 108 `c
-> 101 `c
-> 97 `c
-> 110 `c
-> 32 `c
-> 98 `c
-> 97 `c
-> 116 `c
-> 104 `c
-> 114 `c
-> 111 `c
-> 111 `c
-> 109 `c
-> 0 `c
..
:U ..
-> 77 `c
-> 111 `c
-> 112 `c
-> 32 `c
-> 102 `c
-> 108 `c
-> 111 `c
-> 111 `c
-> 114 `c
-> 0 `c
..
:U ..
-> 87 `c
-> 97 `c
-> 115 `c
-> 104 `c
-> 32 `c
-> 98 `c
-> 101 `c
-> 100 `c
-> 32 `c
-> 115 `c
-> 104 `c
-> 101 `c
-> 101 `c
-> 116 `c
-> 115 `c
-> 0 `c
..
:U ..
-> 87 `c
-> 97 `c
-> 115 `c
-> 104 `c
-> 32 `c
-> 99 `c
-> 117 `c
-> 114 `c
-> 116 `c
-> 97 `c
-> 105 `c
-> 110 `c
-> 115 `c
-> 0 `c
..
:U ..
-> 68 `c
-> 117 `c
-> 115 `c
-> 116 `c
-> 105 `c
-> 110 `c
-> 103 `c
-> 0 `c
..
:U ..
-> 67 `c
-> 108 `c
-> 101 `c
-> 97 `c
-> 110 `c
-> 32 `c
-> 109 `c
-> 105 `c
-> 99 `c
-> 114 `c
-> 111 `c
-> 119 `c
-> 97 `c
-> 118 `c
-> 101 `c
-> 0 `c
..
:U ..
-> 83 `c
-> 99 `c
-> 114 `c
-> 117 `c
-> 98 `c
-> 32 `c
-> 100 `c
-> 111 `c
-> 111 `c
-> 114 `c
-> 115 `c
-> 32 `c
-> 97 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 99 `c
-> 97 `c
-> 98 `c
-> 105 `c
-> 110 `c
-> 101 `c
-> 116 `c
-> 115 `c
-> 0 `c
..
:U ..
-> 79 `c
-> 114 `c
-> 103 `c
-> 97 `c
-> 110 `c
-> 105 `c
-> 122 `c
-> 101 `c
-> 32 `c
-> 99 `c
-> 108 `c
-> 111 `c
-> 115 `c
-> 101 `c
-> 116 `c
-> 0 `c
..
:U ..
-> 67 `c
-> 108 `c
-> 101 `c
-> 97 `c
-> 110 `c
-> 32 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 101 `c
-> 114 `c
-> 32 `c
-> 115 `c
-> 105 `c
-> 110 `c
-> 107 `c
-> 115 `c
-> 0 `c
..
:U ..
-> 67 `c
-> 108 `c
-> 101 `c
-> 97 `c
-> 110 `c
-> 32 `c
-> 102 `c
-> 114 `c
-> 105 `c
-> 100 `c
-> 103 `c
-> 101 `c
-> 0 `c
..
..
]
"49
[; ;Main.c: 49: unsigned char *text;
[v _text `*uc ~T0 @X0 1 e ]
"50
[; ;Main.c: 50: unsigned char long_text;
[v _long_text `uc ~T0 @X0 1 e ]
"51
[; ;Main.c: 51: unsigned char scores[] = {0, 0};
[v _scores `uc ~T0 @X0 -> 2 `i e ]
[i _scores
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v $root$_main `(v ~T0 @X0 0 e ]
"56
[; ;Main.c: 56: void main()
[v _main `(v ~T0 @X0 1 ef ]
"57
[; ;Main.c: 57: {
{
[e :U _main ]
[f ]
"58
[; ;Main.c: 58:     TRISA = 0xc0;
[e = _TRISA -> -> 192 `i `uc ]
"59
[; ;Main.c: 59:     TRISB = 0x01;
[e = _TRISB -> -> 1 `i `uc ]
"60
[; ;Main.c: 60:     PORTA = 0x00;
[e = _PORTA -> -> 0 `i `uc ]
"61
[; ;Main.c: 61:     PORTB = 0x00;
[e = _PORTB -> -> 0 `i `uc ]
"63
[; ;Main.c: 63:     INT0IF = 0;
[e = _INT0IF -> -> 0 `i `b ]
"64
[; ;Main.c: 64:     INT0IE = 1;
[e = _INT0IE -> -> 1 `i `b ]
"65
[; ;Main.c: 65:     T0CS = 0;
[e = _T0CS -> -> 0 `i `b ]
"66
[; ;Main.c: 66:     PSA = 0;
[e = _PSA -> -> 0 `i `b ]
"67
[; ;Main.c: 67:     PS2 = 1;
[e = _PS2 -> -> 1 `i `b ]
"68
[; ;Main.c: 68:     PS1 = 1;
[e = _PS1 -> -> 1 `i `b ]
"69
[; ;Main.c: 69:     PS0 = 1;
[e = _PS0 -> -> 1 `i `b ]
"70
[; ;Main.c: 70:     TMR0IE = 0;
[e = _TMR0IE -> -> 0 `i `b ]
"72
[; ;Main.c: 72:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"75
[; ;Main.c: 75:     lcd_init();
[e ( _lcd_init ..  ]
"77
[; ;Main.c: 77:     rand = (random()%10);
[e = _rand % -> ( _random ..  `i -> 10 `i ]
"78
[; ;Main.c: 78:     text = &chores[rand % 11][0];
[e = _text -> &U *U + &U *U + &U _chores * -> -> % _rand -> 11 `i `ui `ux -> * -> # *U &U *U &U _chores `ui -> -> 30 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _chores * -> -> % _rand -> 11 `i `ui `ux -> * -> # *U &U *U &U _chores `ui -> -> 30 `i `ui `ux `ui `ux `*uc ]
"80
[; ;Main.c: 80:     while (1){
[e :U 90 ]
{
"81
[; ;Main.c: 81:         lcd_clear_all();
[e ( _lcd_clear_all ..  ]
"82
[; ;Main.c: 82:         if (strlen(text) > 16)
[e $ ! > -> ( _strlen (1 _text `i -> 16 `i 92  ]
"83
[; ;Main.c: 83:             {
{
"84
[; ;Main.c: 84:                 for (space_pos = 16; text[space_pos] != ' ' && space_pos != 0; space_pos--);
{
[e = _space_pos -> 16 `i ]
[e $U 96  ]
[e :U 93 ]
[e -- _space_pos -> 1 `i ]
[e :U 96 ]
[e $ && != -> *U + _text * -> _space_pos `x -> -> # *U _text `i `x `ui -> 32 `ui != _space_pos -> 0 `i 93  ]
[e :U 94 ]
}
"85
[; ;Main.c: 85:                 long_text = 1;
[e = _long_text -> -> 1 `i `uc ]
"86
[; ;Main.c: 86:             }
}
[e :U 92 ]
"87
[; ;Main.c: 87:         lcd_print(text, space_pos, 0, 0);
[e ( _lcd_print (4 , , , _text -> _space_pos `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
"88
[; ;Main.c: 88:         lcd_print(&users[user][0], 6, 1, 0);
[e ( _lcd_print (4 , , , -> &U *U + &U *U + &U _users * -> _user `ux -> * -> # *U &U *U &U _users `ui -> -> 7 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _users * -> _user `ux -> * -> # *U &U *U &U _users `ui -> -> 7 `i `ui `ux `ui `ux `*uc -> -> 6 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"89
[; ;Main.c: 89:         if (strlen(text) > 16)
[e $ ! > -> ( _strlen (1 _text `i -> 16 `i 97  ]
"90
[; ;Main.c: 90:         {
{
"91
[; ;Main.c: 91:             _delay((unsigned long)((300)*(31000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 31000 `i `d .4000.0 `ul ]
"92
[; ;Main.c: 92:             lcd_clear_line(0);
[e ( _lcd_clear_line (1 -> -> 0 `i `uc ]
"93
[; ;Main.c: 93:             lcd_print(text+space_pos+1, 16, 0, 0);
[e ( _lcd_print (4 , , , + + _text * -> _space_pos `x -> -> # *U _text `i `x * -> -> 1 `i `x -> -> # *U + _text * -> _space_pos `x -> -> # *U _text `i `x `i `x -> -> 16 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
"94
[; ;Main.c: 94:         }
}
[e :U 97 ]
"95
[; ;Main.c: 95:         if (btn_pressed)
[e $ ! != -> _btn_pressed `i -> 0 `i 98  ]
"96
[; ;Main.c: 96:         {
{
"97
[; ;Main.c: 97:             rand = (random()%10);
[e = _rand % -> ( _random ..  `i -> 10 `i ]
"98
[; ;Main.c: 98:             text = &chores[rand % 11][0];
[e = _text -> &U *U + &U *U + &U _chores * -> -> % _rand -> 11 `i `ui `ux -> * -> # *U &U *U &U _chores `ui -> -> 30 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _chores * -> -> % _rand -> 11 `i `ui `ux -> * -> # *U &U *U &U _chores `ui -> -> 30 `i `ui `ux `ui `ux `*uc ]
"99
[; ;Main.c: 99:             user = rand%2;
[e = _user -> % _rand -> 2 `i `uc ]
"100
[; ;Main.c: 100:             btn_pressed = 0;
[e = _btn_pressed -> -> 0 `i `uc ]
"101
[; ;Main.c: 101:         }
}
[e :U 98 ]
"102
[; ;Main.c: 102:         _delay((unsigned long)((1000)*(31000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 31000 `i `d .4000.0 `ul ]
"105
[; ;Main.c: 105:     }
}
[e :U 89 ]
[e $U 90  ]
[e :U 91 ]
"106
[; ;Main.c: 106: }
[e :UE 88 ]
}
[v $root$_testing `(v ~T0 @X0 0 e ]
"108
[; ;Main.c: 108: void __attribute__((picinterrupt(("")))) testing(void)
[v _testing `(v ~T1 @X0 1 ef ]
"109
[; ;Main.c: 109: {
{
[e :U _testing ]
[f ]
"110
[; ;Main.c: 110:     if (INT0IF == 1)
[e $ ! == -> _INT0IF `i -> 1 `i 100  ]
"111
[; ;Main.c: 111:     {
{
"112
[; ;Main.c: 112:         if (lcd_off)
[e $ ! != -> _lcd_off `i -> 0 `i 101  ]
"113
[; ;Main.c: 113:         {
{
"114
[; ;Main.c: 114:             lcd_cmd(0x0c);
[e ( _lcd_cmd (1 -> -> 12 `i `uc ]
"115
[; ;Main.c: 115:             lcd_clear_all();
[e ( _lcd_clear_all ..  ]
"116
[; ;Main.c: 116:             _delay((unsigned long)((50)*(31000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 31000 `i `d .4000.0 `ul ]
"117
[; ;Main.c: 117:             lcd_off = 0;
[e = _lcd_off -> -> 0 `i `uc ]
"118
[; ;Main.c: 118:         }
}
[e $U 102  ]
"119
[; ;Main.c: 119:         else
[e :U 101 ]
"120
[; ;Main.c: 120:             btn_pressed = 1;
[e = _btn_pressed -> -> 1 `i `uc ]
[e :U 102 ]
"121
[; ;Main.c: 121:         TMR0 = 0;
[e = _TMR0 -> -> 0 `i `uc ]
"122
[; ;Main.c: 122:         TMR1 = 0;
[e = _TMR1 -> -> 0 `i `us ]
"123
[; ;Main.c: 123:         INT0IF = 0;
[e = _INT0IF -> -> 0 `i `b ]
"124
[; ;Main.c: 124:     }
}
[e $U 103  ]
"125
[; ;Main.c: 125:     else if (TMR0IF)
[e :U 100 ]
[e $ ! _TMR0IF 104  ]
"126
[; ;Main.c: 126:     {
{
"127
[; ;Main.c: 127:         lcd_off = 1;
[e = _lcd_off -> -> 1 `i `uc ]
"128
[; ;Main.c: 128:         lcd_clear_line(0);
[e ( _lcd_clear_line (1 -> -> 0 `i `uc ]
"129
[; ;Main.c: 129:         lcd_print("sleep time!", 16, 0, 0);
[e ( _lcd_print (4 , , , :s 1C -> -> 16 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
"130
[; ;Main.c: 130:         _delay((unsigned long)((500)*(31000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 31000 `i `d .4000.0 `ul ]
"131
[; ;Main.c: 131:         lcd_cmd(0x08);
[e ( _lcd_cmd (1 -> -> 8 `i `uc ]
"132
[; ;Main.c: 132:         TMR0IF = 0;
[e = _TMR0IF -> -> 0 `i `b ]
"133
[; ;Main.c: 133:         __asm("sleep");
[; <" sleep ;# ">
"134
[; ;Main.c: 134:     }
}
[e :U 104 ]
[e :U 103 ]
"135
[; ;Main.c: 135: }
[e :UE 99 ]
}
"138
[; ;Main.c: 138: char* itoa (int x)
[v _itoa `(*uc ~T0 @X0 1 ef1`i ]
"139
[; ;Main.c: 139: {
{
[e :U _itoa ]
"138
[; ;Main.c: 138: char* itoa (int x)
[v _x `i ~T0 @X0 1 r1 ]
"139
[; ;Main.c: 139: {
[f ]
"140
[; ;Main.c: 140:     int original = x;
[v _original `i ~T0 @X0 1 a ]
[e = _original _x ]
"141
[; ;Main.c: 141:     char buffer[8];
[v _buffer `uc ~T0 @X0 -> 8 `i a ]
"143
[; ;Main.c: 143:     int c = sizeof(buffer)-1;
[v _c `i ~T0 @X0 1 a ]
[e = _c -> - -> # _buffer `ui -> -> 1 `i `ui `i ]
"145
[; ;Main.c: 145:     buffer[c] = 0;
[e = *U + &U _buffer * -> -> _c `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 0 `i `uc ]
"147
[; ;Main.c: 147:     if (x < 0)
[e $ ! < _x -> 0 `i 106  ]
"148
[; ;Main.c: 148:         x = -x;
[e = _x -U _x ]
[e :U 106 ]
"150
[; ;Main.c: 150:     do{
[e :U 109 ]
{
"151
[; ;Main.c: 151:         buffer[--c] = (x%10) + '0';
[e = *U + &U _buffer * -> -> =- _c -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> + -> % _x -> 10 `i `ui -> 48 `ui `uc ]
"152
[; ;Main.c: 152:         x /= 10;
[e =/ _x -> 10 `i ]
"153
[; ;Main.c: 153:     }while (x);
}
[e $ != _x -> 0 `i 109  ]
[e :U 108 ]
"155
[; ;Main.c: 155:     if (original < 0)
[e $ ! < _original -> 0 `i 110  ]
"156
[; ;Main.c: 156:         buffer[--c] = '-';
[e = *U + &U _buffer * -> -> =- _c -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 45 `ui `uc ]
[e :U 110 ]
"157
[; ;Main.c: 157:     return &buffer[c];
[e ) &U *U + &U _buffer * -> -> _c `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e $UE 105  ]
"158
[; ;Main.c: 158: }
[e :UE 105 ]
}
"161
[; ;Main.c: 161: char random(void)
[v _random `(uc ~T0 @X0 1 ef ]
"162
[; ;Main.c: 162: {
{
[e :U _random ]
[f ]
"163
[; ;Main.c: 163:     static char rand;
[v F809 `uc ~T0 @X0 1 s rand ]
"164
[; ;Main.c: 164:     static char count = 0;
[v F810 `uc ~T0 @X0 1 s count ]
[i F810
-> -> 0 `i `uc
]
"165
[; ;Main.c: 165:     char original = rand;
[v _original `uc ~T0 @X0 1 a ]
[e = _original F809 ]
"166
[; ;Main.c: 166:     char rbit = 0;
[v _rbit `uc ~T0 @X0 1 a ]
[e = _rbit -> -> 0 `i `uc ]
"168
[; ;Main.c: 168:     if (count == 0){
[e $ ! == -> F810 `i -> 0 `i 112  ]
{
"169
[; ;Main.c: 169:         while (RA7 == 0){
[e $U 113  ]
[e :U 114 ]
{
"170
[; ;Main.c: 170:         }
}
[e :U 113 ]
"169
[; ;Main.c: 169:         while (RA7 == 0){
[e $ == -> _RA7 `i -> 0 `i 114  ]
[e :U 115 ]
"171
[; ;Main.c: 171:         count = 1;
[e = F810 -> -> 1 `i `uc ]
"172
[; ;Main.c: 172:         rand = TMR0;
[e = F809 -> _TMR0 `uc ]
"173
[; ;Main.c: 173:         TMR0 = 0;
[e = _TMR0 -> -> 0 `i `uc ]
"174
[; ;Main.c: 174:         TMR0IE = 1;
[e = _TMR0IE -> -> 1 `i `b ]
"175
[; ;Main.c: 175:         return rand;
[e ) F809 ]
[e $UE 111  ]
"176
[; ;Main.c: 176:     }
}
[e :U 112 ]
"178
[; ;Main.c: 178:     original &= 180;
[e =& _original -> -> 180 `i `uc ]
"179
[; ;Main.c: 179:     while(original){
[e $U 116  ]
[e :U 117 ]
{
"180
[; ;Main.c: 180:         rbit ^= (original & 1);
[e =^ _rbit -> & -> _original `i -> 1 `i `uc ]
"181
[; ;Main.c: 181:         original >>= 1;
[e =>> _original -> -> 1 `i `uc ]
"182
[; ;Main.c: 182:         original &= (~(1<<7));
[e =& _original -> ~ << -> 1 `i -> 7 `i `uc ]
"183
[; ;Main.c: 183:     }
}
[e :U 116 ]
"179
[; ;Main.c: 179:     while(original){
[e $ != -> _original `i -> 0 `i 117  ]
[e :U 118 ]
"184
[; ;Main.c: 184:     rand <<= 1;
[e =<< F809 -> -> 1 `i `uc ]
"185
[; ;Main.c: 185:     rand |= rbit;
[e =| F809 -> _rbit `uc ]
"186
[; ;Main.c: 186:     return rand;
[e ) F809 ]
[e $UE 111  ]
"187
[; ;Main.c: 187: }
[e :UE 111 ]
}
"189
[; ;Main.c: 189: unsigned char strlen( unsigned char string[])
[v _strlen `(uc ~T0 @X0 1 ef1`*uc ]
"190
[; ;Main.c: 190: {
{
[e :U _strlen ]
"189
[; ;Main.c: 189: unsigned char strlen( unsigned char string[])
[v _string `*uc ~T0 @X0 1 r1 ]
"190
[; ;Main.c: 190: {
[f ]
"191
[; ;Main.c: 191:     int i = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"192
[; ;Main.c: 192:     unsigned char result = 0;
[v _result `uc ~T0 @X0 1 a ]
[e = _result -> -> 0 `i `uc ]
"193
[; ;Main.c: 193:     while (string[i] != 0)
[e $U 120  ]
[e :U 121 ]
"194
[; ;Main.c: 194:     {
{
"195
[; ;Main.c: 195:         i++;
[e ++ _i -> 1 `i ]
"196
[; ;Main.c: 196:         result++;
[e ++ _result -> -> 1 `i `uc ]
"197
[; ;Main.c: 197:     }
}
[e :U 120 ]
"193
[; ;Main.c: 193:     while (string[i] != 0)
[e $ != -> *U + _string * -> _i `x -> -> # *U _string `i `x `i -> 0 `i 121  ]
[e :U 122 ]
"198
[; ;Main.c: 198:     return result;
[e ) _result ]
[e $UE 119  ]
"199
[; ;Main.c: 199: }
[e :UE 119 ]
}
[a 1C 115 108 101 101 112 32 116 105 109 101 33 0 ]
